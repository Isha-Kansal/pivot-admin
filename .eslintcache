[{"/Volumes/DATA/Isha Kansal/reactjs/pivot-admin/src/index.js":"1","/Volumes/DATA/Isha Kansal/reactjs/pivot-admin/src/App.js":"2","/Volumes/DATA/Isha Kansal/reactjs/pivot-admin/src/reportWebVitals.js":"3","/Volumes/DATA/Isha Kansal/pivot-admin/src/index.js":"4","/Volumes/DATA/Isha Kansal/pivot-admin/src/App.js":"5","/Volumes/DATA/Isha Kansal/pivot-admin/src/store/index.js":"6","/Volumes/DATA/Isha Kansal/pivot-admin/src/polyfill.js":"7","/Volumes/DATA/Isha Kansal/pivot-admin/src/serviceWorker.js":"8","/Volumes/DATA/Isha Kansal/pivot-admin/src/store/sagas/index.js":"9","/Volumes/DATA/Isha Kansal/pivot-admin/src/store/reducers/index.js":"10","/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/TheLayout.js":"11","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/login/Login.js":"12","/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/index.js":"13","/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/TheSidebar.js":"14","/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/TheHeaderDropdown.js":"15","/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/TheHeader.js":"16","/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/TheContent.js":"17","/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/_nav.js":"18","/Volumes/DATA/Isha Kansal/pivot-admin/src/routes.js":"19","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/resources/Resources.js":"20","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/users/Users.js":"21","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/planners/Planners.js":"22","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/experts/Experts.js":"23","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/users/User.js":"24","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/experts/AddExpert.js":"25","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/resources/AddResource.js":"26","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/store/sagas.js":"27","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/store/types.js":"28","/Volumes/DATA/Isha Kansal/pivot-admin/src/common/axios.js":"29","/Volumes/DATA/Isha Kansal/pivot-admin/src/config.js":"30","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/store/reducer.js":"31","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/store/action.js":"32","/Volumes/DATA/Isha Kansal/pivot-admin/src/loader/index.js":"33","/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/icons.js":"34","/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/logo.js":"35","/Volumes/DATA/Isha Kansal/pivot-admin/src/assets/icons/index.js":"36","/Volumes/DATA/Isha Kansal/pivot-admin/src/common/commonModal.js":"37","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/resources/Resource.js":"38","/Volumes/DATA/Isha Kansal/pivot-admin/src/common/stringFunction.js":"39","/Volumes/DATA/Isha Kansal/pivot-admin/src/common/toolTip.js":"40","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/experts/ExpertsData.js":"41","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/experts/Expert.js":"42","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/experts/ExpertsFieldsData.js":"43","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/resources/ResourcesFieldsData.js":"44"},{"size":500,"mtime":1612329326000,"results":"45","hashOfConfig":"46"},{"size":195,"mtime":1612330254000,"results":"47","hashOfConfig":"46"},{"size":362,"mtime":1612329326000,"results":"48","hashOfConfig":"46"},{"size":933,"mtime":1612777214000,"results":"49","hashOfConfig":"50"},{"size":2075,"mtime":1613734933000,"results":"51","hashOfConfig":"50"},{"size":774,"mtime":1612498790000,"results":"52","hashOfConfig":"50"},{"size":1895,"mtime":1612498790000,"results":"53","hashOfConfig":"50"},{"size":4686,"mtime":1612498790000,"results":"54","hashOfConfig":"50"},{"size":179,"mtime":1612762089000,"results":"55","hashOfConfig":"50"},{"size":186,"mtime":1612844550000,"results":"56","hashOfConfig":"50"},{"size":380,"mtime":1612498790000,"results":"57","hashOfConfig":"50"},{"size":5940,"mtime":1613734933000,"results":"58","hashOfConfig":"50"},{"size":284,"mtime":1612498790000,"results":"59","hashOfConfig":"50"},{"size":1293,"mtime":1612777470000,"results":"60","hashOfConfig":"50"},{"size":419,"mtime":1613735310000,"results":"61","hashOfConfig":"50"},{"size":765,"mtime":1613028365000,"results":"62","hashOfConfig":"50"},{"size":1164,"mtime":1612770427000,"results":"63","hashOfConfig":"50"},{"size":671,"mtime":1612776278000,"results":"64","hashOfConfig":"50"},{"size":1695,"mtime":1613734933000,"results":"65","hashOfConfig":"50"},{"size":8146,"mtime":1613735030000,"results":"66","hashOfConfig":"50"},{"size":8670,"mtime":1613734933000,"results":"67","hashOfConfig":"50"},{"size":709,"mtime":1612776116000,"results":"68","hashOfConfig":"50"},{"size":5841,"mtime":1613455166000,"results":"69","hashOfConfig":"50"},{"size":6166,"mtime":1613734933000,"results":"70","hashOfConfig":"50"},{"size":23176,"mtime":1613559397000,"results":"71","hashOfConfig":"50"},{"size":28920,"mtime":1613735223000,"results":"72","hashOfConfig":"50"},{"size":6482,"mtime":1613734689000,"results":"73","hashOfConfig":"50"},{"size":2007,"mtime":1613641378000,"results":"74","hashOfConfig":"50"},{"size":1354,"mtime":1613710459000,"results":"75","hashOfConfig":"50"},{"size":173,"mtime":1613708098000,"results":"76","hashOfConfig":"50"},{"size":4560,"mtime":1613642390000,"results":"77","hashOfConfig":"50"},{"size":1948,"mtime":1613641405000,"results":"78","hashOfConfig":"50"},{"size":340,"mtime":1613103961000,"results":"79","hashOfConfig":"50"},{"size":7217,"mtime":1612768792000,"results":"80","hashOfConfig":"50"},{"size":9997,"mtime":1612769714000,"results":"81","hashOfConfig":"50"},{"size":3924,"mtime":1612782108000,"results":"82","hashOfConfig":"50"},{"size":1580,"mtime":1613735310000,"results":"83","hashOfConfig":"50"},{"size":5543,"mtime":1613735070000,"results":"84","hashOfConfig":"50"},{"size":124,"mtime":1613034251000,"results":"85","hashOfConfig":"50"},{"size":424,"mtime":1613107911000,"results":"86","hashOfConfig":"50"},{"size":1378,"mtime":1613451990000,"results":"87","hashOfConfig":"50"},{"size":881,"mtime":1613454591000,"results":"88","hashOfConfig":"50"},{"size":973,"mtime":1613467089000,"results":"89","hashOfConfig":"50"},{"size":1485,"mtime":1613651299000,"results":"90","hashOfConfig":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"161ocxv",{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},"z7vibx",{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"99"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"99"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"99"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"99"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"99"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"99"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"99"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"99"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"99"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"99"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"99"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},"/Volumes/DATA/Isha Kansal/reactjs/pivot-admin/src/index.js",[],"/Volumes/DATA/Isha Kansal/reactjs/pivot-admin/src/App.js",[],"/Volumes/DATA/Isha Kansal/reactjs/pivot-admin/src/reportWebVitals.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/index.js",[],["191","192"],"/Volumes/DATA/Isha Kansal/pivot-admin/src/App.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/store/index.js",["193"],"import { applyMiddleware, createStore, compose } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport { rootReducer } from \"./reducers/index\";\nimport rootSaga from \"./sagas/index\";\nimport logger from \"redux-logger\";\n\nconst persistConfig = {\n  debug: false,\n  key: \"root\",\n  keyPrefix: \"v.1\",\n  storage,\n};\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = createStore(\n  persistedReducer,\n  compose(applyMiddleware(sagaMiddleware, logger))\n);\nexport const persistor = persistStore(store);\n\nsagaMiddleware.run(rootSaga);\nexport default { store, persistor };\n","/Volumes/DATA/Isha Kansal/pivot-admin/src/polyfill.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/serviceWorker.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/store/sagas/index.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/store/reducers/index.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/TheLayout.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/views/login/Login.js",["194"],"import React, { Component } from \"react\";\n\nimport { NotificationManager } from \"react-notifications\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CRow,\n} from \"@coreui/react\";\nimport Loader from \"../../loader\";\nimport { FormText } from \"reactstrap\";\nimport CIcon from \"@coreui/icons-react\";\nimport { loginByAdmin } from \"../store/action\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { withRouter } from \"react-router-dom\";\nclass Login extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      name: \"\",\n      password: \"\",\n      errorText: \"\",\n      errorType: \"\",\n\n      loading: false,\n    };\n  }\n  handleChange = (e, type) => {\n    e.preventDefault();\n    this.setState({\n      [type]: e.target.value,\n      errorText: \"\",\n      errorType: \"\",\n    });\n  };\n  onHandleSubmit = (e) => {\n    e && e.preventDefault();\n\n    const { name, password } = this.state;\n    if (name === \"\") {\n      this.setState({ errorText: \"Name can not be empty\", errorType: \"name\" });\n    } else if (password === \"\") {\n      this.setState({\n        errorText: \"Password can not be empty\",\n        errorType: \"password\",\n      });\n    } else this.authenticateAdmin();\n  };\n  authenticateAdmin = () => {\n    const { name, password } = this.state;\n    this.setState({\n      loading: true,\n    });\n    let formData = {\n      email: name,\n      password: password,\n    };\n\n    this.props.loginByAdmin(\"user/login\", formData, (value) => {\n      this.setState({\n        loading: false,\n      });\n\n      if (value.status === 200) {\n        localStorage.setItem(\"auth_token\", value.data.user.auth_token);\n        NotificationManager.success(\"Login Successfully\", \"\", 1000);\n\n        localStorage.setItem(\"isLoggedIn\", true);\n\n        this.props.history.push(\"/users\");\n      } else {\n        NotificationManager.error(\"Please enter valid credentials\", \"\", 1000);\n        this.setState({\n          name: \"\",\n          password: \"\",\n        });\n      }\n    });\n  };\n  onKeyDown = (e) => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n\n      this.onHandleSubmit();\n    }\n  };\n  render() {\n    const { errorText, errorType, loading, name, password } = this.state;\n\n    return (\n      <div className=\"c-app c-default-layout flex-row align-items-center\">\n        <CContainer>\n          <CRow className=\"justify-content-center\">\n            <CCol md=\"8\">\n              <CCardGroup className=\"position-relative\">\n                {loading && <Loader />}\n\n                <CCard className=\"p-4\">\n                  <CCardBody>\n                    <CForm onKeyDown={(e) => this.onKeyDown(e)}>\n                      <h1>Login</h1>\n                      <p className=\"text-muted\">Sign In to your account</p>\n                      <div className=\"mb-3\">\n                        <CInputGroup>\n                          <CInputGroupPrepend>\n                            <CInputGroupText>\n                              <CIcon name=\"cil-user\" />\n                            </CInputGroupText>\n                          </CInputGroupPrepend>\n                          <CInput\n                            type=\"text\"\n                            placeholder=\"Username\"\n                            autoComplete=\"username\"\n                            onChange={(e) => this.handleChange(e, \"name\")}\n                            value={name}\n                          />\n                        </CInputGroup>\n                        <p className=\"mb-0\">\n                          {errorType === \"name\" && (\n                            <FormText color=\"danger\" className=\"error\">\n                              {errorText}\n                            </FormText>\n                          )}\n                        </p>\n                      </div>\n                      <div className=\"mb-4\">\n                        <CInputGroup>\n                          <CInputGroupPrepend>\n                            <CInputGroupText>\n                              <CIcon name=\"cil-lock-locked\" />\n                            </CInputGroupText>\n                          </CInputGroupPrepend>\n                          <CInput\n                            type=\"password\"\n                            placeholder=\"Password\"\n                            autoComplete=\"current-password\"\n                            onChange={(e) => this.handleChange(e, \"password\")}\n                            value={password}\n                          />\n                        </CInputGroup>\n                        <p className=\"mb-0\">\n                          {\" \"}\n                          {errorType === \"password\" && (\n                            <FormText color=\"danger\" className=\"error\">\n                              {errorText}\n                            </FormText>\n                          )}\n                        </p>\n                      </div>\n\n                      <CRow>\n                        <CCol xs=\"6\">\n                          <CButton\n                            color=\"primary\"\n                            className=\"px-4\"\n                            onClick={this.onHandleSubmit}\n                            disabled={loading}\n                            className=\"login-btn\"\n                          >\n                            Login\n                          </CButton>\n                        </CCol>\n                        {/* <CCol xs=\"6\" className=\"text-right\">\n                          <CButton color=\"link\" className=\"px-0\">\n                            Forgot password?\n                          </CButton>\n                        </CCol> */}\n                      </CRow>\n                    </CForm>\n                  </CCardBody>\n                </CCard>\n              </CCardGroup>\n            </CCol>\n          </CRow>\n        </CContainer>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    {\n      loginByAdmin,\n    },\n    dispatch\n  );\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Login));\n","/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/index.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/TheSidebar.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/TheHeaderDropdown.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/TheHeader.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/TheContent.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/_nav.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/routes.js",["195"],"import React from \"react\";\n\nconst Users = React.lazy(() => import(\"./views/users/Users\"));\nconst User = React.lazy(() => import(\"./views/users/User\"));\nconst Resource = React.lazy(() => import(\"./views/resources/Resource\"));\nconst Planners = React.lazy(() => import(\"./views/planners/Planners\"));\nconst Experts = React.lazy(() => import(\"./views/experts/Experts\"));\nconst Expert = React.lazy(() => import(\"./views/experts/Expert\"));\nconst AddExpert = React.lazy(() => import(\"./views/experts/AddExpert\"));\nconst Resources = React.lazy(() => import(\"./views/resources/Resources\"));\nconst AddResource = React.lazy(() => import(\"./views/resources/AddResource\"));\nconst EditResource = React.lazy(() => import(\"./views/resources/EditResource\"));\n// const EditExpert = React.lazy(() => import(\"./views/resources/EditExpert\"));\nconst routes = [\n  { path: \"/users\", exact: true, name: \"Users\", component: Users },\n  { path: \"/users/:id\", exact: true, name: \"User Details\", component: User },\n  { path: \"/planners\", exact: true, name: \"Planners\", component: Planners },\n  { path: \"/experts\", exact: true, name: \"Experts\", component: Experts },\n  {\n    path: \"/experts/:id\",\n    exact: true,\n    name: \"Expert Details\",\n    component: Expert,\n  },\n  { path: \"/addExpert\", exact: true, name: \"Add Expert\", component: AddExpert },\n  { path: \"/resources\", exact: true, name: \"Resources\", component: Resources },\n  {\n    path: \"/resources/:id\",\n    exact: true,\n    name: \"Resource Details\",\n    component: Resource,\n  },\n  {\n    path: \"/addResource\",\n    exact: true,\n    name: \"Add Resource\",\n    component: AddResource,\n  },\n  {\n    path: \"/editResource/:id\",\n    exact: true,\n    name: \"Edit Resource\",\n    component: AddResource,\n  },\n  {\n    path: \"/editExpert\",\n    exact: true,\n    name: \"Edit Expert\",\n    component: AddExpert,\n  },\n];\n\nexport default routes;\n","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/resources/Resources.js",["196","197","198"],"/Volumes/DATA/Isha Kansal/pivot-admin/src/views/users/Users.js",["199"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport moment from \"moment\";\nimport Pagination from \"react-js-pagination\";\nimport CommonModal from \"../../common/commonModal\";\nimport { NotificationManager } from \"react-notifications\";\nimport { Table } from \"reactstrap\";\nimport { CBadge, CButton, CCard, CCardBody, CCol, CRow } from \"@coreui/react\";\nimport Loader from \"../../loader\";\nimport { connect } from \"react-redux\";\n\nimport { bindActionCreators } from \"redux\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { fetchUsers, userStatus } from \"../store/action\";\n\nconst Users = (props) => {\n  const offsetLimit = 10;\n  const history = useHistory();\n  const queryPage = useLocation().search.match(/page=([0-9]+)/, \"\");\n  const currentPage = Number(queryPage && queryPage[1] ? queryPage[1] : 1);\n  const [page, setPage] = useState(currentPage);\n  const [search, setSearch] = useState(\"\");\n  const [modalOpen, setModalOpen] = useState(false);\n  const [type, setType] = useState(\"\");\n\n  const [idUser, setIdUser] = useState(\"\");\n  const [usersDetails, setUsersDetails] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [count, setCount] = useState(0);\n  const pageChange = (newPage) => {\n    currentPage !== newPage && history.push(`/users?page=${newPage}`);\n    setLoading(true);\n\n    let limit = 10;\n    props.fetchUsers(\n      `user/all?offset=${newPage}&limit=${limit}&search=${search}`,\n      (value) => {\n        setLoading(false);\n        setUsersDetails(value.data.users);\n        setCount(value.data.count);\n\n        setPage(newPage);\n      }\n    );\n  };\n  const handleSearch = (e) => {\n    setSearch(e.target.value);\n    setPage(1);\n  };\n  // useEffect(() => {\n  //   debugger;\n  //   currentPage !== page && setPage(currentPage);\n  // }, [currentPage, page]);\n\n  useEffect(() => {\n    callApiToFetchAllUsers();\n  }, [search]);\n\n  const callApiToFetchAllUsers = () => {\n    setLoading(true);\n\n    let limit = 10;\n    props.fetchUsers(\n      `user/all?offset=${page}&limit=${limit}&search=${search}`,\n      (value) => {\n        setLoading(false);\n        setUsersDetails(value.data.users);\n        setCount(value.data.count);\n      }\n    );\n  };\n\n  const getBadge = (status) => {\n    switch (status) {\n      case \"Verified\":\n        return \"success\";\n\n      case \"Not Verified\":\n        return \"danger\";\n      default:\n        return \"primary\";\n    }\n  };\n\n  const onBlock = (e, type, item) => {\n    setIdUser(item._id);\n    setType(type);\n    e.preventDefault();\n    e.stopPropagation();\n    setModalOpen(!modalOpen);\n  };\n  const blockUser = (id) => {\n    if (idUser === id) {\n      setModalOpen(false);\n\n      // let arr = unBlock.slice();\n      // arr.push(id);\n      // setUnblock(arr);\n      callApi(type, id);\n    }\n  };\n\n  const callApi = (type, id) => {\n    let obj = {\n      type: type,\n      id: id,\n    };\n\n    props.userStatus(\"user/change-status\", obj, (value) => {\n      if (value.status === 200) {\n        NotificationManager.success(value.message, \"\", 1000);\n        callApiToFetchAllUsers();\n      }\n    });\n  };\n\n  return (\n    <CRow>\n      <CCol xl={12}>\n        <form>\n          <div className=\"text-center search-input\">\n            <input\n              type=\"search\"\n              className=\"form-control\"\n              placeholder=\"Search\"\n              required\n              onChange={handleSearch}\n            />\n          </div>\n        </form>\n      </CCol>\n\n      <CCol xl={12}>\n        <CCard className=\"position-relative\">\n          {loading && <Loader />}\n\n          <CCardBody>\n            <Table\n              responsive\n              className={`table ${\n                usersDetails.length === 0 ? \"tableHeight\" : \"\"\n              }`}\n            >\n              <thead>\n                <tr>\n                  <th className=\"text-nowrap \">Name</th>\n\n                  <th>Email</th>\n                  <th>Status</th>\n\n                  <th>Country</th>\n                  <th>Created At</th>\n                  <th>Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {usersDetails && usersDetails.length === 0 && !loading && (\n                  <h3 className=\"text-center no-user-found\">No Users Found!</h3>\n                )}\n                {usersDetails &&\n                  usersDetails.length > 0 &&\n                  usersDetails.map((item, index) => {\n                    let istDate = new Date(item.createdAt);\n\n                    let createdAt = moment(istDate).format(\n                      \"DD-MM-YYYY, hh:mm a\"\n                    );\n\n                    return (\n                      <tr\n                        style={{ cursor: \"pointer\" }}\n                        onClick={() =>\n                          history.push({\n                            pathname: `/users/${item._id}`,\n                            state: usersDetails,\n                          })\n                        }\n                      >\n                        <td>\n                          {\" \"}\n                          {item.first_name && item.last_name\n                            ? item.first_name + \" \" + item.last_name\n                            : \"-\"}\n                        </td>\n                        <td>{item.email ? item.email : \"-\"}</td>\n                        <td>\n                          <CBadge\n                            color={getBadge(\n                              !item.is_verified ? \"Not Verified\" : \"Verified\"\n                            )}\n                          >\n                            {!item.is_verified ? \"Not Verified\" : \"Verified\"}\n                          </CBadge>\n                        </td>\n                        <td>{item.country ? item.country : \"-\"}</td>\n                        <td>\n                          {createdAt !== \"Invalid date\" ? createdAt : \"-\"}\n                        </td>\n                        <td>\n                          {item.status === \"blocked\" ? (\n                            <CButton\n                              onClick={(e) => onBlock(e, \"unblock\", item)}\n                              className=\"Unblock-btn block-btn\"\n                            >\n                              UnBlock\n                            </CButton>\n                          ) : item.status === \"activated\" ? (\n                            <div>\n                              <CButton\n                                onClick={(e) => onBlock(e, \"block\", item)}\n                                className=\"block-btn block-btn\"\n                              >\n                                Block\n                              </CButton>{\" \"}\n                            </div>\n                          ) : item.status === \"deactivated\" ? (\n                            <div>\n                              <CButton\n                                onClick={(e) => onBlock(e, \"block\", item)}\n                                className=\"block-btn block-btn\"\n                              >\n                                Block\n                              </CButton>\n                            </div>\n                          ) : (\n                            <CButton\n                              onClick={(e) => onBlock(e, \"block\", item)}\n                              className=\"block-btn block-btn\"\n                            >\n                              Block\n                            </CButton>\n                          )}\n                        </td>\n                      </tr>\n                    );\n                  })}\n              </tbody>\n            </Table>\n\n            <div className=\"text-center pagination-input\">\n              {count > 10 && (\n                <Pagination\n                  className=\"mt-3 mx-auto w-fit-content\"\n                  itemClass=\"page-item\"\n                  linkClass=\"page-link\"\n                  activeClass=\"active\"\n                  activePage={page}\n                  itemsCountPerPage={offsetLimit}\n                  totalItemsCount={count}\n                  pageRangeDisplayed={5}\n                  onChange={pageChange}\n                />\n              )}\n            </div>\n            <div>\n              {modalOpen && (\n                <CommonModal\n                  isOpen={modalOpen}\n                  toggle={(e) => onBlock(e, type, idUser)}\n                  block_delete={(e) => blockUser(e, idUser)}\n                  id={idUser}\n                  type={type}\n                />\n              )}\n            </div>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {};\n};\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    {\n      fetchUsers,\n      userStatus,\n    },\n    dispatch\n  );\n};\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Users));\n","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/planners/Planners.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/views/experts/Experts.js",["200","201","202","203","204"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport expertsData from \"./ExpertsData\";\nimport Pagination from \"react-js-pagination\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n  CButton,\n  CDataTable,\n} from \"@coreui/react\";\nimport CommonModal from \"../../common/commonModal\";\nimport Tooltip from \"../../common/toolTip\";\nimport EDIT from \"../../assets/icons/edit.svg\";\nimport DELETE from \"../../assets/icons/delete.svg\";\nimport { Table } from \"reactstrap\";\nconst Experts = (props) => {\n  const history = useHistory();\n  const queryPage = useLocation().search.match(/page=([0-9]+)/, \"\");\n  const currentPage = Number(queryPage && queryPage[1] ? queryPage[1] : 1);\n  const [page, setPage] = useState(currentPage);\n  const [search, setSearch] = useState(\"\");\n  const [modalOpen, setModalOpen] = useState(false);\n  const pageChange = (newPage) => {\n    currentPage !== newPage && history.push(`/experts?page=${newPage}`);\n  };\n  useEffect(() => {\n    currentPage !== page && setPage(currentPage);\n  }, [currentPage, page]);\n  const addExpert = () => {\n    props.history.push(\"/addExpert\");\n  };\n  const handleSearch = (e) => {\n    setSearch(e.target.value);\n  };\n\n  const editExpert = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    props.history.push(\"/editExpert\");\n  };\n  const deleteExpert = (e, item) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setModalOpen(!modalOpen);\n    // alert(\"deleted\");\n  };\n\n  return (\n    <CRow>\n      <CCol xl={12}>\n        <form className=\"position-relative\">\n          <div className=\"text-center search-input\">\n            <input\n              type=\"search\"\n              className=\"form-control\"\n              placeholder=\"Search\"\n              required\n              onChange={handleSearch}\n            />\n          </div>\n          <div className=\"text-right resource-btn\">\n            <CButton block color=\"info\" onClick={addExpert}>\n              Add Expert\n            </CButton>\n          </div>\n        </form>\n        <CCard>\n          <CCardBody>\n            <Table>\n              <thead>\n                <tr>\n                  <th className=\"text-nowrap \">Name</th>\n\n                  <th>Designation</th>\n                  <th>Expertise</th>\n\n                  <th>Fields</th>\n                </tr>\n              </thead>\n              <tbody>\n                {expertsData && expertsData.length === 0 && (\n                  <h3 className=\"text-center no-user-found\">\n                    No Experts Found!\n                  </h3>\n                )}\n                {expertsData &&\n                  expertsData.length > 0 &&\n                  expertsData.map((item, index) => {\n                    return (\n                      <tr\n                        style={{ cursor: \"pointer\" }}\n                        onClick={() =>\n                          history.push({\n                            pathname: `/experts/${item._id}`,\n                          })\n                        }\n                      >\n                        <td>{item.designation}</td>\n                        <td>{item.expertise}</td>\n                        <td>{item.fields}</td>\n                        <td>\n                          <button\n                            id={`edit-${index}`}\n                            className=\"icon\"\n                            onClick={editExpert}\n                          >\n                            <img src={EDIT} className=\"ml-3\" />\n                          </button>\n                          <Tooltip placement=\"left\" target={`edit-${index}`}>\n                            Edit\n                          </Tooltip>\n                          <button\n                            className=\"icon\"\n                            onClick={(e) => deleteExpert(e, item.id)}\n                            id={`delete-${index}`}\n                          >\n                            <img src={DELETE} className=\"ml-3\" />\n                          </button>\n                          <Tooltip placement=\"right\" target={`delete-${index}`}>\n                            Delete\n                          </Tooltip>\n                        </td>\n                      </tr>\n                    );\n                  })}\n              </tbody>\n            </Table>\n            {/* <CDataTable\n              items={expertsData}\n              fields={[\n                { key: \"name\", _classes: \"font-weight-bold\" },\n                \"designation\",\n                \"expertise\",\n                \"fields\",\n              ]}\n              itemsPerPage={10}\n              activePage={page}\n              clickableRows\n              onRowClick={(item) => history.push(`/experts/${item.id}`)}\n            /> */}\n            <div className=\"text-center pagination-input\">\n              {expertsData.length > 10 && (\n                <Pagination\n                  className=\"mt-3 mx-auto w-fit-content\"\n                  itemClass=\"page-item\"\n                  linkClass=\"page-link\"\n                  activeClass=\"active\"\n                  activePage={page}\n                  itemsCountPerPage={10}\n                  totalItemsCount={expertsData.length}\n                  pageRangeDisplayed={5}\n                  onChange={pageChange}\n                />\n              )}\n            </div>\n            <div>\n              {modalOpen && (\n                <CommonModal\n                  isOpen={modalOpen}\n                  toggle={(e) => deleteExpert(e)}\n                  // blockUser={(e) => blockUser(e, idUser)}\n                  // id={idUser}\n                  // type={type}\n                />\n              )}\n            </div>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  );\n};\n\nexport default withRouter(Experts);\n","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/users/User.js",["205","206","207","208"],"import React, { useState, useEffect, Fragment } from \"react\";\nimport moment from \"moment\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n  CBadge,\n} from \"@coreui/react\";\nimport Loader from \"../../loader\";\nimport CIcon from \"@coreui/icons-react\";\nimport { connect } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { titleCase } from \"../../common/stringFunction\";\n\nimport { fetchOneUser } from \"../store/action\";\nconst User = (props) => {\n  const [user, setUser] = useState({});\n  const [loading, setLoading] = useState(false);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    setLoading(true);\n\n    const user_id = props && props.match.params.id;\n    dispatch(\n      fetchOneUser(`user/${user_id}`, (value) => {\n        setUser(value.data.user);\n        setLoading(false);\n      })\n    );\n  }, []);\n\n  const getBadge = (status) => {\n    switch (status) {\n      case \"Verified\":\n        return \"success\";\n\n      case \"Not Verified\":\n        return \"danger\";\n      case \"Activated\":\n        return \"success\";\n\n      case \"Blocked\":\n        return \"danger\";\n      default:\n        return \"primary\";\n    }\n  };\n\n  let reasonForCareerChange =\n    user &&\n    user.reason_for_career_change &&\n    user.reason_for_career_change.join(\", \");\n\n  let istDate = new Date(user.createdAt);\n\n  let createdAt = moment(istDate).format(\"DD-MM-YYYY, hh:mm a\");\n  console.log(\"3969830868\", istDate, createdAt);\n\n  return (\n    <CRow>\n      <CCol lg={12}>\n        <CCard className=\"position-relative\">\n          {loading && <Loader />}\n          <CCardHeader>Account Details</CCardHeader>\n          <CCardBody>\n            {user && (\n              <table className=\"table\">\n                <tbody>\n                  {createdAt !== \"Invalid date\" && (\n                    <tr>\n                      <td>Created At</td>\n                      <td>\n                        <strong> {createdAt}</strong>\n                      </td>\n                    </tr>\n                  )}\n                  <tr>\n                    <td>Status</td>\n\n                    <td>\n                      <CBadge\n                        color={getBadge(\n                          user.status === \"blocked\" ? \"Blocked\" : \"Activated\"\n                        )}\n                      >\n                        {user.status === \"blocked\" ? \"Blocked\" : \"Activated\"}\n                      </CBadge>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>UID</td>\n                    <td>\n                      <strong>{user._id}</strong>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>Email Verification</td>\n\n                    <td>\n                      <CBadge\n                        color={getBadge(\n                          !user.is_verified ? \"Not Verified\" : \"Verified\"\n                        )}\n                      >\n                        {!user.is_verified ? \"Not Verified\" : \"Verified\"}\n                      </CBadge>\n                    </td>\n                  </tr>\n                  {user.first_name && (\n                    <tr>\n                      <td>First name</td>\n                      <td>\n                        <strong>{user.first_name}</strong>\n                      </td>\n                    </tr>\n                  )}\n                  {user.last_name && (\n                    <tr>\n                      <td>Last name</td>\n                      <td>\n                        <strong>{user.last_name}</strong>\n                      </td>\n                    </tr>\n                  )}\n                  {user.contact_no && (\n                    <tr>\n                      <td>Contact</td>\n                      <td>\n                        <strong>\n                          {user.contact_no.value || user.contact_no}\n                        </strong>\n                      </td>\n                    </tr>\n                  )}\n                  {user.email && (\n                    <tr>\n                      <td>Email</td>\n                      <td>\n                        <strong>{user.email}</strong>\n                      </td>\n                    </tr>\n                  )}\n                  {user.gender && (\n                    <tr>\n                      <td>Gender</td>\n                      <td>\n                        <strong>{user.gender}</strong>\n                      </td>\n                    </tr>\n                  )}\n                  {user.role && (\n                    <tr>\n                      <td>Role</td>\n                      <td>\n                        <strong>{user.role}</strong>\n                      </td>\n                    </tr>\n                  )}\n                  {user.country && (\n                    <tr>\n                      <td>Country</td>\n                      <td>\n                        <strong>{user.country}</strong>\n                      </td>\n                    </tr>\n                  )}\n                  {user.industry && (\n                    <tr>\n                      <td>Industry</td>\n                      <td>\n                        <strong>{user.industry}</strong>\n                      </td>\n                    </tr>\n                  )}\n                  {user.full_time_work_experience && (\n                    <tr>\n                      <td>Work Experience</td>\n                      <td>\n                        <strong>{user.full_time_work_experience}</strong>\n                      </td>\n                    </tr>\n                  )}\n\n                  {reasonForCareerChange && (\n                    <tr>\n                      <td>Career Change Reason</td>\n                      <td>\n                        <strong>{reasonForCareerChange}</strong>\n                      </td>\n                    </tr>\n                  )}\n                </tbody>\n              </table>\n            )}\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {};\n};\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    {\n      fetchOneUser,\n    },\n    dispatch\n  );\n};\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(User));\n","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/experts/AddExpert.js",["209","210","211","212","213"],"import React, { Component } from \"react\";\n// import DateTimePicker from \"react-datetime-picker\";\n// import { PopupWidget } from \"react-calendly\";\nimport BackArrow from \"../../assets/icons/left-arrow.svg\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormGroup,\n  CTextarea,\n  CInput,\n  CLabel,\n  CRow,\n  CSelect,\n} from \"@coreui/react\";\n// import { InlineWidget } from \"react-calendly\";\nimport Select from \"react-select\";\nimport CameraIcon from \"../../assets/icons/photo-camera.svg\";\nimport { Input } from \"reactstrap\";\nimport CIcon from \"@coreui/icons-react\";\nimport Avatar from \"../../assets/icons/avatar.png\";\nimport {\n  optionsFields,\n  optionsGender,\n  optionsCountry,\n  optionsDesignation,\n  optionsExpertise,\n  optionsRole,\n  optionsIndustry,\n  optionsExperience,\n  optionsRate,\n  optionsService,\n} from \"./ExpertsFieldsData\";\n\nclass AddExpert extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      first_name: \"\",\n      last_name: \"\",\n      email: \"\",\n      contact: \"\",\n      gender: \"\",\n      country: \"\",\n      designation: \"\",\n      expertise: \"\",\n      experience: \"\",\n      role: \"\",\n      industry: \"\",\n      fields: \"\",\n      about: \"\",\n      errorType: \"\",\n      errorText: \"\",\n      service: \"\",\n      rate: \"\",\n      expertImage: null,\n      selectedDate: new Date(),\n    };\n  }\n  uploadImage = (event) => {\n    if (event.target.files && event.target.files[0]) {\n      var reader = new FileReader();\n      reader.onloadend = function () {\n        // props.setImage(reader.result);\n        this.setState({\n          expertImage: reader.result,\n        });\n      }.bind(this);\n      reader.readAsDataURL(event.target.files[0]);\n    }\n  };\n  errorShow = (type) => {\n    const { errorType, errorText } = this.state;\n    return errorType === type ? <p>{errorText}</p> : null;\n  };\n  clearError = () => {\n    this.setState({\n      errorType: \"\",\n      errorText: \"\",\n    });\n  };\n  inputHandler = (e) => {\n    this.clearError();\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  handleChange = (e, type, data) => {\n    if (type === \"fields\") {\n      this.setState({\n        fields: data,\n      });\n    }\n    if (type === \"gender\") {\n      this.setState({\n        gender: data,\n      });\n    }\n    if (type === \"country\") {\n      this.setState({\n        country: data,\n      });\n    }\n    if (type === \"designation\") {\n      this.setState({\n        designation: data,\n      });\n    }\n    if (type === \"expertise\") {\n      this.setState({\n        expertise: data,\n      });\n    }\n    if (type === \"role\") {\n      this.setState({\n        role: data,\n      });\n    }\n    if (type === \"industry\") {\n      this.setState({\n        industry: data,\n      });\n    }\n    if (type === \"experience\") {\n      this.setState({\n        experience: data,\n      });\n    }\n    if (type === \"service\") {\n      this.setState({\n        service: data,\n      });\n    }\n    if (type === \"rate\") {\n      this.setState({\n        rate: data,\n      });\n    }\n  };\n  validateEmail = (email) => {\n    var re = /^(([^<>()\\]\\\\.,;:\\s@“]+(\\.[^<>()\\]\\\\.,;:\\s@“]+)*)|(“.+“))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    return re.test(String(email).toLowerCase());\n  };\n  onSubmit = (e) => {\n    const {\n      first_name,\n      last_name,\n      email,\n      contact,\n      gender,\n      country,\n      designation,\n      experience,\n      role,\n      industry,\n      expertise,\n      fields,\n      about,\n      service,\n      rate,\n    } = this.state;\n\n    if (first_name === \"\") {\n      this.setState({\n        errorType: \"first_name\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Name should not be empty</b>\n          </span>\n        ),\n      });\n      return;\n    }\n    if (first_name !== \"\") {\n      let filter = /^[a-zA-Z0-9]+([-_\\s]{1}[a-zA-Z0-9]+)*$/;\n\n      if (!filter.test(first_name)) {\n        this.setState({\n          errorType: \"first_name\",\n          errorText: (\n            <span className=\"text-danger\">\n              <b>\n                {\" \"}\n                Name should be combination of alphanumeric text, underscore,\n                space and hyphen\n              </b>\n            </span>\n          ),\n        });\n        return;\n      }\n    }\n\n    if (last_name === \"\") {\n      this.setState({\n        errorType: \"last_name\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Name should not be empty</b>\n          </span>\n        ),\n      });\n      return;\n    }\n    if (last_name !== \"\") {\n      let filter = /^[a-zA-Z0-9]+([-_\\s]{1}[a-zA-Z0-9]+)*$/;\n\n      if (!filter.test(last_name)) {\n        this.setState({\n          errorType: \"last_name\",\n          errorText: (\n            <span className=\"text-danger\">\n              <b>\n                {\" \"}\n                Name should be combination of alphanumeric text, underscore,\n                space and hyphen\n              </b>\n            </span>\n          ),\n        });\n        return;\n      }\n    }\n\n    if (email === \"\") {\n      this.setState({\n        errorType: \"email\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Email Id is empty</b>\n          </span>\n        ),\n      });\n      return;\n    }\n    if (!this.validateEmail(email)) {\n      this.setState({\n        errorType: \"email\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Invalid email</b>\n          </span>\n        ),\n      });\n      return;\n    }\n\n    if (contact === \"\") {\n      this.setState({\n        errorType: \"contact\",\n        errorText: <span className=\"text-danger\">Mobile number is empty</span>,\n        loading: false,\n      });\n\n      return;\n    } else if (contact.length < 10 || contact.length > 10) {\n      this.setState({\n        errorType: \"contact\",\n        errorText: (\n          <span className=\"text-danger\">\n            {\" \"}\n            <b>Phone number should be of length 10</b>\n          </span>\n        ),\n        loading: false,\n      });\n\n      return;\n    } else if (contact !== \"\") {\n      let filter = /^\\d{10}$/;\n      if (!filter.test(contact)) {\n        this.setState({\n          errorType: \"contact\",\n          errorText: (\n            <span className=\"text-danger\">\n              {\" \"}\n              <b>Please enter valid phone number</b>\n            </span>\n          ),\n          loading: false,\n        });\n\n        return;\n      }\n    }\n\n    if (gender === \"\") {\n      this.setState({\n        errorType: \"gender\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Select your gender</b>\n          </span>\n        ),\n      });\n      return;\n    }\n    if (country === \"\") {\n      this.setState({\n        errorType: \"country\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Select your country</b>\n          </span>\n        ),\n      });\n      return;\n    }\n\n    if (designation === \"\") {\n      this.setState({\n        errorType: \"designation\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Designation should not be empty</b>\n          </span>\n        ),\n      });\n      return;\n    }\n    if (expertise === \"\") {\n      this.setState({\n        errorType: \"expertise\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Please enter your expert areas</b>\n          </span>\n        ),\n      });\n      return;\n    }\n    if (role === \"\") {\n      this.setState({\n        errorType: \"role\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Select your current role</b>\n          </span>\n        ),\n      });\n      return;\n    }\n    if (industry === \"\") {\n      this.setState({\n        errorType: \"industry\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Select your industry</b>\n          </span>\n        ),\n      });\n      return;\n    }\n\n    if (experience === \"\") {\n      this.setState({\n        errorType: \"experience\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Select your experience</b>\n          </span>\n        ),\n      });\n      return;\n    }\n\n    if (fields === \"\") {\n      this.setState({\n        errorType: \"fields\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Select your fields</b>\n          </span>\n        ),\n      });\n      return;\n    }\n    if (service === \"\") {\n      this.setState({\n        errorType: \"service\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Select your service</b>\n          </span>\n        ),\n      });\n      return;\n    }\n    if (rate === \"\") {\n      this.setState({\n        errorType: \"rate\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Select your rate</b>\n          </span>\n        ),\n      });\n      return;\n    }\n\n    if (about === \"\") {\n      this.setState({\n        errorType: \"about\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Please enter some information about you</b>\n          </span>\n        ),\n      });\n      return;\n    }\n  };\n  resetState = (e) => {\n    e.preventDefault();\n    this.setState({\n      first_name: \"\",\n      last_name: \"\",\n      email: \"\",\n      contact: \"\",\n      gender: \"\",\n      country: \"\",\n      designation: \"\",\n      expertise: \"\",\n      experience: \"\",\n      role: \"\",\n      industry: \"\",\n      fields: \"\",\n      about: \"\",\n      errorType: \"\",\n      errorText: \"\",\n      service: \"\",\n      rate: \"\",\n\n      selectedDate: new Date(),\n    });\n  };\n  handleBack = (e) => {\n    e.preventDefault();\n    this.props.history.push(\"/experts\");\n  };\n  onChange = (date) => {\n    this.setState({\n      selectedDate: date,\n    });\n  };\n  render() {\n    const {\n      first_name,\n      last_name,\n      experience,\n      designation,\n      country,\n      expertise,\n      about,\n      fields,\n      gender,\n      expertImage,\n      role,\n      industry,\n      email,\n      contact,\n      service,\n      rate,\n      selectedDate,\n    } = this.state;\n\n    return (\n      <CRow>\n        <CCol xs=\"12\" sm=\"12\">\n          <CCard className=\"expert-card\">\n            <CCardHeader>\n              <CButton onClick={this.handleBack} className=\"backBtn\">\n                <img src={BackArrow} className=\"mr-2\" /> Back\n              </CButton>\n              <div className=\"update-profile-image\">\n                <img\n                  id=\"output\"\n                  src={expertImage ? expertImage : Avatar}\n                  alt=\"profile\"\n                  className=\"profile negative-margin\"\n                />\n                <div>\n                  <Input\n                    type=\"file\"\n                    accept=\"image/*\"\n                    id=\"f-upload\"\n                    name=\"myImage\"\n                    onChange={this.uploadImage}\n                    className=\"d-none\"\n                  />\n                  <label htmlFor=\"f-upload\" class=\"custom-file-upload\">\n                    <div className=\"camera-btn\" onClick={this.uploadImage}>\n                      <img src={CameraIcon} alt=\"camera\" />\n                    </div>\n                  </label>\n                </div>\n              </div>\n            </CCardHeader>\n            <CCardBody>\n              <CForm\n                action=\"\"\n                method=\"post\"\n                encType=\"multipart/form-data\"\n                className=\"form-horizontal\"\n              >\n                <CFormGroup row className=\"my-0\">\n                  <CCol xs=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"first_name\">First Name</CLabel>\n                      <CInput\n                        id=\"first_name\"\n                        name=\"first_name\"\n                        placeholder=\"First Name\"\n                        onChange={this.inputHandler}\n                        value={first_name}\n                      />\n                      {this.errorShow(\"first_name\")}\n                    </CFormGroup>\n                  </CCol>\n                  <CCol xs=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"last_name\">Last Name</CLabel>\n                      <CInput\n                        id=\"last_name\"\n                        name=\"last_name\"\n                        placeholder=\"Last Name\"\n                        onChange={this.inputHandler}\n                        value={last_name}\n                      />\n                      {this.errorShow(\"last_name\")}\n                    </CFormGroup>\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row className=\"my-0\">\n                  <CCol xs=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"email\">Email</CLabel>\n                      <CInput\n                        type=\"email\"\n                        id=\"email\"\n                        name=\"email\"\n                        placeholder=\"Email\"\n                        onChange={this.inputHandler}\n                        value={email}\n                      />\n                      {this.errorShow(\"email\")}\n                    </CFormGroup>\n                  </CCol>\n                  <CCol xs=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"contact\">Contact</CLabel>\n                      <CInput\n                        id=\"contact\"\n                        name=\"contact\"\n                        placeholder=\"Contact\"\n                        onChange={this.inputHandler}\n                        value={contact}\n                      />\n                      {this.errorShow(\"contact\")}\n                    </CFormGroup>\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row className=\"my-0\">\n                  <CCol xs=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"gender\">Gender</CLabel>\n                      <Select\n                        custom\n                        placeholder=\"Select gender\"\n                        name=\"gender\"\n                        id=\"gender\"\n                        name=\"gender\"\n                        onChange={(e) => this.handleChange(e, \"gender\")}\n                        value={gender}\n                        options={optionsGender}\n                      ></Select>\n                      {this.errorShow(\"gender\")}\n                    </CFormGroup>\n                  </CCol>\n                  <CCol xs=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"country\">Country</CLabel>\n                      <Select\n                        custom\n                        name=\"country\"\n                        id=\"country\"\n                        name=\"country\"\n                        placeholder=\"Select Country\"\n                        onChange={(e) => this.handleChange(e, \"country\")}\n                        value={country}\n                        options={optionsCountry}\n                      ></Select>\n                      {this.errorShow(\"country\")}\n                    </CFormGroup>\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row className=\"my-0\">\n                  <CCol xs=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"designation\">Designation</CLabel>\n\n                      <Select\n                        custom\n                        id=\"designation\"\n                        name=\"designation\"\n                        placeholder=\"Select Designation\"\n                        onChange={(e) => this.handleChange(e, \"designation\")}\n                        value={designation}\n                        options={optionsDesignation}\n                      ></Select>\n                      {this.errorShow(\"designation\")}\n                    </CFormGroup>\n                  </CCol>\n\n                  <CCol xs=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"expertise\">Expertise</CLabel>\n\n                      <Select\n                        isMulti\n                        custom\n                        id=\"expertise\"\n                        placeholder=\"Select Your expert areas\"\n                        name=\"expertise\"\n                        value={expertise}\n                        options={optionsExpertise}\n                        onChange={(e) => this.handleChange(e, \"expertise\")}\n                      ></Select>\n                      {this.errorShow(\"expertise\")}\n                    </CFormGroup>\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row className=\"my-0\">\n                  <CCol xs=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"role\">Current Role</CLabel>\n\n                      <Select\n                        custom\n                        id=\"role\"\n                        placeholder=\"Select Role\"\n                        name=\"role\"\n                        onChange={(e) => this.handleChange(e, \"role\")}\n                        value={role}\n                        options={optionsRole}\n                      ></Select>\n                      {this.errorShow(\"role\")}\n                    </CFormGroup>\n                  </CCol>\n\n                  <CCol xs=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"industry\">Current Industry</CLabel>\n\n                      <Select\n                        custom\n                        id=\"industry\"\n                        name=\"industry\"\n                        placeholder=\"Select Industry\"\n                        onChange={(e) => this.handleChange(e, \"industry\")}\n                        value={industry}\n                        options={optionsIndustry}\n                      ></Select>\n                      {this.errorShow(\"industry\")}\n                    </CFormGroup>\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row className=\"my-0\">\n                  <CCol xs=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"experience\">Work Experience</CLabel>\n\n                      <Select\n                        custom\n                        id=\"experience\"\n                        name=\"experience\"\n                        placeholder=\"Select Experience\"\n                        onChange={(e) => this.handleChange(e, \"experience\")}\n                        value={experience}\n                        options={optionsExperience}\n                      ></Select>\n                      {this.errorShow(\"experience\")}\n                    </CFormGroup>\n                  </CCol>\n\n                  <CCol xs=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"fields\">Fields</CLabel>\n\n                      <Select\n                        isMulti\n                        custom\n                        placeholder=\"Select Fields\"\n                        id=\"fields\"\n                        name=\"fields\"\n                        onChange={(e) => this.handleChange(e, \"fields\")}\n                        value={fields}\n                        options={optionsFields}\n                      >\n                        <option value=\"select\">Select</option>\n                        <option value=\"consulting\">Consulting</option>\n                        <option value=\"hr\">HR</option>\n                      </Select>\n                      {this.errorShow(\"fields\")}\n                    </CFormGroup>\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row className=\"my-0\">\n                  <CCol xs=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"service\">Service</CLabel>\n\n                      <Select\n                        custom\n                        id=\"service\"\n                        name=\"service\"\n                        placeholder=\"Select Service\"\n                        onChange={(e) => this.handleChange(e, \"service\")}\n                        value={service}\n                        options={optionsService}\n                      ></Select>\n                      {this.errorShow(\"service\")}\n                    </CFormGroup>\n                  </CCol>\n\n                  <CCol xs=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"rate\">Rate</CLabel>\n\n                      <Select\n                        custom\n                        id=\"rate\"\n                        placeholder=\"Select Rate\"\n                        name=\"rate\"\n                        onChange={(e) => this.handleChange(e, \"rate\")}\n                        value={rate}\n                        options={optionsRate}\n                      ></Select>\n                      {this.errorShow(\"rate\")}\n                    </CFormGroup>\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row className=\"my-0\">\n                  <CCol xs=\"6\">\n                    {/* <CFormGroup>\n                      <CLabel htmlFor=\"dateTime\">Select Availability</CLabel>\n                      <InlineWidget\n                        pageSettings={{\n                          backgroundColor: \"ffffff\",\n                          hideEventTypeDetails: false,\n                          hideLandingPageDetails: true,\n                          primaryColor: \"00a2ff\",\n                          textColor: \"4d5055\",\n                        }}\n                        prefill={{\n                          email: \"test@test.com\",\n                          firstName: \"Jon\",\n                          lastName: \"Snow\",\n                          name: \"Jon Snow\",\n                        }}\n                        url=\"https://calendly.com/ikansal\"\n                      />\n\n                      {this.errorShow(\"dateTime\")}\n                    </CFormGroup> */}\n                  </CCol>\n                  <CCol xs=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"about\">About</CLabel>\n                      <CTextarea\n                        name=\"about\"\n                        id=\"about\"\n                        rows=\"9\"\n                        onChange={this.inputHandler}\n                        placeholder=\"Content...\"\n                        value={about}\n                      />\n                      {this.errorShow(\"about\")}\n                    </CFormGroup>\n                  </CCol>\n                </CFormGroup>\n              </CForm>\n            </CCardBody>\n            <CCardFooter>\n              <div className=\"text-right\">\n                <CButton\n                  type=\"submit\"\n                  size=\"sm\"\n                  color=\"primary\"\n                  onClick={this.onSubmit}\n                >\n                  <CIcon name=\"cil-scrubber\" /> Submit\n                </CButton>\n                <CButton\n                  type=\"reset\"\n                  size=\"sm\"\n                  color=\"danger\"\n                  onClick={this.resetState}\n                  className=\"ml-2\"\n                >\n                  <CIcon name=\"cil-ban\" /> Reset\n                </CButton>\n              </div>\n            </CCardFooter>\n          </CCard>\n        </CCol>\n      </CRow>\n    );\n  }\n}\n\nexport default AddExpert;\n","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/resources/AddResource.js",["214","215","216","217","218","219","220","221","222","223","224"],"/Volumes/DATA/Isha Kansal/pivot-admin/src/views/store/sagas.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/views/store/types.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/common/axios.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/config.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/views/store/reducer.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/views/store/action.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/loader/index.js",["225","226"],"import React from \"react\";\nconst dots = [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}];\nexport default () => (\n  <>\n    <div className=\"loader-backdrop\" />\n    <div className=\"content-loader\">\n      <div className=\"dot-loader\">\n        {dots.map(({}, index) => (\n          <div key={index} />\n        ))}\n      </div>\n    </div>\n  </>\n);\n","/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/icons.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/logo.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/assets/icons/index.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/common/commonModal.js",["227"],"import React from \"react\";\nimport { Button, Modal, ModalBody, ModalHeader } from \"reactstrap\";\n// import DeleteIcon from \"../assets/images/dashboard/delete-modal-icon.png\";\n// import CloseIcon from \"../assets/images/dashboard/closeIcon.png\";\n\nclass CommonModal extends React.Component {\n  render() {\n    const { isOpen, toggle, loading, block_delete, type, id } = this.props;\n\n    return (\n      <Modal\n        isOpen={isOpen}\n        toggle={toggle}\n        className=\"deleteModal mt-5 modal-dialog-centered\"\n      >\n        <ModalHeader toggle={toggle}>\n          {type === \"block\" ? (\n            <h2>Want to Block</h2>\n          ) : type === \"unblock\" ? (\n            <h2>Want to Unblock</h2>\n          ) : type === \"deactivate\" ? (\n            <h2>Want to Deactivate</h2>\n          ) : type === \"deleteResource\" ? (\n            <h2>Want to Delete</h2>\n          ) : (\n            \"\"\n          )}\n        </ModalHeader>\n        <ModalBody className=\"text-center\">\n          <div className=\"text-center mb-3\"></div>\n\n          {type === \"block\" ? (\n            <p>Do you really want to block this user ?</p>\n          ) : type === \"unblock\" ? (\n            <p>Do you really want to unblock this user ?</p>\n          ) : type === \"deactivate\" ? (\n            <p>Do you really want to deactivate this user ?</p>\n          ) : type === \"deleteResource\" ? (\n            <p>Do you really want to delete this resource ?</p>\n          ) : (\n            \"\"\n          )}\n          <div className=\"text-center deleteBtn mt-4\">\n            <Button\n              color=\"success\"\n              onClick={() => block_delete(id)}\n              // disabled={loading}\n            >\n              Yes, Confirmed\n            </Button>\n          </div>\n        </ModalBody>\n      </Modal>\n    );\n  }\n}\n\nexport default CommonModal;\n","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/resources/Resource.js",["228"],"/Volumes/DATA/Isha Kansal/pivot-admin/src/common/stringFunction.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/common/toolTip.js",["229"],"import React, { useState } from \"react\";\nimport { Tooltip } from \"reactstrap\";\n\nexport default ({ placement = \"left\", target, children }) => {\n  const [tooltipOpen, setTooltipOpen] = useState(false);\n\n  const toggle = () => setTooltipOpen(!tooltipOpen);\n\n  return (\n    <Tooltip\n      placement={placement}\n      isOpen={tooltipOpen}\n      target={target}\n      toggle={toggle}\n    >\n      {children}\n    </Tooltip>\n  );\n};\n","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/experts/ExpertsData.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/views/experts/Expert.js",["230"],"import React from \"react\";\nimport { CCard, CCardBody, CCardHeader, CCol, CRow } from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\n\nimport expertsData from \"./ExpertsData\";\n\nconst Expert = (props) => {\n  const expert = expertsData.find(\n    (expert) => expert.id === props && props.match.params.id\n  );\n\n  return (\n    <CRow>\n      <CCol lg={12}>\n        <CCard>\n          <CCardHeader>Expert Details</CCardHeader>\n\n          <CCardBody>\n            {expert && (\n              <table className=\"table\">\n                <tbody>\n                  <tr>\n                    <td>EID</td>\n                    <td>\n                      <strong>{expert.id}</strong>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            )}\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  );\n};\nexport default Expert;\n","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/experts/ExpertsFieldsData.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/views/resources/ResourcesFieldsData.js",[],{"ruleId":"231","replacedBy":"232"},{"ruleId":"233","replacedBy":"234"},{"ruleId":"235","severity":1,"message":"236","line":28,"column":1,"nodeType":"237","endLine":28,"endColumn":37},{"ruleId":"238","severity":1,"message":"239","line":167,"column":29,"nodeType":"240","endLine":167,"endColumn":50},{"ruleId":"241","severity":1,"message":"242","line":12,"column":7,"nodeType":"243","messageId":"244","endLine":12,"endColumn":19},{"ruleId":"245","severity":1,"message":"246","line":90,"column":6,"nodeType":"247","endLine":90,"endColumn":14,"suggestions":"248"},{"ruleId":"249","severity":1,"message":"250","line":180,"column":31,"nodeType":"251","endLine":180,"endColumn":66},{"ruleId":"249","severity":1,"message":"250","line":190,"column":31,"nodeType":"251","endLine":190,"endColumn":68},{"ruleId":"245","severity":1,"message":"252","line":58,"column":6,"nodeType":"247","endLine":58,"endColumn":14,"suggestions":"253"},{"ruleId":"241","severity":1,"message":"254","line":9,"column":3,"nodeType":"243","messageId":"244","endLine":9,"endColumn":14},{"ruleId":"241","severity":1,"message":"255","line":13,"column":3,"nodeType":"243","messageId":"244","endLine":13,"endColumn":13},{"ruleId":"241","severity":1,"message":"256","line":25,"column":10,"nodeType":"243","messageId":"244","endLine":25,"endColumn":16},{"ruleId":"249","severity":1,"message":"250","line":111,"column":29,"nodeType":"251","endLine":111,"endColumn":64},{"ruleId":"249","severity":1,"message":"250","line":121,"column":29,"nodeType":"251","endLine":121,"endColumn":66},{"ruleId":"241","severity":1,"message":"257","line":1,"column":38,"nodeType":"243","messageId":"244","endLine":1,"endColumn":46},{"ruleId":"241","severity":1,"message":"258","line":12,"column":8,"nodeType":"243","messageId":"244","endLine":12,"endColumn":13},{"ruleId":"241","severity":1,"message":"259","line":17,"column":10,"nodeType":"243","messageId":"244","endLine":17,"endColumn":19},{"ruleId":"245","severity":1,"message":"260","line":34,"column":6,"nodeType":"247","endLine":34,"endColumn":8,"suggestions":"261"},{"ruleId":"241","severity":1,"message":"262","line":18,"column":3,"nodeType":"243","messageId":"244","endLine":18,"endColumn":10},{"ruleId":"241","severity":1,"message":"263","line":467,"column":7,"nodeType":"243","messageId":"244","endLine":467,"endColumn":19},{"ruleId":"249","severity":1,"message":"250","line":476,"column":17,"nodeType":"251","endLine":476,"endColumn":57},{"ruleId":"238","severity":1,"message":"239","line":577,"column":25,"nodeType":"240","endLine":577,"endColumn":38},{"ruleId":"238","severity":1,"message":"239","line":592,"column":25,"nodeType":"240","endLine":592,"endColumn":39},{"ruleId":"264","severity":1,"message":"265","line":299,"column":62,"nodeType":"266","messageId":"267","endLine":299,"endColumn":63,"suggestions":"268"},{"ruleId":"264","severity":1,"message":"265","line":299,"column":105,"nodeType":"266","messageId":"267","endLine":299,"endColumn":106,"suggestions":"269"},{"ruleId":"241","severity":1,"message":"270","line":671,"column":9,"nodeType":"243","messageId":"244","endLine":671,"endColumn":11},{"ruleId":"249","severity":1,"message":"250","line":682,"column":17,"nodeType":"251","endLine":682,"endColumn":57},{"ruleId":"249","severity":1,"message":"250","line":722,"column":25,"nodeType":"251","endLine":725,"endColumn":27},{"ruleId":"249","severity":1,"message":"250","line":851,"column":25,"nodeType":"251","endLine":851,"endColumn":59},{"ruleId":"249","severity":1,"message":"250","line":877,"column":31,"nodeType":"251","endLine":877,"endColumn":68},{"ruleId":"249","severity":1,"message":"250","line":889,"column":25,"nodeType":"251","endLine":889,"endColumn":59},{"ruleId":"249","severity":1,"message":"250","line":915,"column":31,"nodeType":"251","endLine":915,"endColumn":68},{"ruleId":"249","severity":1,"message":"250","line":934,"column":25,"nodeType":"251","endLine":934,"endColumn":59},{"ruleId":"249","severity":1,"message":"250","line":961,"column":31,"nodeType":"251","endLine":961,"endColumn":68},{"ruleId":"235","severity":1,"message":"271","line":3,"column":1,"nodeType":"237","endLine":14,"endColumn":3},{"ruleId":"272","severity":1,"message":"273","line":8,"column":20,"nodeType":"274","messageId":"275","endLine":8,"endColumn":22},{"ruleId":"241","severity":1,"message":"276","line":8,"column":29,"nodeType":"243","messageId":"244","endLine":8,"endColumn":36},{"ruleId":"245","severity":1,"message":"260","line":26,"column":6,"nodeType":"247","endLine":26,"endColumn":8,"suggestions":"277"},{"ruleId":"235","severity":1,"message":"271","line":4,"column":1,"nodeType":"237","endLine":19,"endColumn":3},{"ruleId":"241","severity":1,"message":"258","line":3,"column":8,"nodeType":"243","messageId":"244","endLine":3,"endColumn":13},"no-native-reassign",["278"],"no-negated-in-lhs",["279"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'EditResource' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'callApiToFetchAllResources'. Either include it or remove the dependency array.","ArrayExpression",["280"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'callApiToFetchAllUsers'. Either include it or remove the dependency array.",["281"],"'CCardHeader' is defined but never used.","'CDataTable' is defined but never used.","'search' is assigned a value but never used.","'Fragment' is defined but never used.","'CIcon' is defined but never used.","'titleCase' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'props'. Either include them or remove the dependency array.",["282"],"'CSelect' is defined but never used.","'selectedDate' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\+.","Literal","unnecessaryEscape",["283","284"],["285","286"],"'aa' is assigned a value but never used.","Assign arrow function to a variable before exporting as module default","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'loading' is assigned a value but never used.",["287"],"no-global-assign","no-unsafe-negation",{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},{"messageId":"294","fix":"295","desc":"296"},{"messageId":"297","fix":"298","desc":"299"},{"messageId":"294","fix":"300","desc":"296"},{"messageId":"297","fix":"301","desc":"299"},{"desc":"292","fix":"302"},"Update the dependencies array to be: [callApiToFetchAllResources, search]",{"range":"303","text":"304"},"Update the dependencies array to be: [callApiToFetchAllUsers, search]",{"range":"305","text":"306"},"Update the dependencies array to be: [dispatch, props]",{"range":"307","text":"308"},"removeEscape",{"range":"309","text":"310"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"311","text":"312"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"313","text":"310"},{"range":"314","text":"312"},{"range":"315","text":"308"},[2884,2892],"[callApiToFetchAllResources, search]",[1921,1929],"[callApiToFetchAllUsers, search]",[933,935],"[dispatch, props]",[7037,7038],"",[7037,7037],"\\",[7080,7081],[7080,7080],[817,819]]