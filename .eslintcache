[{"/Volumes/DATA/Isha Kansal/reactjs/pivot-admin/src/index.js":"1","/Volumes/DATA/Isha Kansal/reactjs/pivot-admin/src/App.js":"2","/Volumes/DATA/Isha Kansal/reactjs/pivot-admin/src/reportWebVitals.js":"3","/Volumes/DATA/Isha Kansal/pivot-admin/src/index.js":"4","/Volumes/DATA/Isha Kansal/pivot-admin/src/App.js":"5","/Volumes/DATA/Isha Kansal/pivot-admin/src/store/index.js":"6","/Volumes/DATA/Isha Kansal/pivot-admin/src/polyfill.js":"7","/Volumes/DATA/Isha Kansal/pivot-admin/src/serviceWorker.js":"8","/Volumes/DATA/Isha Kansal/pivot-admin/src/store/sagas/index.js":"9","/Volumes/DATA/Isha Kansal/pivot-admin/src/store/reducers/index.js":"10","/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/TheLayout.js":"11","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/login/Login.js":"12","/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/index.js":"13","/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/TheSidebar.js":"14","/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/TheHeaderDropdown.js":"15","/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/TheHeader.js":"16","/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/TheContent.js":"17","/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/_nav.js":"18","/Volumes/DATA/Isha Kansal/pivot-admin/src/routes.js":"19","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/resources/Resources.js":"20","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/users/Users.js":"21","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/planners/Planners.js":"22","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/experts/Experts.js":"23","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/users/User.js":"24","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/users/UsersData.js":"25","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/experts/AddExpert.js":"26","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/resources/AddResource.js":"27","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/store/sagas.js":"28","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/store/types.js":"29","/Volumes/DATA/Isha Kansal/pivot-admin/src/common/axios.js":"30","/Volumes/DATA/Isha Kansal/pivot-admin/src/config.js":"31","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/store/reducer.js":"32","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/store/action.js":"33","/Volumes/DATA/Isha Kansal/pivot-admin/src/loader/index.js":"34","/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/icons.js":"35","/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/logo.js":"36","/Volumes/DATA/Isha Kansal/pivot-admin/src/assets/icons/index.js":"37","/Volumes/DATA/Isha Kansal/pivot-admin/src/common/commonModal.js":"38","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/resources/ResourcesData.js":"39","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/resources/EditResource.js":"40","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/resources/Resource.js":"41","/Volumes/DATA/Isha Kansal/pivot-admin/src/common/stringFunction.js":"42"},{"size":500,"mtime":1612329326000,"results":"43","hashOfConfig":"44"},{"size":195,"mtime":1612330254000,"results":"45","hashOfConfig":"44"},{"size":362,"mtime":1612329326000,"results":"46","hashOfConfig":"44"},{"size":933,"mtime":1612777214000,"results":"47","hashOfConfig":"48"},{"size":1984,"mtime":1612953652000,"results":"49","hashOfConfig":"48"},{"size":774,"mtime":1612498790000,"results":"50","hashOfConfig":"48"},{"size":1895,"mtime":1612498790000,"results":"51","hashOfConfig":"48"},{"size":4686,"mtime":1612498790000,"results":"52","hashOfConfig":"48"},{"size":179,"mtime":1612762089000,"results":"53","hashOfConfig":"48"},{"size":186,"mtime":1612844550000,"results":"54","hashOfConfig":"48"},{"size":380,"mtime":1612498790000,"results":"55","hashOfConfig":"48"},{"size":6105,"mtime":1613033725000,"results":"56","hashOfConfig":"48"},{"size":284,"mtime":1612498790000,"results":"57","hashOfConfig":"48"},{"size":1293,"mtime":1612777470000,"results":"58","hashOfConfig":"48"},{"size":464,"mtime":1612498790000,"results":"59","hashOfConfig":"48"},{"size":765,"mtime":1613028365000,"results":"60","hashOfConfig":"48"},{"size":1164,"mtime":1612770427000,"results":"61","hashOfConfig":"48"},{"size":671,"mtime":1612776278000,"results":"62","hashOfConfig":"48"},{"size":1500,"mtime":1612955663000,"results":"63","hashOfConfig":"48"},{"size":4377,"mtime":1612955837000,"results":"64","hashOfConfig":"48"},{"size":9978,"mtime":1613045511000,"results":"65","hashOfConfig":"48"},{"size":709,"mtime":1612776116000,"results":"66","hashOfConfig":"48"},{"size":1604,"mtime":1612778142000,"results":"67","hashOfConfig":"48"},{"size":5592,"mtime":1613046302000,"results":"68","hashOfConfig":"48"},{"size":3214,"mtime":1612503074000,"results":"69","hashOfConfig":"48"},{"size":8772,"mtime":1612778142000,"results":"70","hashOfConfig":"48"},{"size":18140,"mtime":1612951235000,"results":"71","hashOfConfig":"48"},{"size":2083,"mtime":1612958873000,"results":"72","hashOfConfig":"48"},{"size":536,"mtime":1612956707000,"results":"73","hashOfConfig":"48"},{"size":882,"mtime":1613043299000,"results":"74","hashOfConfig":"48"},{"size":173,"mtime":1612500055000,"results":"75","hashOfConfig":"48"},{"size":1369,"mtime":1612957292000,"results":"76","hashOfConfig":"48"},{"size":529,"mtime":1612958105000,"results":"77","hashOfConfig":"48"},{"size":275,"mtime":1612765608000,"results":"78","hashOfConfig":"48"},{"size":7217,"mtime":1612768792000,"results":"79","hashOfConfig":"48"},{"size":9997,"mtime":1612769714000,"results":"80","hashOfConfig":"48"},{"size":3924,"mtime":1612782108000,"results":"81","hashOfConfig":"48"},{"size":1674,"mtime":1613037477000,"results":"82","hashOfConfig":"48"},{"size":2273,"mtime":1612955858000,"results":"83","hashOfConfig":"48"},{"size":18142,"mtime":1612953612000,"results":"84","hashOfConfig":"48"},{"size":1269,"mtime":1612955896000,"results":"85","hashOfConfig":"48"},{"size":124,"mtime":1613034251000,"results":"86","hashOfConfig":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"161ocxv",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},"z7vibx",{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"95"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"95"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"95"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"95"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"95"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"95"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"95"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"95"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},"/Volumes/DATA/Isha Kansal/reactjs/pivot-admin/src/index.js",[],"/Volumes/DATA/Isha Kansal/reactjs/pivot-admin/src/App.js",[],"/Volumes/DATA/Isha Kansal/reactjs/pivot-admin/src/reportWebVitals.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/index.js",[],["180","181"],"/Volumes/DATA/Isha Kansal/pivot-admin/src/App.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/store/index.js",["182"],"import { applyMiddleware, createStore, compose } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport { rootReducer } from \"./reducers/index\";\nimport rootSaga from \"./sagas/index\";\nimport logger from \"redux-logger\";\n\nconst persistConfig = {\n  debug: false,\n  key: \"root\",\n  keyPrefix: \"v.1\",\n  storage,\n};\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = createStore(\n  persistedReducer,\n  compose(applyMiddleware(sagaMiddleware, logger))\n);\nexport const persistor = persistStore(store);\n\nsagaMiddleware.run(rootSaga);\nexport default { store, persistor };\n","/Volumes/DATA/Isha Kansal/pivot-admin/src/polyfill.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/serviceWorker.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/store/sagas/index.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/store/reducers/index.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/TheLayout.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/views/login/Login.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/index.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/TheSidebar.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/TheHeaderDropdown.js",["183"],"import React from \"react\";\nimport { Button } from \"reactstrap\";\nimport { Redirect } from \"react-router-dom\";\n\nconst TheHeaderDropdown = (props) => {\n  const handleLogout = (e) => {\n    e.preventDefault();\n    props.history.push(\"/login\");\n  };\n  return (\n    <div>\n      <Button\n        color=\"bordered\"\n        onClick={handleLogout}\n        className=\"logout-btn ml-2\"\n      >\n        Logout\n      </Button>\n    </div>\n  );\n};\n\nexport default TheHeaderDropdown;\n","/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/TheHeader.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/TheContent.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/_nav.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/routes.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/views/resources/Resources.js",["184","185","186"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport Pagination from \"react-js-pagination\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n  CButton,\n  CDataTable,\n  CPagination,\n} from \"@coreui/react\";\nimport resourcesData from \"./ResourcesData\";\nimport EDIT from \"../../assets/icons/edit.svg\";\nimport DELETE from \"../../assets/icons/delete.svg\";\nconst Resources = (props) => {\n  const history = useHistory();\n  const queryPage = useLocation().search.match(/page=([0-9]+)/, \"\");\n  const currentPage = Number(queryPage && queryPage[1] ? queryPage[1] : 1);\n  const [page, setPage] = useState(currentPage);\n  const [search, setSearch] = useState(\"\");\n  const pageChange = (newPage) => {\n    currentPage !== newPage && history.push(`/resources?page=${newPage}`);\n  };\n  useEffect(() => {\n    currentPage !== page && setPage(currentPage);\n  }, [currentPage, page]);\n  const addResource = () => {\n    props.history.push(\"/addResource\");\n  };\n  const editResource = () => {\n    props.history.push(\"/editResource\");\n  };\n  const handleSearch = (e) => {\n    setSearch(e.target.value);\n  };\n  const filterRecords = () => {\n    // const search = search.trim().replace(/ +/g, \" \");\n    if (!search) return resourcesData;\n\n    return (\n      resourcesData &&\n      resourcesData.filter((data) => {\n        console.log(\"4576489678947\", data);\n        let isTrue;\n\n        if (data.name) {\n          isTrue = data.name.toLowerCase().includes(search);\n        }\n\n        return isTrue;\n      })\n    );\n  };\n  const searchRecords = filterRecords();\n  return (\n    <CRow>\n      <CCol xl={12}>\n        <form>\n          <div className=\"text-center search-input\">\n            <input\n              type=\"search\"\n              className=\"form-control\"\n              placeholder=\"Search\"\n              required\n              onChange={handleSearch}\n            />\n          </div>\n        </form>\n      </CCol>\n\n      <CCol xl={12}>\n        <CCard>\n          <CCardHeader>\n            <CButton\n              style={{ width: 150 }}\n              block\n              color=\"info\"\n              onClick={addResource}\n            >\n              Add Resource\n            </CButton>{\" \"}\n          </CCardHeader>\n          <CCardBody>\n            <CCardBody>\n              <CDataTable\n                items={searchRecords}\n                fields={[\n                  { key: \"name\", _classes: \"font-weight-bold\" },\n                  \"format\",\n                  \"pricing\",\n                  \"action\",\n                ]}\n                scopedSlots={{\n                  action: (item) => (\n                    <td>\n                      <button className=\"icon\" onClick={editResource}>\n                        <img src={EDIT} className=\"ml-3\" />\n                      </button>\n                      <button\n                        className=\"icon\"\n                        // onClick={(e) => this.handlePlusButton(e, \"prosAdd\")}\n                      >\n                        <img src={DELETE} className=\"ml-3\" />\n                      </button>\n                    </td>\n                  ),\n                }}\n                itemsPerPage={10}\n                activePage={page}\n                clickableRows\n                onRowClick={(item) => history.push(`/resources/${item.id}`)}\n              />\n              <div className=\"text-center pagination-input\">\n                {resourcesData.length > 10 && (\n                  <Pagination\n                    className=\"mt-3 mx-auto w-fit-content\"\n                    itemClass=\"page-item\"\n                    linkClass=\"page-link\"\n                    activeClass=\"active\"\n                    activePage={page}\n                    itemsCountPerPage={10}\n                    totalItemsCount={resourcesData.length}\n                    pageRangeDisplayed={5}\n                    onChange={pageChange}\n                  />\n                )}\n              </div>\n              {/* <CPagination\n                activePage={page}\n                onActivePageChange={pageChange}\n                pages={5}\n                doubleArrows={false}\n                align=\"center\"\n              /> */}\n            </CCardBody>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  );\n};\n\nexport default withRouter(Resources);\n","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/users/Users.js",["187","188","189","190","191","192"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport Pagination from \"react-js-pagination\";\nimport CommonModal from \"../../common/commonModal\";\nimport { NotificationManager } from \"react-notifications\";\nimport {\n  CBadge,\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CLabel,\n  CRow,\n} from \"@coreui/react\";\nimport { connect } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { withRouter } from \"react-router-dom\";\nimport usersData from \"./UsersData\";\nimport { fetchUsers, userStatus } from \"../store/action\";\n\nconst Users = (props) => {\n  const history = useHistory();\n  const queryPage = useLocation().search.match(/page=([0-9]+)/, \"\");\n  const currentPage = Number(queryPage && queryPage[1] ? queryPage[1] : 1);\n  const [page, setPage] = useState(currentPage);\n  const [search, setSearch] = useState(\"\");\n  const [modalOpen, setModalOpen] = useState(false);\n  const [type, setType] = useState(\"\");\n  const [unBlock, setUnblock] = useState([]);\n  const [idUser, setIdUser] = useState(\"\");\n  const [usersDetails, setUsersDetails] = useState([]);\n  const dispatch = useDispatch();\n  const pageChange = (newPage) => {\n    currentPage !== newPage && history.push(`/users?page=${newPage}`);\n  };\n  const handleSearch = (e) => {\n    setSearch(e.target.value);\n  };\n  useEffect(() => {\n    currentPage !== page && setPage(currentPage);\n  }, [currentPage, page]);\n\n  useEffect(() => {\n    callApiToFetchAllUsers();\n  }, []);\n\n  const callApiToFetchAllUsers = () => {\n    props.fetchUsers(\"user/all\", (value) => {\n      console.log(\"7586783869839869\", value);\n      setUsersDetails(value.data.users);\n    });\n  };\n  // useEffect(() => {\n  //   dispatch(\n  //     fetchUsers(\"user/all\", (value) => {\n  //       console.log(\"7586783869839869\", value);\n  //       setUsersDetails(value.data.users);\n  //     })\n  //   );\n  // }, []);\n\n  const filterRecords = () => {\n    // const search = search.trim().replace(/ +/g, \" \");\n    if (!search) return usersDetails;\n\n    return (\n      usersDetails &&\n      usersDetails.filter((data) => {\n        console.log(\"4576489678947\", data);\n        let isTrue;\n        if (data.email) {\n          isTrue = data.email.toLowerCase().includes(search);\n        }\n        if (data.country) {\n          isTrue = data.country.toLowerCase().includes(search);\n        }\n        if (data.name) {\n          isTrue = data.name.toLowerCase().includes(search);\n        }\n\n        return isTrue;\n      })\n    );\n  };\n  const getBadge = (status) => {\n    switch (status) {\n      case \"Verified\":\n        return \"success\";\n\n      case \"Not Verified\":\n        return \"danger\";\n      default:\n        return \"primary\";\n    }\n  };\n  const searchRecords = filterRecords();\n\n  const onBlock = (e, type, item) => {\n    console.log(\"48978948798\", type, item);\n    setIdUser(item._id);\n    setType(type);\n    e.preventDefault();\n    e.stopPropagation();\n    setModalOpen(!modalOpen);\n  };\n  const blockUser = (id) => {\n    if (idUser === id) {\n      setModalOpen(false);\n      console.log(\"47899456798\", type);\n      // let arr = unBlock.slice();\n      // arr.push(id);\n      // setUnblock(arr);\n      callApi(type, id);\n    }\n  };\n  console.log(\"945789849hdfgdj879894\", unBlock);\n  const callApi = (type, id) => {\n    let obj = {\n      type: type,\n      id: id,\n    };\n    console.log(\"457978948794857\", obj);\n    props.userStatus(\"user/change-status\", obj, (value) => {\n      console.log(\"95689859859\", value, id);\n      if (value.status === 200) {\n        NotificationManager.success(value.message, \"\", 1000);\n        callApiToFetchAllUsers();\n      }\n    });\n  };\n  console.log(\"4986784987984978\", usersDetails);\n  return (\n    <CRow>\n      <CCol xl={12}>\n        <form>\n          <div className=\"text-center search-input\">\n            <input\n              type=\"search\"\n              className=\"form-control\"\n              placeholder=\"Search\"\n              required\n              onChange={handleSearch}\n            />\n          </div>\n        </form>\n      </CCol>\n\n      <CCol xl={12}>\n        <CCard>\n          {/* <CCardHeader>Users</CCardHeader> */}\n          <CCardBody>\n            <CDataTable\n              items={searchRecords}\n              fields={[\n                { key: \"name\", _classes: \"font-weight-bold\" },\n                \"email\",\n                \"status\",\n                \"country\",\n                \"action\",\n              ]}\n              scopedSlots={{\n                name: (item) => (\n                  <td>\n                    {item.first_name && item.last_name\n                      ? item.first_name + \" \" + item.last_name\n                      : \"-\"}\n                  </td>\n                ),\n                email: (item) => <td>{item.email ? item.email : \"-\"}</td>,\n                status: (item) => (\n                  <td>\n                    <CBadge\n                      color={getBadge(\n                        !item.is_verified ? \"Not Verified\" : \"Verified\"\n                      )}\n                    >\n                      {!item.is_verified ? \"Not Verified\" : \"Verified\"}\n                    </CBadge>\n                  </td>\n                ),\n                country: (item) => <td>{item.country ? item.country : \"-\"}</td>,\n                action: (item) => (\n                  <td>\n                    {item.status === \"blocked\" ? (\n                      <CButton\n                        onClick={(e) => onBlock(e, \"unblock\", item)}\n                        className=\"Unblock-btn block-btn\"\n                      >\n                        UnBlock\n                      </CButton>\n                    ) : item.status === \"activated\" ? (\n                      <div>\n                        <CButton\n                          onClick={(e) => onBlock(e, \"block\", item)}\n                          className=\"block-btn block-btn\"\n                        >\n                          Block\n                        </CButton>{\" \"}\n                        {/* <CButton\n                          onClick={(e) => onBlock(e, \"deactivate\", item)}\n                          className=\"Deactive-btn block-btn\"\n                        >\n                          Deactivate\n                        </CButton> */}\n                      </div>\n                    ) : item.status === \"deactivated\" ? (\n                      <div>\n                        {/* <CButton\n                          onClick={(e) => onBlock(e, \"activate\", item)}\n                          className=\"Unblock-btn block-btn\"\n                        >\n                          Activate\n                        </CButton> */}\n                        <CButton\n                          onClick={(e) => onBlock(e, \"block\", item)}\n                          className=\"block-btn block-btn\"\n                        >\n                          Block\n                        </CButton>\n                      </div>\n                    ) : (\n                      \"\"\n                    )}\n\n                    {/* {item.status !== \"blocked\" && (\n                      <CButton\n                        onClick={(e) => onBlock(e, \"block\", item)}\n                        className=\"block-btn block-btn\"\n                      >\n                        Block\n                      </CButton>\n                    )}\n                    {item.status === \"blocked\" && (\n                      <CButton\n                        onClick={(e) => onBlock(e, \"unblock\", item)}\n                        className=\"Unblock-btn block-btn\"\n                      >\n                        UnBlock\n                      </CButton>\n                    )}\n\n                    {item.status !== \"inactivated\" && (\n                      <CButton\n                        onClick={(e) => onBlock(e, \"deactivate\")}\n                        className=\"Deactive-btn block-btn\"\n                      >\n                        Deactivate\n                      </CButton>\n                    )}\n                    {item.status === \"inactivated\" && (\n                      <CButton\n                        onClick={(e) => onBlock(e, \"activate\")}\n                        className=\"Unblock-btn block-btn\"\n                      >\n                        Activate\n                      </CButton>\n                    )} */}\n                  </td>\n                ),\n              }}\n              itemsPerPage={10}\n              activePage={page}\n              clickableRows\n              onRowClick={(item) =>\n                history.push({\n                  pathname: `/users/${item._id}`,\n                  state: usersDetails,\n                })\n              }\n            />\n\n            <div className=\"text-center pagination-input\">\n              {usersDetails.length > 10 && (\n                <Pagination\n                  className=\"mt-3 mx-auto w-fit-content\"\n                  itemClass=\"page-item\"\n                  linkClass=\"page-link\"\n                  activeClass=\"active\"\n                  activePage={page}\n                  itemsCountPerPage={10}\n                  totalItemsCount={usersDetails.length}\n                  pageRangeDisplayed={5}\n                  onChange={pageChange}\n                />\n              )}\n            </div>\n            <div>\n              {modalOpen && (\n                <CommonModal\n                  isOpen={modalOpen}\n                  toggle={(e) => onBlock(e, type, idUser)}\n                  blockUser={(e) => blockUser(e, idUser)}\n                  id={idUser}\n                  type={type}\n                />\n              )}\n            </div>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {};\n};\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    {\n      fetchUsers,\n      userStatus,\n    },\n    dispatch\n  );\n};\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Users));\n","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/planners/Planners.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/views/experts/Experts.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/views/users/User.js",["193","194","195"],"/Volumes/DATA/Isha Kansal/pivot-admin/src/views/users/UsersData.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/views/experts/AddExpert.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/views/resources/AddResource.js",["196","197","198","199","200","201","202","203","204","205","206","207","208"],"import React, { Component } from \"react\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormGroup,\n  CTextarea,\n  CInput,\n  CLabel,\n  CRow,\n  CSelect,\n} from \"@coreui/react\";\nimport CameraIcon from \"../../assets/icons/photo-camera.svg\";\nimport ADD from \"../../assets/icons/add.svg\";\nimport CANCEL from \"../../assets/icons/cancel.svg\";\nimport { Input } from \"reactstrap\";\nimport CIcon from \"@coreui/icons-react\";\nimport Avatar from \"../../assets/icons/avatar.png\";\nclass AddResource extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      name: \"\",\n      format: \"\",\n      pricing: \"\",\n\n      uniqueSellingProposition: \"\",\n      errorType: \"\",\n      errorText: \"\",\n      expertImage: null,\n      plusBit: false,\n      pros: [],\n      cons: [],\n      details: [],\n    };\n  }\n  // uploadImage = (event) => {\n  //   if (event.target.files && event.target.files[0]) {\n  //     var reader = new FileReader();\n  //     reader.onloadend = function () {\n  //       // props.setImage(reader.result);\n  //       this.setState({\n  //         expertImage: reader.result,\n  //       });\n  //     }.bind(this);\n  //     reader.readAsDataURL(event.target.files[0]);\n  //   }\n  // };\n  errorShow = (type) => {\n    console.log(\"485789497894\", type);\n    const { errorType, errorText } = this.state;\n    return errorType === type ? <p>{errorText}</p> : null;\n  };\n  clearError = () => {\n    this.setState({\n      errorType: \"\",\n      errorText: \"\",\n    });\n  };\n  inputHandler = (e) => {\n    this.clearError();\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  inputProsCons = (e, index, type) => {\n    if (type === \"prosAdd\") {\n      let prosToUpdate = this.state.pros[index];\n      const newArray = [...this.state.pros];\n      prosToUpdate = {\n        ...prosToUpdate,\n        value: e.target.value,\n      };\n      newArray[index] = prosToUpdate;\n\n      this.clearError();\n      this.setState({ [e.target.name]: e.target.value, pros: newArray });\n    }\n    if (type === \"consAdd\") {\n      let consToUpdate = this.state.cons[index];\n      const newArray = [...this.state.cons];\n      consToUpdate = {\n        ...consToUpdate,\n        value: e.target.value,\n      };\n      newArray[index] = consToUpdate;\n\n      this.clearError();\n      this.setState({ [e.target.name]: e.target.value, cons: newArray });\n    }\n    if (type === \"detailsAdd\") {\n      let detailsToUpdate = this.state.details[index];\n      const newArray = [...this.state.details];\n      detailsToUpdate = {\n        ...detailsToUpdate,\n        value: e.target.value,\n      };\n      newArray[index] = detailsToUpdate;\n\n      this.clearError();\n      this.setState({ [e.target.name]: e.target.value, details: newArray });\n    }\n  };\n  onSubmit = (e) => {\n    const {\n      name,\n      format,\n      pricing,\n      details,\n      uniqueSellingProposition,\n      pros,\n      cons,\n    } = this.state;\n\n    if (name === \"\") {\n      this.setState({\n        errorType: \"name\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Name should not be empty</b>\n          </span>\n        ),\n      });\n      return;\n    }\n    if (name !== \"\") {\n      let filter = /^[a-zA-Z0-9]+([-_\\s]{1}[a-zA-Z0-9]+)*$/;\n\n      if (!filter.test(name)) {\n        this.setState({\n          errorType: \"name\",\n          errorText: (\n            <span className=\"text-danger\">\n              <b>\n                {\" \"}\n                Name should be combination of alphanumeric text, underscore,\n                space and hyphen\n              </b>\n            </span>\n          ),\n        });\n        return;\n      }\n    }\n    if (format === \"\") {\n      this.setState({\n        errorType: \"format\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Select any format</b>\n          </span>\n        ),\n      });\n      return;\n    }\n    if (pricing === \"\") {\n      this.setState({\n        errorType: \"pricing\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Please enter type of pricing</b>\n          </span>\n        ),\n      });\n      return;\n    }\n    if (pros.length === 0) {\n      this.setState({\n        errorType: \"pros\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Please add some pros</b>\n          </span>\n        ),\n      });\n      return;\n    }\n    if (cons.length === 0) {\n      this.setState({\n        errorType: \"cons\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Please add some cons</b>\n          </span>\n        ),\n      });\n      return;\n    }\n    if (details.length === 0) {\n      this.setState({\n        errorType: \"details\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Please add some details</b>\n          </span>\n        ),\n      });\n      return;\n    }\n\n    if (uniqueSellingProposition === \"\") {\n      this.setState({\n        errorType: \"uniqueSellingProposition\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Please enter some information</b>\n          </span>\n        ),\n      });\n      return;\n    }\n  };\n  resetState = (e) => {\n    const { name, format } = this.state;\n    console.log(\"895849587984597845\", name, format);\n    e.preventDefault();\n    this.setState({\n      name: \"\",\n      format: \"\",\n      pricing: \"\",\n      details: [],\n      pros: [],\n      cons: [],\n      uniqueSellingProposition: \"\",\n      errorType: \"\",\n      errorText: \"\",\n    });\n  };\n  handleBack = (e) => {\n    e.preventDefault();\n    this.props.history.push(\"/resources\");\n  };\n  handlePlusButton = (e, type) => {\n    console.log(\"847984857840\", type);\n    if (type === \"prosAdd\") {\n      const { pros } = this.state;\n      const newArr = [...pros];\n      e.preventDefault();\n      e.stopPropagation();\n      let newPros = {\n        value: \"\",\n      };\n      newArr.push(newPros);\n      this.setState({\n        pros: newArr,\n      });\n    }\n    if (type === \"consAdd\") {\n      const { cons } = this.state;\n      const newArr = [...cons];\n      e.preventDefault();\n      e.stopPropagation();\n      let newCons = {\n        value: \"\",\n      };\n      newArr.push(newCons);\n      this.setState({\n        cons: newArr,\n      });\n    }\n    if (type === \"detailsAdd\") {\n      const { details } = this.state;\n      const newArr = [...details];\n      e.preventDefault();\n      e.stopPropagation();\n      let newDetails = {\n        value: \"\",\n      };\n      newArr.push(newDetails);\n      this.setState({\n        details: newArr,\n      });\n    }\n  };\n  handleCancel = (e, index, type) => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (type === \"prosAdd\") {\n      const { pros } = this.state;\n      console.log(\"94586794897894\", pros);\n      const newArr = [...pros];\n      newArr.splice(index, 1);\n      this.setState({\n        pros: newArr,\n      });\n    }\n    if (type === \"consAdd\") {\n      const { cons } = this.state;\n      console.log(\"94586794897894\", cons);\n      const newArr = [...cons];\n      newArr.splice(index, 1);\n      this.setState({\n        cons: newArr,\n      });\n    }\n    if (type === \"detailsAdd\") {\n      const { details } = this.state;\n      console.log(\"94586794897894\", details);\n      const newArr = [...details];\n      newArr.splice(index, 1);\n      this.setState({\n        details: newArr,\n      });\n    }\n  };\n  render() {\n    const {\n      name,\n      format,\n      pricing,\n      uniqueSellingProposition,\n\n      expertImage,\n      plusBit,\n      pros,\n      cons,\n      details,\n    } = this.state;\n\n    return (\n      <CRow>\n        <CCol xs=\"12\" sm=\"12\">\n          <CCard>\n            <CCardHeader>\n              <CButton onClick={this.handleBack} className=\"backBtn\">\n                <i className=\"fas fa-arrow-left\"></i>Back\n              </CButton>\n              {/* <div className=\"update-profile-image\">\n                <img\n                  id=\"output\"\n                  src={expertImage ? expertImage : Avatar}\n                  alt=\"profile\"\n                  className=\"profile negative-margin\"\n                />\n                <div>\n                  <Input\n                    type=\"file\"\n                    accept=\"image/*\"\n                    id=\"f-upload\"\n                    name=\"myImage\"\n                    onChange={this.uploadImage}\n                    className=\"d-none\"\n                  />\n                  <label htmlFor=\"f-upload\" class=\"custom-file-upload\">\n                    <div className=\"camera-btn\" onClick={this.uploadImage}>\n                      <img src={CameraIcon} alt=\"camera\" />\n                    </div>\n                  </label>\n                </div>\n              </div> */}\n            </CCardHeader>\n            <CCardBody>\n              <CForm\n                action=\"\"\n                method=\"post\"\n                encType=\"multipart/form-data\"\n                className=\"form-horizontal\"\n              >\n                <CFormGroup row></CFormGroup>\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"name\">Name</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CInput\n                      id=\"name\"\n                      name=\"name\"\n                      placeholder=\"Name\"\n                      onChange={this.inputHandler}\n                      value={name}\n                    />\n                    {this.errorShow(\"name\")}\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"format\">Format</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CSelect\n                      custom\n                      name=\"format\"\n                      id=\"format\"\n                      onChange={this.inputHandler}\n                    >\n                      <option value=\"select\">Select</option>\n                      <option value=\"remote\">Remote</option>\n                    </CSelect>\n                    {this.errorShow(\"format\")}\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"pricing\">Pricing</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CSelect\n                      custom\n                      name=\"pricing\"\n                      id=\"pricing\"\n                      onChange={this.inputHandler}\n                    >\n                      <option value=\"select\">Select</option>\n                      <option value=\"economical\">Economical</option>\n                    </CSelect>\n                    {this.errorShow(\"pricing\")}\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"prosCons\">Pros & Cons</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <div class=\"d-flex justify-content-between add-list\">\n                      <CLabel htmlFor=\"pros\">Pros</CLabel>\n                      <button\n                        className=\"icon\"\n                        onClick={(e) => this.handlePlusButton(e, \"prosAdd\")}\n                      >\n                        <img src={ADD} className=\"ml-3\" />\n                      </button>\n                    </div>\n                    {this.errorShow(\"pros\")}\n                    {pros &&\n                      pros.length > 0 &&\n                      pros.map((el, index) => {\n                        return (\n                          <div className=\"d-flex align-items-center mb-2 \">\n                            {/* <input value={el.value} /> */}\n                            <CInput\n                              type=\"text\"\n                              id={`pros${index}`}\n                              name={`pros${index}`}\n                              placeholder={`${index + 1}.`}\n                              autoComplete={`pros${index}`}\n                              onChange={(e) => {\n                                this.inputProsCons(e, index, \"prosAdd\");\n                              }}\n                              // value={`pros${index}`}\n                            />\n                            <button\n                              className=\"icon\"\n                              onClick={(e) =>\n                                this.handleCancel(e, index, \"prosAdd\")\n                              }\n                            >\n                              <img src={CANCEL} className=\"ml-3\" />\n                            </button>\n                          </div>\n                        );\n                      })}\n\n                    {/* {this.errorShow(\"fields\")} */}\n                    <div class=\"d-flex justify-content-between add-list\">\n                      <CLabel htmlFor=\"cons\">Cons</CLabel>\n                      <button\n                        className=\"icon\"\n                        onClick={(e) => this.handlePlusButton(e, \"consAdd\")}\n                      >\n                        <img src={ADD} className=\"ml-3\" />\n                      </button>\n                    </div>\n                    {this.errorShow(\"cons\")}\n                    {cons &&\n                      cons.length > 0 &&\n                      cons.map((el, index) => {\n                        return (\n                          <div className=\"d-flex align-items-center mb-2\">\n                            {/* <input value={el.value} /> */}\n                            <CInput\n                              type=\"text\"\n                              id={`cons${index}`}\n                              name={`cons${index}`}\n                              placeholder={`${index + 1}.`}\n                              autoComplete={`cons${index}`}\n                              onChange={(e) => {\n                                this.inputProsCons(e, index, \"consAdd\");\n                              }}\n                              // value={`pros${index}`}\n                            />\n                            <button\n                              className=\"icon\"\n                              onClick={(e) =>\n                                this.handleCancel(e, index, \"consAdd\")\n                              }\n                            >\n                              <img src={CANCEL} className=\"ml-3\" />\n                            </button>\n                          </div>\n                        );\n                      })}\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"details\">Details</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <div class=\"d-flex justify-content-between add-list\">\n                      <CLabel htmlFor=\"addDetails\">Add</CLabel>\n                      <button\n                        className=\"icon\"\n                        onClick={(e) => this.handlePlusButton(e, \"detailsAdd\")}\n                      >\n                        <img src={ADD} className=\"ml-3\" />\n                      </button>\n                    </div>\n                    {this.errorShow(\"details\")}\n                    {details &&\n                      details.length > 0 &&\n                      details.map((el, index) => {\n                        return (\n                          <div className=\"d-flex align-items-center mb-2\">\n                            {/* <input value={el.value} /> */}\n                            <CInput\n                              type=\"text\"\n                              id={`details${index}`}\n                              name={`details${index}`}\n                              placeholder={`${index + 1}.`}\n                              autoComplete={`details${index}`}\n                              onChange={(e) => {\n                                this.inputProsCons(e, index, \"detailsAdd\");\n                              }}\n                              // value={`pros${index}`}\n                            />\n\n                            <button\n                              className=\"icon\"\n                              onClick={(e) =>\n                                this.handleCancel(e, index, \"detailsAdd\")\n                              }\n                            >\n                              <img src={CANCEL} className=\"ml-3\" />\n                            </button>\n                            {/* {this.errorShow(\"details\")} */}\n                          </div>\n                        );\n                      })}\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"uniqueSellingProposition\">\n                      Unique Selling Proposition\n                    </CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CTextarea\n                      name=\"uniqueSellingProposition\"\n                      id=\"uniqueSellingProposition\"\n                      rows=\"9\"\n                      onChange={this.inputHandler}\n                      placeholder=\"Content...\"\n                      value={uniqueSellingProposition}\n                    />\n                    {this.errorShow(\"uniqueSellingProposition\")}\n                  </CCol>\n                </CFormGroup>\n              </CForm>\n            </CCardBody>\n            <CCardFooter>\n              <CButton\n                type=\"submit\"\n                size=\"sm\"\n                color=\"primary\"\n                onClick={this.onSubmit}\n              >\n                <CIcon name=\"cil-scrubber\" /> Submit\n              </CButton>\n              <CButton\n                type=\"reset\"\n                size=\"sm\"\n                color=\"danger\"\n                onClick={this.resetState}\n              >\n                <CIcon name=\"cil-ban\" /> Reset\n              </CButton>\n            </CCardFooter>\n          </CCard>\n        </CCol>\n      </CRow>\n    );\n  }\n}\n\nexport default AddResource;\n","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/store/sagas.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/views/store/types.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/common/axios.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/config.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/views/store/reducer.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/views/store/action.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/loader/index.js",["209","210"],"import React from \"react\";\nconst dots = [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}];\nexport default () => (\n  <div className=\"content-loader\">\n    <div className=\"dot-loader\">\n      {dots.map(({}, index) => (\n        <div key={index} />\n      ))}\n    </div>\n  </div>\n);\n","/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/icons.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/logo.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/assets/icons/index.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/common/commonModal.js",["211"],"import React from \"react\";\nimport { Button, Modal, ModalBody, ModalHeader } from \"reactstrap\";\n// import DeleteIcon from \"../assets/images/dashboard/delete-modal-icon.png\";\n// import CloseIcon from \"../assets/images/dashboard/closeIcon.png\";\n\nclass CommonModal extends React.Component {\n  render() {\n    const { isOpen, toggle, loading, blockUser, type, id } = this.props;\n    console.log(\"dhjfgdjh\", this.props);\n    return (\n      <Modal\n        isOpen={isOpen}\n        toggle={toggle}\n        className=\"deleteModal mt-5 modal-dialog-centered\"\n      >\n        <ModalHeader toggle={toggle}>\n          {type === \"block\" ? (\n            <h2>Want to Block</h2>\n          ) : type === \"unblock\" ? (\n            <h2>Want to Unblock</h2>\n          ) : type === \"deactivate\" ? (\n            <h2>Want to Deactivate</h2>\n          ) : (\n            \"\"\n          )}\n        </ModalHeader>\n        <ModalBody className=\"text-center\">\n          <div className=\"text-center mb-3\"></div>\n\n          {type === \"block\" ? (\n            <p>Do you really want to block this {id} user ?</p>\n          ) : type === \"unblock\" ? (\n            <p>Do you really want to unblock this {id} user ?</p>\n          ) : type === \"deactivate\" ? (\n            <p>Do you really want to deactivate this {id} user ?</p>\n          ) : (\n            \"\"\n          )}\n          <div className=\"text-center deleteBtn mt-4\">\n            <Button\n              color=\"success\"\n              onClick={() => blockUser(id)}\n              // disabled={loading}\n            >\n              Yes, Confirmed\n            </Button>\n          </div>\n        </ModalBody>\n      </Modal>\n    );\n  }\n}\n\nexport default CommonModal;\n","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/resources/ResourcesData.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/views/resources/EditResource.js",["212","213","214","215","216","217","218","219","220","221","222","223","224"],"import React, { Component } from \"react\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormGroup,\n  CTextarea,\n  CInput,\n  CLabel,\n  CRow,\n  CSelect,\n} from \"@coreui/react\";\nimport CameraIcon from \"../../assets/icons/photo-camera.svg\";\nimport ADD from \"../../assets/icons/add.svg\";\nimport CANCEL from \"../../assets/icons/cancel.svg\";\nimport { Input } from \"reactstrap\";\nimport CIcon from \"@coreui/icons-react\";\nimport Avatar from \"../../assets/icons/avatar.png\";\nclass EditResource extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      name: \"\",\n      format: \"\",\n      pricing: \"\",\n\n      uniqueSellingProposition: \"\",\n      errorType: \"\",\n      errorText: \"\",\n      expertImage: null,\n      plusBit: false,\n      pros: [],\n      cons: [],\n      details: [],\n    };\n  }\n  // uploadImage = (event) => {\n  //   if (event.target.files && event.target.files[0]) {\n  //     var reader = new FileReader();\n  //     reader.onloadend = function () {\n  //       // props.setImage(reader.result);\n  //       this.setState({\n  //         expertImage: reader.result,\n  //       });\n  //     }.bind(this);\n  //     reader.readAsDataURL(event.target.files[0]);\n  //   }\n  // };\n  errorShow = (type) => {\n    console.log(\"485789497894\", type);\n    const { errorType, errorText } = this.state;\n    return errorType === type ? <p>{errorText}</p> : null;\n  };\n  clearError = () => {\n    this.setState({\n      errorType: \"\",\n      errorText: \"\",\n    });\n  };\n  inputHandler = (e) => {\n    this.clearError();\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  inputProsCons = (e, index, type) => {\n    if (type === \"prosAdd\") {\n      let prosToUpdate = this.state.pros[index];\n      const newArray = [...this.state.pros];\n      prosToUpdate = {\n        ...prosToUpdate,\n        value: e.target.value,\n      };\n      newArray[index] = prosToUpdate;\n\n      this.clearError();\n      this.setState({ [e.target.name]: e.target.value, pros: newArray });\n    }\n    if (type === \"consAdd\") {\n      let consToUpdate = this.state.cons[index];\n      const newArray = [...this.state.cons];\n      consToUpdate = {\n        ...consToUpdate,\n        value: e.target.value,\n      };\n      newArray[index] = consToUpdate;\n\n      this.clearError();\n      this.setState({ [e.target.name]: e.target.value, cons: newArray });\n    }\n    if (type === \"detailsAdd\") {\n      let detailsToUpdate = this.state.details[index];\n      const newArray = [...this.state.details];\n      detailsToUpdate = {\n        ...detailsToUpdate,\n        value: e.target.value,\n      };\n      newArray[index] = detailsToUpdate;\n\n      this.clearError();\n      this.setState({ [e.target.name]: e.target.value, details: newArray });\n    }\n  };\n  onSubmit = (e) => {\n    const {\n      name,\n      format,\n      pricing,\n      details,\n      uniqueSellingProposition,\n      pros,\n      cons,\n    } = this.state;\n\n    if (name === \"\") {\n      this.setState({\n        errorType: \"name\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Name should not be empty</b>\n          </span>\n        ),\n      });\n      return;\n    }\n    if (name !== \"\") {\n      let filter = /^[a-zA-Z0-9]+([-_\\s]{1}[a-zA-Z0-9]+)*$/;\n\n      if (!filter.test(name)) {\n        this.setState({\n          errorType: \"name\",\n          errorText: (\n            <span className=\"text-danger\">\n              <b>\n                {\" \"}\n                Name should be combination of alphanumeric text, underscore,\n                space and hyphen\n              </b>\n            </span>\n          ),\n        });\n        return;\n      }\n    }\n    if (format === \"\") {\n      this.setState({\n        errorType: \"format\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Select any format</b>\n          </span>\n        ),\n      });\n      return;\n    }\n    if (pricing === \"\") {\n      this.setState({\n        errorType: \"pricing\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Please enter type of pricing</b>\n          </span>\n        ),\n      });\n      return;\n    }\n    if (pros.length === 0) {\n      this.setState({\n        errorType: \"pros\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Please add some pros</b>\n          </span>\n        ),\n      });\n      return;\n    }\n    if (cons.length === 0) {\n      this.setState({\n        errorType: \"cons\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Please add some cons</b>\n          </span>\n        ),\n      });\n      return;\n    }\n    if (details.length === 0) {\n      this.setState({\n        errorType: \"details\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Please add some details</b>\n          </span>\n        ),\n      });\n      return;\n    }\n\n    if (uniqueSellingProposition === \"\") {\n      this.setState({\n        errorType: \"uniqueSellingProposition\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Please enter some information</b>\n          </span>\n        ),\n      });\n      return;\n    }\n  };\n  resetState = (e) => {\n    const { name, format } = this.state;\n    console.log(\"895849587984597845\", name, format);\n    e.preventDefault();\n    this.setState({\n      name: \"\",\n      format: \"\",\n      pricing: \"\",\n      details: [],\n      pros: [],\n      cons: [],\n      uniqueSellingProposition: \"\",\n      errorType: \"\",\n      errorText: \"\",\n    });\n  };\n  handleBack = (e) => {\n    e.preventDefault();\n    this.props.history.push(\"/resources\");\n  };\n  handlePlusButton = (e, type) => {\n    console.log(\"847984857840\", type);\n    if (type === \"prosAdd\") {\n      const { pros } = this.state;\n      const newArr = [...pros];\n      e.preventDefault();\n      e.stopPropagation();\n      let newPros = {\n        value: \"\",\n      };\n      newArr.push(newPros);\n      this.setState({\n        pros: newArr,\n      });\n    }\n    if (type === \"consAdd\") {\n      const { cons } = this.state;\n      const newArr = [...cons];\n      e.preventDefault();\n      e.stopPropagation();\n      let newCons = {\n        value: \"\",\n      };\n      newArr.push(newCons);\n      this.setState({\n        cons: newArr,\n      });\n    }\n    if (type === \"detailsAdd\") {\n      const { details } = this.state;\n      const newArr = [...details];\n      e.preventDefault();\n      e.stopPropagation();\n      let newDetails = {\n        value: \"\",\n      };\n      newArr.push(newDetails);\n      this.setState({\n        details: newArr,\n      });\n    }\n  };\n  handleCancel = (e, index, type) => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (type === \"prosAdd\") {\n      const { pros } = this.state;\n      console.log(\"94586794897894\", pros);\n      const newArr = [...pros];\n      newArr.splice(index, 1);\n      this.setState({\n        pros: newArr,\n      });\n    }\n    if (type === \"consAdd\") {\n      const { cons } = this.state;\n      console.log(\"94586794897894\", cons);\n      const newArr = [...cons];\n      newArr.splice(index, 1);\n      this.setState({\n        cons: newArr,\n      });\n    }\n    if (type === \"detailsAdd\") {\n      const { details } = this.state;\n      console.log(\"94586794897894\", details);\n      const newArr = [...details];\n      newArr.splice(index, 1);\n      this.setState({\n        details: newArr,\n      });\n    }\n  };\n  render() {\n    const {\n      name,\n      format,\n      pricing,\n      uniqueSellingProposition,\n\n      expertImage,\n      plusBit,\n      pros,\n      cons,\n      details,\n    } = this.state;\n\n    return (\n      <CRow>\n        <CCol xs=\"12\" sm=\"12\">\n          <CCard>\n            <CCardHeader>\n              <CButton onClick={this.handleBack} className=\"backBtn\">\n                <i className=\"fas fa-arrow-left\"></i>Back\n              </CButton>\n              {/* <div className=\"update-profile-image\">\n                <img\n                  id=\"output\"\n                  src={expertImage ? expertImage : Avatar}\n                  alt=\"profile\"\n                  className=\"profile negative-margin\"\n                />\n                <div>\n                  <Input\n                    type=\"file\"\n                    accept=\"image/*\"\n                    id=\"f-upload\"\n                    name=\"myImage\"\n                    onChange={this.uploadImage}\n                    className=\"d-none\"\n                  />\n                  <label htmlFor=\"f-upload\" class=\"custom-file-upload\">\n                    <div className=\"camera-btn\" onClick={this.uploadImage}>\n                      <img src={CameraIcon} alt=\"camera\" />\n                    </div>\n                  </label>\n                </div>\n              </div> */}\n            </CCardHeader>\n            <CCardBody>\n              <CForm\n                action=\"\"\n                method=\"post\"\n                encType=\"multipart/form-data\"\n                className=\"form-horizontal\"\n              >\n                <CFormGroup row></CFormGroup>\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"name\">Name</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CInput\n                      id=\"name\"\n                      name=\"name\"\n                      placeholder=\"Name\"\n                      onChange={this.inputHandler}\n                      value={name}\n                    />\n                    {this.errorShow(\"name\")}\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"format\">Format</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CSelect\n                      custom\n                      name=\"format\"\n                      id=\"format\"\n                      onChange={this.inputHandler}\n                    >\n                      <option value=\"select\">Select</option>\n                      <option value=\"remote\">Remote</option>\n                    </CSelect>\n                    {this.errorShow(\"format\")}\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"pricing\">Pricing</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CSelect\n                      custom\n                      name=\"pricing\"\n                      id=\"pricing\"\n                      onChange={this.inputHandler}\n                    >\n                      <option value=\"select\">Select</option>\n                      <option value=\"economical\">Economical</option>\n                    </CSelect>\n                    {this.errorShow(\"pricing\")}\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"prosCons\">Pros & Cons</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <div class=\"d-flex justify-content-between add-list\">\n                      <CLabel htmlFor=\"pros\">Pros</CLabel>\n                      <button\n                        className=\"icon\"\n                        onClick={(e) => this.handlePlusButton(e, \"prosAdd\")}\n                      >\n                        <img src={ADD} className=\"ml-3\" />\n                      </button>\n                    </div>\n                    {this.errorShow(\"pros\")}\n                    {pros &&\n                      pros.length > 0 &&\n                      pros.map((el, index) => {\n                        return (\n                          <div className=\"d-flex align-items-center mb-2 \">\n                            {/* <input value={el.value} /> */}\n                            <CInput\n                              type=\"text\"\n                              id={`pros${index}`}\n                              name={`pros${index}`}\n                              placeholder={`${index + 1}.`}\n                              autoComplete={`pros${index}`}\n                              onChange={(e) => {\n                                this.inputProsCons(e, index, \"prosAdd\");\n                              }}\n                              // value={`pros${index}`}\n                            />\n                            <button\n                              className=\"icon\"\n                              onClick={(e) =>\n                                this.handleCancel(e, index, \"prosAdd\")\n                              }\n                            >\n                              <img src={CANCEL} className=\"ml-3\" />\n                            </button>\n                          </div>\n                        );\n                      })}\n\n                    {/* {this.errorShow(\"fields\")} */}\n                    <div class=\"d-flex justify-content-between add-list\">\n                      <CLabel htmlFor=\"cons\">Cons</CLabel>\n                      <button\n                        className=\"icon\"\n                        onClick={(e) => this.handlePlusButton(e, \"consAdd\")}\n                      >\n                        <img src={ADD} className=\"ml-3\" />\n                      </button>\n                    </div>\n                    {this.errorShow(\"cons\")}\n                    {cons &&\n                      cons.length > 0 &&\n                      cons.map((el, index) => {\n                        return (\n                          <div className=\"d-flex align-items-center mb-2\">\n                            {/* <input value={el.value} /> */}\n                            <CInput\n                              type=\"text\"\n                              id={`cons${index}`}\n                              name={`cons${index}`}\n                              placeholder={`${index + 1}.`}\n                              autoComplete={`cons${index}`}\n                              onChange={(e) => {\n                                this.inputProsCons(e, index, \"consAdd\");\n                              }}\n                              // value={`pros${index}`}\n                            />\n                            <button\n                              className=\"icon\"\n                              onClick={(e) =>\n                                this.handleCancel(e, index, \"consAdd\")\n                              }\n                            >\n                              <img src={CANCEL} className=\"ml-3\" />\n                            </button>\n                          </div>\n                        );\n                      })}\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"details\">Details</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <div class=\"d-flex justify-content-between add-list\">\n                      <CLabel htmlFor=\"addDetails\">Add</CLabel>\n                      <button\n                        className=\"icon\"\n                        onClick={(e) => this.handlePlusButton(e, \"detailsAdd\")}\n                      >\n                        <img src={ADD} className=\"ml-3\" />\n                      </button>\n                    </div>\n                    {this.errorShow(\"details\")}\n                    {details &&\n                      details.length > 0 &&\n                      details.map((el, index) => {\n                        return (\n                          <div className=\"d-flex align-items-center mb-2\">\n                            {/* <input value={el.value} /> */}\n                            <CInput\n                              type=\"text\"\n                              id={`details${index}`}\n                              name={`details${index}`}\n                              placeholder={`${index + 1}.`}\n                              autoComplete={`details${index}`}\n                              onChange={(e) => {\n                                this.inputProsCons(e, index, \"detailsAdd\");\n                              }}\n                              // value={`pros${index}`}\n                            />\n\n                            <button\n                              className=\"icon\"\n                              onClick={(e) =>\n                                this.handleCancel(e, index, \"detailsAdd\")\n                              }\n                            >\n                              <img src={CANCEL} className=\"ml-3\" />\n                            </button>\n                            {/* {this.errorShow(\"details\")} */}\n                          </div>\n                        );\n                      })}\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"uniqueSellingProposition\">\n                      Unique Selling Proposition\n                    </CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CTextarea\n                      name=\"uniqueSellingProposition\"\n                      id=\"uniqueSellingProposition\"\n                      rows=\"9\"\n                      onChange={this.inputHandler}\n                      placeholder=\"Content...\"\n                      value={uniqueSellingProposition}\n                    />\n                    {this.errorShow(\"uniqueSellingProposition\")}\n                  </CCol>\n                </CFormGroup>\n              </CForm>\n            </CCardBody>\n            <CCardFooter>\n              <CButton\n                type=\"submit\"\n                size=\"sm\"\n                color=\"primary\"\n                onClick={this.onSubmit}\n              >\n                <CIcon name=\"cil-scrubber\" /> Submit\n              </CButton>\n              <CButton\n                type=\"reset\"\n                size=\"sm\"\n                color=\"danger\"\n                onClick={this.resetState}\n              >\n                <CIcon name=\"cil-ban\" /> Reset\n              </CButton>\n            </CCardFooter>\n          </CCard>\n        </CCol>\n      </CRow>\n    );\n  }\n}\n\nexport default EditResource;\n","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/resources/Resource.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/common/stringFunction.js",[],{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","severity":1,"message":"230","line":28,"column":1,"nodeType":"231","endLine":28,"endColumn":37},{"ruleId":"232","severity":1,"message":"233","line":3,"column":10,"nodeType":"234","messageId":"235","endLine":3,"endColumn":18},{"ruleId":"232","severity":1,"message":"236","line":13,"column":3,"nodeType":"234","messageId":"235","endLine":13,"endColumn":14},{"ruleId":"237","severity":1,"message":"238","line":100,"column":25,"nodeType":"239","endLine":100,"endColumn":60},{"ruleId":"237","severity":1,"message":"238","line":106,"column":25,"nodeType":"239","endLine":106,"endColumn":62},{"ruleId":"232","severity":1,"message":"240","line":11,"column":3,"nodeType":"234","messageId":"235","endLine":11,"endColumn":14},{"ruleId":"232","severity":1,"message":"241","line":14,"column":3,"nodeType":"234","messageId":"235","endLine":14,"endColumn":9},{"ruleId":"232","severity":1,"message":"242","line":21,"column":8,"nodeType":"234","messageId":"235","endLine":21,"endColumn":17},{"ruleId":"232","severity":1,"message":"243","line":32,"column":19,"nodeType":"234","messageId":"235","endLine":32,"endColumn":29},{"ruleId":"232","severity":1,"message":"244","line":35,"column":9,"nodeType":"234","messageId":"235","endLine":35,"endColumn":17},{"ruleId":"245","severity":1,"message":"246","line":48,"column":6,"nodeType":"247","endLine":48,"endColumn":8,"suggestions":"248"},{"ruleId":"232","severity":1,"message":"249","line":10,"column":8,"nodeType":"234","messageId":"235","endLine":10,"endColumn":13},{"ruleId":"232","severity":1,"message":"250","line":15,"column":10,"nodeType":"234","messageId":"235","endLine":15,"endColumn":19},{"ruleId":"245","severity":1,"message":"251","line":27,"column":6,"nodeType":"247","endLine":27,"endColumn":8,"suggestions":"252"},{"ruleId":"232","severity":1,"message":"253","line":17,"column":8,"nodeType":"234","messageId":"235","endLine":17,"endColumn":18},{"ruleId":"232","severity":1,"message":"254","line":20,"column":10,"nodeType":"234","messageId":"235","endLine":20,"endColumn":15},{"ruleId":"232","severity":1,"message":"255","line":22,"column":8,"nodeType":"234","messageId":"235","endLine":22,"endColumn":14},{"ruleId":"232","severity":1,"message":"256","line":311,"column":7,"nodeType":"234","messageId":"235","endLine":311,"endColumn":13},{"ruleId":"232","severity":1,"message":"257","line":312,"column":7,"nodeType":"234","messageId":"235","endLine":312,"endColumn":14},{"ruleId":"232","severity":1,"message":"258","line":315,"column":7,"nodeType":"234","messageId":"235","endLine":315,"endColumn":18},{"ruleId":"232","severity":1,"message":"259","line":316,"column":7,"nodeType":"234","messageId":"235","endLine":316,"endColumn":14},{"ruleId":"237","severity":1,"message":"238","line":422,"column":25,"nodeType":"239","endLine":422,"endColumn":59},{"ruleId":"237","severity":1,"message":"238","line":449,"column":31,"nodeType":"239","endLine":449,"endColumn":68},{"ruleId":"237","severity":1,"message":"238","line":462,"column":25,"nodeType":"239","endLine":462,"endColumn":59},{"ruleId":"237","severity":1,"message":"238","line":489,"column":31,"nodeType":"239","endLine":489,"endColumn":68},{"ruleId":"237","severity":1,"message":"238","line":508,"column":25,"nodeType":"239","endLine":508,"endColumn":59},{"ruleId":"237","severity":1,"message":"238","line":536,"column":31,"nodeType":"239","endLine":536,"endColumn":68},{"ruleId":"229","severity":1,"message":"260","line":3,"column":1,"nodeType":"231","endLine":11,"endColumn":3},{"ruleId":"261","severity":1,"message":"262","line":6,"column":18,"nodeType":"263","messageId":"264","endLine":6,"endColumn":20},{"ruleId":"232","severity":1,"message":"265","line":8,"column":29,"nodeType":"234","messageId":"235","endLine":8,"endColumn":36},{"ruleId":"232","severity":1,"message":"253","line":17,"column":8,"nodeType":"234","messageId":"235","endLine":17,"endColumn":18},{"ruleId":"232","severity":1,"message":"254","line":20,"column":10,"nodeType":"234","messageId":"235","endLine":20,"endColumn":15},{"ruleId":"232","severity":1,"message":"255","line":22,"column":8,"nodeType":"234","messageId":"235","endLine":22,"endColumn":14},{"ruleId":"232","severity":1,"message":"256","line":311,"column":7,"nodeType":"234","messageId":"235","endLine":311,"endColumn":13},{"ruleId":"232","severity":1,"message":"257","line":312,"column":7,"nodeType":"234","messageId":"235","endLine":312,"endColumn":14},{"ruleId":"232","severity":1,"message":"258","line":315,"column":7,"nodeType":"234","messageId":"235","endLine":315,"endColumn":18},{"ruleId":"232","severity":1,"message":"259","line":316,"column":7,"nodeType":"234","messageId":"235","endLine":316,"endColumn":14},{"ruleId":"237","severity":1,"message":"238","line":422,"column":25,"nodeType":"239","endLine":422,"endColumn":59},{"ruleId":"237","severity":1,"message":"238","line":449,"column":31,"nodeType":"239","endLine":449,"endColumn":68},{"ruleId":"237","severity":1,"message":"238","line":462,"column":25,"nodeType":"239","endLine":462,"endColumn":59},{"ruleId":"237","severity":1,"message":"238","line":489,"column":31,"nodeType":"239","endLine":489,"endColumn":68},{"ruleId":"237","severity":1,"message":"238","line":508,"column":25,"nodeType":"239","endLine":508,"endColumn":59},{"ruleId":"237","severity":1,"message":"238","line":536,"column":31,"nodeType":"239","endLine":536,"endColumn":68},"no-native-reassign",["266"],"no-negated-in-lhs",["267"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'CPagination' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'CCardHeader' is defined but never used.","'CLabel' is defined but never used.","'usersData' is defined but never used.","'setUnblock' is assigned a value but never used.","'dispatch' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'callApiToFetchAllUsers'. Either include it or remove the dependency array.","ArrayExpression",["268"],"'CIcon' is defined but never used.","'titleCase' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["269"],"'CameraIcon' is defined but never used.","'Input' is defined but never used.","'Avatar' is defined but never used.","'format' is assigned a value but never used.","'pricing' is assigned a value but never used.","'expertImage' is assigned a value but never used.","'plusBit' is assigned a value but never used.","Assign arrow function to a variable before exporting as module default","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'loading' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"270","fix":"271"},{"desc":"272","fix":"273"},"Update the dependencies array to be: [callApiToFetchAllUsers]",{"range":"274","text":"275"},"Update the dependencies array to be: [dispatch]",{"range":"276","text":"277"},[1572,1574],"[callApiToFetchAllUsers]",[722,724],"[dispatch]"]