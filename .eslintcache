[{"/Volumes/DATA/Isha Kansal/reactjs/pivot-admin/src/index.js":"1","/Volumes/DATA/Isha Kansal/reactjs/pivot-admin/src/App.js":"2","/Volumes/DATA/Isha Kansal/reactjs/pivot-admin/src/reportWebVitals.js":"3","/Volumes/DATA/Isha Kansal/pivot-admin/src/index.js":"4","/Volumes/DATA/Isha Kansal/pivot-admin/src/App.js":"5","/Volumes/DATA/Isha Kansal/pivot-admin/src/store/index.js":"6","/Volumes/DATA/Isha Kansal/pivot-admin/src/polyfill.js":"7","/Volumes/DATA/Isha Kansal/pivot-admin/src/serviceWorker.js":"8","/Volumes/DATA/Isha Kansal/pivot-admin/src/store/sagas/index.js":"9","/Volumes/DATA/Isha Kansal/pivot-admin/src/store/reducers/index.js":"10","/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/TheLayout.js":"11","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/login/Login.js":"12","/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/index.js":"13","/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/TheSidebar.js":"14","/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/TheHeaderDropdown.js":"15","/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/TheHeader.js":"16","/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/TheContent.js":"17","/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/_nav.js":"18","/Volumes/DATA/Isha Kansal/pivot-admin/src/routes.js":"19","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/resources/Resources.js":"20","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/users/Users.js":"21","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/planners/Planners.js":"22","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/experts/Experts.js":"23","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/users/User.js":"24","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/users/UsersData.js":"25","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/experts/AddExpert.js":"26","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/resources/AddResource.js":"27","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/store/sagas.js":"28","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/store/types.js":"29","/Volumes/DATA/Isha Kansal/pivot-admin/src/common/axios.js":"30","/Volumes/DATA/Isha Kansal/pivot-admin/src/config.js":"31","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/store/reducer.js":"32","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/store/action.js":"33","/Volumes/DATA/Isha Kansal/pivot-admin/src/loader/index.js":"34","/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/icons.js":"35","/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/logo.js":"36","/Volumes/DATA/Isha Kansal/pivot-admin/src/assets/icons/index.js":"37","/Volumes/DATA/Isha Kansal/pivot-admin/src/common/commonModal.js":"38","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/resources/ResourcesData.js":"39","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/resources/EditResource.js":"40","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/resources/Resource.js":"41","/Volumes/DATA/Isha Kansal/pivot-admin/src/common/stringFunction.js":"42","/Volumes/DATA/Isha Kansal/pivot-admin/src/common/toolTip.js":"43","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/experts/ExpertsData.js":"44","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/experts/Expert.js":"45","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/experts/ExpertsFieldsData.js":"46","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/resources/ResourcesFieldsData.js":"47"},{"size":500,"mtime":1612329326000,"results":"48","hashOfConfig":"49"},{"size":195,"mtime":1612330254000,"results":"50","hashOfConfig":"49"},{"size":362,"mtime":1612329326000,"results":"51","hashOfConfig":"49"},{"size":933,"mtime":1612777214000,"results":"52","hashOfConfig":"53"},{"size":2258,"mtime":1613647765000,"results":"54","hashOfConfig":"53"},{"size":774,"mtime":1612498790000,"results":"55","hashOfConfig":"53"},{"size":1895,"mtime":1612498790000,"results":"56","hashOfConfig":"53"},{"size":4686,"mtime":1612498790000,"results":"57","hashOfConfig":"53"},{"size":179,"mtime":1612762089000,"results":"58","hashOfConfig":"53"},{"size":186,"mtime":1612844550000,"results":"59","hashOfConfig":"53"},{"size":380,"mtime":1612498790000,"results":"60","hashOfConfig":"53"},{"size":6189,"mtime":1613390558000,"results":"61","hashOfConfig":"53"},{"size":284,"mtime":1612498790000,"results":"62","hashOfConfig":"53"},{"size":1293,"mtime":1612777470000,"results":"63","hashOfConfig":"53"},{"size":464,"mtime":1612498790000,"results":"64","hashOfConfig":"53"},{"size":765,"mtime":1613028365000,"results":"65","hashOfConfig":"53"},{"size":1164,"mtime":1612770427000,"results":"66","hashOfConfig":"53"},{"size":671,"mtime":1612776278000,"results":"67","hashOfConfig":"53"},{"size":1855,"mtime":1613647765000,"results":"68","hashOfConfig":"53"},{"size":8789,"mtime":1613644085000,"results":"69","hashOfConfig":"53"},{"size":8509,"mtime":1613633545000,"results":"70","hashOfConfig":"53"},{"size":709,"mtime":1612776116000,"results":"71","hashOfConfig":"53"},{"size":5841,"mtime":1613455166000,"results":"72","hashOfConfig":"53"},{"size":5849,"mtime":1613563693000,"results":"73","hashOfConfig":"53"},{"size":3214,"mtime":1612503074000,"results":"74","hashOfConfig":"53"},{"size":23176,"mtime":1613559397000,"results":"75","hashOfConfig":"53"},{"size":28811,"mtime":1613711771000,"results":"76","hashOfConfig":"53"},{"size":6812,"mtime":1613640410000,"results":"77","hashOfConfig":"53"},{"size":2007,"mtime":1613641378000,"results":"78","hashOfConfig":"53"},{"size":1354,"mtime":1613710459000,"results":"79","hashOfConfig":"53"},{"size":173,"mtime":1613708098000,"results":"80","hashOfConfig":"53"},{"size":4560,"mtime":1613642390000,"results":"81","hashOfConfig":"53"},{"size":1948,"mtime":1613641405000,"results":"82","hashOfConfig":"53"},{"size":340,"mtime":1613103961000,"results":"83","hashOfConfig":"53"},{"size":7217,"mtime":1612768792000,"results":"84","hashOfConfig":"53"},{"size":9997,"mtime":1612769714000,"results":"85","hashOfConfig":"53"},{"size":3924,"mtime":1612782108000,"results":"86","hashOfConfig":"53"},{"size":1813,"mtime":1613633716000,"results":"87","hashOfConfig":"53"},{"size":2273,"mtime":1612955858000,"results":"88","hashOfConfig":"53"},{"size":24915,"mtime":1613647535000,"results":"89","hashOfConfig":"53"},{"size":6550,"mtime":1613630586000,"results":"90","hashOfConfig":"53"},{"size":124,"mtime":1613034251000,"results":"91","hashOfConfig":"53"},{"size":424,"mtime":1613107911000,"results":"92","hashOfConfig":"53"},{"size":1378,"mtime":1613451990000,"results":"93","hashOfConfig":"53"},{"size":881,"mtime":1613454591000,"results":"94","hashOfConfig":"53"},{"size":973,"mtime":1613467089000,"results":"95","hashOfConfig":"53"},{"size":1485,"mtime":1613651299000,"results":"96","hashOfConfig":"53"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"161ocxv",{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},"z7vibx",{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"105"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"105"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"105"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"105"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"105"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"105"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"105"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"105"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"105"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"105"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"105"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"105"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"105"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"105"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"105"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"105"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"105"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},"/Volumes/DATA/Isha Kansal/reactjs/pivot-admin/src/index.js",[],"/Volumes/DATA/Isha Kansal/reactjs/pivot-admin/src/App.js",[],"/Volumes/DATA/Isha Kansal/reactjs/pivot-admin/src/reportWebVitals.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/index.js",[],["210","211"],"/Volumes/DATA/Isha Kansal/pivot-admin/src/App.js",["212"],"import React, { Component } from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport \"./scss/style.scss\";\nimport \"react-notifications/lib/notifications.css\";\nimport { NotificationContainer } from \"react-notifications\";\nconst loading = (\n  <div className=\"pt-3 text-center\">\n    <div className=\"sk-spinner sk-spinner-pulse\"></div>\n  </div>\n);\n\n// Containers\nconst TheLayout = React.lazy(() => import(\"./containers/TheLayout\"));\n\n// Pages\nconst Login = React.lazy(() => import(\"./views/login/Login\"));\nconst AddExpert = React.lazy(() => import(\"./views/experts/AddExpert\"));\nconst AddResource = React.lazy(() => import(\"./views/resources/AddResource\"));\nconst EditResource = React.lazy(() => import(\"./views/resources/EditResource\"));\n// const EditExpert = React.lazy(() => import(\"./views/resources/EditExpert\"));\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <HashRouter>\n          <React.Suspense fallback={loading}>\n            <Switch>\n              <Route\n                exact\n                path=\"/login\"\n                name=\"Login Page\"\n                render={(props) => <Login {...props} />}\n              />\n\n              <Route\n                path=\"/\"\n                name=\"Home\"\n                render={(props) => <TheLayout {...props} />}\n              />\n              <Route\n                exact\n                path=\"/addExpert\"\n                name=\"Add Expert\"\n                render={(props) => <AddExpert {...props} />}\n              />\n              <Route\n                exact\n                path=\"/addResource\"\n                name=\"Add Resource\"\n                render={(props) => <AddResource {...props} />}\n              />\n              <Route\n                exact\n                path=\"/editResource/:id\"\n                name=\"Edit Resource\"\n                render={(props) => <AddResource {...props} />}\n              />\n              <Route\n                exact\n                path=\"/editExpert\"\n                name=\"Edit Expert\"\n                render={(props) => <AddExpert {...props} />}\n              />\n            </Switch>\n          </React.Suspense>\n        </HashRouter>\n        <NotificationContainer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/Volumes/DATA/Isha Kansal/pivot-admin/src/store/index.js",["213"],"import { applyMiddleware, createStore, compose } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport { rootReducer } from \"./reducers/index\";\nimport rootSaga from \"./sagas/index\";\nimport logger from \"redux-logger\";\n\nconst persistConfig = {\n  debug: false,\n  key: \"root\",\n  keyPrefix: \"v.1\",\n  storage,\n};\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = createStore(\n  persistedReducer,\n  compose(applyMiddleware(sagaMiddleware, logger))\n);\nexport const persistor = persistStore(store);\n\nsagaMiddleware.run(rootSaga);\nexport default { store, persistor };\n","/Volumes/DATA/Isha Kansal/pivot-admin/src/polyfill.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/serviceWorker.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/store/sagas/index.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/store/reducers/index.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/TheLayout.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/views/login/Login.js",["214"],"import React, { Component } from \"react\";\n\nimport { NotificationManager } from \"react-notifications\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CRow,\n} from \"@coreui/react\";\nimport Loader from \"../../loader\";\nimport { FormText } from \"reactstrap\";\nimport CIcon from \"@coreui/icons-react\";\nimport { loginByAdmin } from \"../store/action\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { withRouter } from \"react-router-dom\";\nclass Login extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      name: \"\",\n      password: \"\",\n      errorText: \"\",\n      errorType: \"\",\n\n      loading: false,\n    };\n  }\n  handleChange = (e, type) => {\n    e.preventDefault();\n    this.setState({\n      [type]: e.target.value,\n      errorText: \"\",\n      errorType: \"\",\n    });\n  };\n  onHandleSubmit = (e) => {\n    e && e.preventDefault();\n\n    const { name, password } = this.state;\n    if (name === \"\") {\n      this.setState({ errorText: \"Name can not be empty\", errorType: \"name\" });\n    } else if (password === \"\") {\n      this.setState({\n        errorText: \"Password can not be empty\",\n        errorType: \"password\",\n      });\n    } else this.authenticateAdmin();\n  };\n  authenticateAdmin = () => {\n    const { name, password } = this.state;\n    this.setState({\n      loading: true,\n    });\n    let formData = {\n      email: name,\n      password: password,\n    };\n\n    this.props.loginByAdmin(\"user/login\", formData, (value) => {\n      this.setState({\n        loading: false,\n      });\n\n      if (value.status === 200) {\n        localStorage.setItem(\"auth_token\", value.data.user.auth_token);\n        NotificationManager.success(\"Login Successfully\", \"\", 1000);\n\n        localStorage.setItem(\"isLoggedIn\", true);\n\n        this.props.history.push(\"/users\");\n      } else {\n        NotificationManager.error(\"Please enter valid credentials\", \"\", 1000);\n        this.setState({\n          name: \"\",\n          password: \"\",\n        });\n      }\n    });\n  };\n  onKeyDown = (e) => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n\n      this.onHandleSubmit();\n    }\n  };\n  render() {\n    const { errorText, errorType, loading, name, password } = this.state;\n\n    return (\n      <div className=\"c-app c-default-layout flex-row align-items-center\">\n        <CContainer>\n          <CRow className=\"justify-content-center\">\n            <CCol md=\"8\">\n              <CCardGroup className=\"position-relative\">\n                {loading && <Loader />}\n\n                <CCard className=\"p-4\">\n                  <CCardBody>\n                    <CForm onKeyDown={(e) => this.onKeyDown(e)}>\n                      <h1>Login</h1>\n                      <p className=\"text-muted\">Sign In to your account</p>\n                      <div className=\"mb-3\">\n                        <CInputGroup>\n                          <CInputGroupPrepend>\n                            <CInputGroupText>\n                              <CIcon name=\"cil-user\" />\n                            </CInputGroupText>\n                          </CInputGroupPrepend>\n                          <CInput\n                            type=\"text\"\n                            placeholder=\"Username\"\n                            autoComplete=\"username\"\n                            onChange={(e) => this.handleChange(e, \"name\")}\n                            value={name}\n                          />\n                        </CInputGroup>\n                        <p className=\"mb-0\">\n                          {errorType === \"name\" && (\n                            <FormText color=\"danger\" className=\"error\">\n                              {errorText}\n                            </FormText>\n                          )}\n                        </p>\n                      </div>\n                      <div className=\"mb-4\">\n                        <CInputGroup>\n                          <CInputGroupPrepend>\n                            <CInputGroupText>\n                              <CIcon name=\"cil-lock-locked\" />\n                            </CInputGroupText>\n                          </CInputGroupPrepend>\n                          <CInput\n                            type=\"password\"\n                            placeholder=\"Password\"\n                            autoComplete=\"current-password\"\n                            onChange={(e) => this.handleChange(e, \"password\")}\n                            value={password}\n                          />\n                        </CInputGroup>\n                        <p className=\"mb-0\">\n                          {\" \"}\n                          {errorType === \"password\" && (\n                            <FormText color=\"danger\" className=\"error\">\n                              {errorText}\n                            </FormText>\n                          )}\n                        </p>\n                      </div>\n\n                      <CRow>\n                        <CCol xs=\"6\">\n                          <CButton\n                            color=\"primary\"\n                            className=\"px-4\"\n                            onClick={this.onHandleSubmit}\n                            disabled={loading}\n                            className=\"login-btn\"\n                          >\n                            Login\n                          </CButton>\n                        </CCol>\n                        {/* <CCol xs=\"6\" className=\"text-right\">\n                          <CButton color=\"link\" className=\"px-0\">\n                            Forgot password?\n                          </CButton>\n                        </CCol> */}\n                      </CRow>\n                    </CForm>\n                  </CCardBody>\n                </CCard>\n              </CCardGroup>\n            </CCol>\n          </CRow>\n        </CContainer>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    {\n      loginByAdmin,\n    },\n    dispatch\n  );\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Login));\n","/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/index.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/TheSidebar.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/TheHeaderDropdown.js",["215"],"import React from \"react\";\nimport { Button } from \"reactstrap\";\nimport { Redirect } from \"react-router-dom\";\n\nconst TheHeaderDropdown = (props) => {\n  const handleLogout = (e) => {\n    e.preventDefault();\n    props.history.push(\"/login\");\n  };\n  return (\n    <div>\n      <Button\n        color=\"bordered\"\n        onClick={handleLogout}\n        className=\"logout-btn ml-2\"\n      >\n        Logout\n      </Button>\n    </div>\n  );\n};\n\nexport default TheHeaderDropdown;\n","/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/TheHeader.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/TheContent.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/_nav.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/routes.js",["216"],"import React from \"react\";\n\nconst Users = React.lazy(() => import(\"./views/users/Users\"));\nconst User = React.lazy(() => import(\"./views/users/User\"));\nconst Resource = React.lazy(() => import(\"./views/resources/Resource\"));\nconst Planners = React.lazy(() => import(\"./views/planners/Planners\"));\nconst Experts = React.lazy(() => import(\"./views/experts/Experts\"));\nconst Expert = React.lazy(() => import(\"./views/experts/Expert\"));\nconst AddExpert = React.lazy(() => import(\"./views/experts/AddExpert\"));\nconst Resources = React.lazy(() => import(\"./views/resources/Resources\"));\nconst AddResource = React.lazy(() => import(\"./views/resources/AddResource\"));\nconst EditResource = React.lazy(() => import(\"./views/resources/EditResource\"));\n// const EditExpert = React.lazy(() => import(\"./views/resources/EditExpert\"));\nconst routes = [\n  { path: \"/users\", exact: true, name: \"Users\", component: Users },\n  { path: \"/users/:id\", exact: true, name: \"User Details\", component: User },\n  { path: \"/planners\", exact: true, name: \"Planners\", component: Planners },\n  { path: \"/experts\", exact: true, name: \"Experts\", component: Experts },\n  {\n    path: \"/experts/:id\",\n    exact: true,\n    name: \"Expert Details\",\n    component: Expert,\n  },\n  { path: \"/addExpert\", exact: true, name: \"Add Expert\", component: AddExpert },\n  { path: \"/resources\", exact: true, name: \"Resources\", component: Resources },\n  {\n    path: \"/resources/:id\",\n    exact: true,\n    name: \"Resource Details\",\n    component: Resource,\n  },\n  {\n    path: \"/addResource\",\n    exact: true,\n    name: \"Add Resource\",\n    component: AddResource,\n  },\n  {\n    path: \"/editResource/:id\",\n    exact: true,\n    name: \"Edit Resource\",\n    component: AddResource,\n  },\n  {\n    path: \"/editExpert\",\n    exact: true,\n    name: \"Edit Expert\",\n    component: AddExpert,\n  },\n];\n\nexport default routes;\n","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/resources/Resources.js",["217","218","219","220","221","222","223","224"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport Pagination from \"react-js-pagination\";\nimport Tooltip from \"../../common/toolTip\";\nimport CommonModal from \"../../common/commonModal\";\nimport { Table } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { NotificationManager } from \"react-notifications\";\nimport { bindActionCreators } from \"redux\";\n\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n  CButton,\n  CDataTable,\n  CPagination,\n} from \"@coreui/react\";\nimport resourcesData from \"./ResourcesData\";\nimport EDIT from \"../../assets/icons/edit.svg\";\nimport DELETE from \"../../assets/icons/delete.svg\";\nimport {\n  fetchResources,\n  deleteResource,\n  editResource,\n  setResourceData,\n} from \"../store/action\";\nconst Resources = (props) => {\n  const offsetLimit = 10;\n  const history = useHistory();\n  const queryPage = useLocation().search.match(/page=([0-9]+)/, \"\");\n  const currentPage = Number(queryPage && queryPage[1] ? queryPage[1] : 1);\n  const [page, setPage] = useState(currentPage);\n  const [search, setSearch] = useState(\"\");\n  const [modalOpen, setModalOpen] = useState(false);\n  const [resourcesDetails, setResourcesDetails] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [idResource, setIdResource] = useState(\"\");\n  const [count, setCount] = useState(0);\n  const pageChange = (newPage) => {\n    currentPage !== newPage && history.push(`/resources?page=${newPage}`);\n    let limit = 10;\n    props.fetchResources(\n      `resource/all?offset=${newPage}&limit=${limit}&search=${search}`,\n      (value) => {\n        setLoading(false);\n        setResourcesDetails(value.data.resources);\n        setCount(value.data.count);\n\n        setPage(newPage);\n      }\n    );\n  };\n  useEffect(() => {\n    currentPage !== page && setPage(currentPage);\n  }, [currentPage, page]);\n  const addResource = () => {\n    props.history.push(\"/addResource\");\n  };\n  const editResource = (e, item) => {\n    setIdResource(item._id);\n    e.preventDefault();\n    e.stopPropagation();\n    console.log(\"856789956890589\", item);\n    props.setResourceData(item);\n    // const {\n    //   title,\n    //   format,\n    //   price,\n    //   website,\n    //   category,\n    //   pros,\n    //   cons,\n    //   info,\n    //   unique_selling_proposition,\n    //   pace,\n    //   _id,\n    // } = item;\n    // let obj = {\n    //   id: _id,\n    //   title,\n    //   format,\n    //   price,\n    //   website,\n    //   category,\n    //   pros,\n    //   cons,\n    //   info,\n    //   unique_selling_proposition,\n    //   pace,\n    // };\n    // props.editResource(\"resource/update\", obj, (value) => {\n    //   console.log(\"48567476745valuevaluevaluevalue\", value);\n    // });\n    props.history.push({\n      state: item,\n      pathname: `/editResource/${item._id}`,\n    });\n  };\n  const onDelete = (e, id) => {\n    setIdResource(id);\n    e.preventDefault();\n    e.stopPropagation();\n    setModalOpen(!modalOpen);\n    console.log(\"89356893967893\", id);\n  };\n  const deleteResource = (id) => {\n    if (idResource === id) setModalOpen(false);\n    props.deleteResource(`resource/delete/${id}`, (value) => {\n      if (value.status === 200) {\n        NotificationManager.success(\"Resource deleted successfully\", \"\", 1000);\n        callApiToFetchAllResources();\n      }\n    });\n  };\n  const handleSearch = (e) => {\n    setSearch(e.target.value);\n    setPage(1);\n  };\n  useEffect(() => {\n    callApiToFetchAllResources();\n  }, [search]);\n  const callApiToFetchAllResources = () => {\n    setLoading(true);\n\n    let limit = 10;\n    props.fetchResources(\n      `resource/all?offset=${page}&limit=${limit}&search=${search}`,\n      (value) => {\n        if (value.status === 200) {\n          // NotificationManager.success(\n          //   \"Resources fetched successfully\",\n          //   \"\",\n          //   1000\n          // );\n          console.log(\"498679497898497\", value);\n          setLoading(false);\n          setResourcesDetails(value.data.resources);\n          setCount(value.data.count);\n        }\n      }\n    );\n  };\n\n  console.log(\"4987849879849789\", resourcesDetails);\n  return (\n    <CRow>\n      <CCol xl={12}>\n        <form className=\"position-relative\">\n          <div className=\"text-center search-input\">\n            <input\n              type=\"search\"\n              className=\"form-control\"\n              placeholder=\"Search\"\n              required\n              onChange={handleSearch}\n            />\n          </div>\n          <div className=\"text-right resource-btn\">\n            <CButton block color=\"info\" onClick={addResource} id=\"addResource\">\n              Add Resource\n            </CButton>\n          </div>\n        </form>\n      </CCol>\n      <CCol xl={12}></CCol>\n\n      <CCol xl={12}>\n        <CCard>\n          <CCardBody>\n            <Table>\n              <thead>\n                <tr>\n                  <th className=\"text-nowrap \">Name</th>\n\n                  <th>Format</th>\n                  <th>Price</th>\n                  <th>Category</th>\n                  <th>Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {resourcesDetails && resourcesDetails.length === 0 && (\n                  <h3 className=\"text-center no-user-found\">\n                    No Resources Found!\n                  </h3>\n                )}\n                {resourcesDetails &&\n                  resourcesDetails.length > 0 &&\n                  resourcesDetails.map((item, index) => {\n                    console.log(\"758738567838678\", item);\n                    let category =\n                      item &&\n                      item.category &&\n                      item.category.length > 0 &&\n                      item.category.join(\", \");\n                    return (\n                      <tr\n                        style={{ cursor: \"pointer\" }}\n                        onClick={() =>\n                          history.push({\n                            pathname: `/resources/${item._id}`,\n                          })\n                        }\n                      >\n                        <td>{item.title}</td>\n                        <td>{item.format}</td>\n                        <td>{item.price}</td>\n                        <td>{category}</td>\n                        <td>\n                          <button\n                            id={`edit-${index}`}\n                            className=\"icon\"\n                            onClick={(e) => editResource(e, item)}\n                          >\n                            <img src={EDIT} className=\"ml-3\" />\n                          </button>\n                          <Tooltip placement=\"left\" target={`edit-${index}`}>\n                            Edit\n                          </Tooltip>\n                          <button\n                            className=\"icon\"\n                            onClick={(e) => onDelete(e, item._id)}\n                            id={`delete-${index}`}\n                          >\n                            <img src={DELETE} className=\"ml-3\" />\n                          </button>\n                          <Tooltip placement=\"right\" target={`delete-${index}`}>\n                            Delete\n                          </Tooltip>\n                        </td>\n                      </tr>\n                    );\n                  })}\n              </tbody>\n            </Table>\n\n            <div className=\"text-center pagination-input\">\n              {count > 10 && (\n                <Pagination\n                  className=\"mt-3 mx-auto w-fit-content\"\n                  itemClass=\"page-item\"\n                  linkClass=\"page-link\"\n                  activeClass=\"active\"\n                  activePage={page}\n                  itemsCountPerPage={offsetLimit}\n                  totalItemsCount={count}\n                  pageRangeDisplayed={5}\n                  onChange={pageChange}\n                />\n              )}\n            </div>\n\n            <div>\n              {modalOpen && (\n                <CommonModal\n                  isOpen={modalOpen}\n                  toggle={(e) => onDelete(e)}\n                  block_delete={(e) => deleteResource(e, idResource)}\n                  id={idResource}\n                  type=\"deleteResource\"\n                />\n              )}\n            </div>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {};\n};\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    {\n      fetchResources,\n      deleteResource,\n      editResource,\n      setResourceData,\n    },\n    dispatch\n  );\n};\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(Resources)\n);\n","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/users/Users.js",["225"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport Pagination from \"react-js-pagination\";\nimport CommonModal from \"../../common/commonModal\";\nimport { NotificationManager } from \"react-notifications\";\nimport { Table } from \"reactstrap\";\nimport { CBadge, CButton, CCard, CCardBody, CCol, CRow } from \"@coreui/react\";\nimport Loader from \"../../loader\";\nimport { connect } from \"react-redux\";\n\nimport { bindActionCreators } from \"redux\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { fetchUsers, userStatus } from \"../store/action\";\n\nconst Users = (props) => {\n  const offsetLimit = 10;\n  const history = useHistory();\n  const queryPage = useLocation().search.match(/page=([0-9]+)/, \"\");\n  const currentPage = Number(queryPage && queryPage[1] ? queryPage[1] : 1);\n  const [page, setPage] = useState(currentPage);\n  const [search, setSearch] = useState(\"\");\n  const [modalOpen, setModalOpen] = useState(false);\n  const [type, setType] = useState(\"\");\n\n  const [idUser, setIdUser] = useState(\"\");\n  const [usersDetails, setUsersDetails] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [count, setCount] = useState(0);\n  const pageChange = (newPage) => {\n    currentPage !== newPage && history.push(`/users?page=${newPage}`);\n    setLoading(true);\n\n    let limit = 10;\n    props.fetchUsers(\n      `user/all?offset=${newPage}&limit=${limit}&search=${search}`,\n      (value) => {\n        setLoading(false);\n        setUsersDetails(value.data.users);\n        setCount(value.data.count);\n\n        setPage(newPage);\n      }\n    );\n  };\n  const handleSearch = (e) => {\n    setSearch(e.target.value);\n    setPage(1);\n  };\n  // useEffect(() => {\n  //   debugger;\n  //   currentPage !== page && setPage(currentPage);\n  // }, [currentPage, page]);\n\n  useEffect(() => {\n    callApiToFetchAllUsers();\n  }, [search]);\n\n  const callApiToFetchAllUsers = () => {\n    setLoading(true);\n\n    let limit = 10;\n    props.fetchUsers(\n      `user/all?offset=${page}&limit=${limit}&search=${search}`,\n      (value) => {\n        setLoading(false);\n        setUsersDetails(value.data.users);\n        setCount(value.data.count);\n      }\n    );\n  };\n\n  const getBadge = (status) => {\n    switch (status) {\n      case \"Verified\":\n        return \"success\";\n\n      case \"Not Verified\":\n        return \"danger\";\n      default:\n        return \"primary\";\n    }\n  };\n\n  const onBlock = (e, type, item) => {\n    setIdUser(item._id);\n    setType(type);\n    e.preventDefault();\n    e.stopPropagation();\n    setModalOpen(!modalOpen);\n  };\n  const blockUser = (id) => {\n    if (idUser === id) {\n      setModalOpen(false);\n\n      // let arr = unBlock.slice();\n      // arr.push(id);\n      // setUnblock(arr);\n      callApi(type, id);\n    }\n  };\n\n  const callApi = (type, id) => {\n    let obj = {\n      type: type,\n      id: id,\n    };\n\n    props.userStatus(\"user/change-status\", obj, (value) => {\n      if (value.status === 200) {\n        NotificationManager.success(value.message, \"\", 1000);\n        callApiToFetchAllUsers();\n      }\n    });\n  };\n  console.log(\"86784857984957\", usersDetails);\n  return (\n    <CRow>\n      <CCol xl={12}>\n        <form>\n          <div className=\"text-center search-input\">\n            <input\n              type=\"search\"\n              className=\"form-control\"\n              placeholder=\"Search\"\n              required\n              onChange={handleSearch}\n            />\n          </div>\n        </form>\n      </CCol>\n\n      <CCol xl={12}>\n        <CCard className=\"position-relative\">\n          {loading && <Loader />}\n\n          <CCardBody>\n            <Table\n              className={`table ${\n                usersDetails.length === 0 ? \"tableHeight\" : \"\"\n              }`}\n            >\n              <thead>\n                <tr>\n                  <th className=\"text-nowrap \">Name</th>\n\n                  <th>Email</th>\n                  <th>Status</th>\n\n                  <th>Country</th>\n                  <th>Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {usersDetails && usersDetails.length === 0 && !loading && (\n                  <h3 className=\"text-center no-user-found\">No Users Found!</h3>\n                )}\n                {usersDetails &&\n                  usersDetails.length > 0 &&\n                  usersDetails.map((item, index) => {\n                    return (\n                      <tr\n                        style={{ cursor: \"pointer\" }}\n                        onClick={() =>\n                          history.push({\n                            pathname: `/users/${item._id}`,\n                            state: usersDetails,\n                          })\n                        }\n                      >\n                        <td>\n                          {\" \"}\n                          {item.first_name && item.last_name\n                            ? item.first_name + \" \" + item.last_name\n                            : \"-\"}\n                        </td>\n                        <td>{item.email ? item.email : \"-\"}</td>\n                        <td>\n                          <CBadge\n                            color={getBadge(\n                              !item.is_verified ? \"Not Verified\" : \"Verified\"\n                            )}\n                          >\n                            {!item.is_verified ? \"Not Verified\" : \"Verified\"}\n                          </CBadge>\n                        </td>\n                        <td>{item.country ? item.country : \"-\"}</td>\n                        <td>\n                          {item.status === \"blocked\" ? (\n                            <CButton\n                              onClick={(e) => onBlock(e, \"unblock\", item)}\n                              className=\"Unblock-btn block-btn\"\n                            >\n                              UnBlock\n                            </CButton>\n                          ) : item.status === \"activated\" ? (\n                            <div>\n                              <CButton\n                                onClick={(e) => onBlock(e, \"block\", item)}\n                                className=\"block-btn block-btn\"\n                              >\n                                Block\n                              </CButton>{\" \"}\n                            </div>\n                          ) : item.status === \"deactivated\" ? (\n                            <div>\n                              <CButton\n                                onClick={(e) => onBlock(e, \"block\", item)}\n                                className=\"block-btn block-btn\"\n                              >\n                                Block\n                              </CButton>\n                            </div>\n                          ) : (\n                            <CButton\n                              onClick={(e) => onBlock(e, \"block\", item)}\n                              className=\"block-btn block-btn\"\n                            >\n                              Block\n                            </CButton>\n                          )}\n                        </td>\n                      </tr>\n                    );\n                  })}\n              </tbody>\n            </Table>\n\n            <div className=\"text-center pagination-input\">\n              {count > 10 && (\n                <Pagination\n                  className=\"mt-3 mx-auto w-fit-content\"\n                  itemClass=\"page-item\"\n                  linkClass=\"page-link\"\n                  activeClass=\"active\"\n                  activePage={page}\n                  itemsCountPerPage={offsetLimit}\n                  totalItemsCount={count}\n                  pageRangeDisplayed={5}\n                  onChange={pageChange}\n                />\n              )}\n            </div>\n            <div>\n              {modalOpen && (\n                <CommonModal\n                  isOpen={modalOpen}\n                  toggle={(e) => onBlock(e, type, idUser)}\n                  block_delete={(e) => blockUser(e, idUser)}\n                  id={idUser}\n                  type={type}\n                />\n              )}\n            </div>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {};\n};\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    {\n      fetchUsers,\n      userStatus,\n    },\n    dispatch\n  );\n};\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Users));\n","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/planners/Planners.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/views/experts/Experts.js",["226","227","228","229","230"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport expertsData from \"./ExpertsData\";\nimport Pagination from \"react-js-pagination\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n  CButton,\n  CDataTable,\n} from \"@coreui/react\";\nimport CommonModal from \"../../common/commonModal\";\nimport Tooltip from \"../../common/toolTip\";\nimport EDIT from \"../../assets/icons/edit.svg\";\nimport DELETE from \"../../assets/icons/delete.svg\";\nimport { Table } from \"reactstrap\";\nconst Experts = (props) => {\n  const history = useHistory();\n  const queryPage = useLocation().search.match(/page=([0-9]+)/, \"\");\n  const currentPage = Number(queryPage && queryPage[1] ? queryPage[1] : 1);\n  const [page, setPage] = useState(currentPage);\n  const [search, setSearch] = useState(\"\");\n  const [modalOpen, setModalOpen] = useState(false);\n  const pageChange = (newPage) => {\n    currentPage !== newPage && history.push(`/experts?page=${newPage}`);\n  };\n  useEffect(() => {\n    currentPage !== page && setPage(currentPage);\n  }, [currentPage, page]);\n  const addExpert = () => {\n    props.history.push(\"/addExpert\");\n  };\n  const handleSearch = (e) => {\n    setSearch(e.target.value);\n  };\n\n  const editExpert = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    props.history.push(\"/editExpert\");\n  };\n  const deleteExpert = (e, item) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setModalOpen(!modalOpen);\n    // alert(\"deleted\");\n  };\n\n  return (\n    <CRow>\n      <CCol xl={12}>\n        <form className=\"position-relative\">\n          <div className=\"text-center search-input\">\n            <input\n              type=\"search\"\n              className=\"form-control\"\n              placeholder=\"Search\"\n              required\n              onChange={handleSearch}\n            />\n          </div>\n          <div className=\"text-right resource-btn\">\n            <CButton block color=\"info\" onClick={addExpert}>\n              Add Expert\n            </CButton>\n          </div>\n        </form>\n        <CCard>\n          <CCardBody>\n            <Table>\n              <thead>\n                <tr>\n                  <th className=\"text-nowrap \">Name</th>\n\n                  <th>Designation</th>\n                  <th>Expertise</th>\n\n                  <th>Fields</th>\n                </tr>\n              </thead>\n              <tbody>\n                {expertsData && expertsData.length === 0 && (\n                  <h3 className=\"text-center no-user-found\">\n                    No Experts Found!\n                  </h3>\n                )}\n                {expertsData &&\n                  expertsData.length > 0 &&\n                  expertsData.map((item, index) => {\n                    return (\n                      <tr\n                        style={{ cursor: \"pointer\" }}\n                        onClick={() =>\n                          history.push({\n                            pathname: `/experts/${item._id}`,\n                          })\n                        }\n                      >\n                        <td>{item.designation}</td>\n                        <td>{item.expertise}</td>\n                        <td>{item.fields}</td>\n                        <td>\n                          <button\n                            id={`edit-${index}`}\n                            className=\"icon\"\n                            onClick={editExpert}\n                          >\n                            <img src={EDIT} className=\"ml-3\" />\n                          </button>\n                          <Tooltip placement=\"left\" target={`edit-${index}`}>\n                            Edit\n                          </Tooltip>\n                          <button\n                            className=\"icon\"\n                            onClick={(e) => deleteExpert(e, item.id)}\n                            id={`delete-${index}`}\n                          >\n                            <img src={DELETE} className=\"ml-3\" />\n                          </button>\n                          <Tooltip placement=\"right\" target={`delete-${index}`}>\n                            Delete\n                          </Tooltip>\n                        </td>\n                      </tr>\n                    );\n                  })}\n              </tbody>\n            </Table>\n            {/* <CDataTable\n              items={expertsData}\n              fields={[\n                { key: \"name\", _classes: \"font-weight-bold\" },\n                \"designation\",\n                \"expertise\",\n                \"fields\",\n              ]}\n              itemsPerPage={10}\n              activePage={page}\n              clickableRows\n              onRowClick={(item) => history.push(`/experts/${item.id}`)}\n            /> */}\n            <div className=\"text-center pagination-input\">\n              {expertsData.length > 10 && (\n                <Pagination\n                  className=\"mt-3 mx-auto w-fit-content\"\n                  itemClass=\"page-item\"\n                  linkClass=\"page-link\"\n                  activeClass=\"active\"\n                  activePage={page}\n                  itemsCountPerPage={10}\n                  totalItemsCount={expertsData.length}\n                  pageRangeDisplayed={5}\n                  onChange={pageChange}\n                />\n              )}\n            </div>\n            <div>\n              {modalOpen && (\n                <CommonModal\n                  isOpen={modalOpen}\n                  toggle={(e) => deleteExpert(e)}\n                  // blockUser={(e) => blockUser(e, idUser)}\n                  // id={idUser}\n                  // type={type}\n                />\n              )}\n            </div>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  );\n};\n\nexport default withRouter(Experts);\n","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/users/User.js",["231","232","233","234"],"import React, { useState, useEffect, Fragment } from \"react\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n  CBadge,\n} from \"@coreui/react\";\nimport Loader from \"../../loader\";\nimport CIcon from \"@coreui/icons-react\";\nimport { connect } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { titleCase } from \"../../common/stringFunction\";\n\nimport { fetchOneUser } from \"../store/action\";\nconst User = (props) => {\n  const [user, setUser] = useState({});\n  const [loading, setLoading] = useState(false);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    setLoading(true);\n\n    const user_id = props && props.match.params.id;\n    dispatch(\n      fetchOneUser(`user/${user_id}`, (value) => {\n        setUser(value.data.user);\n        setLoading(false);\n      })\n    );\n  }, []);\n\n  const getBadge = (status) => {\n    switch (status) {\n      case \"Verified\":\n        return \"success\";\n\n      case \"Not Verified\":\n        return \"danger\";\n      case \"Activated\":\n        return \"success\";\n\n      case \"Blocked\":\n        return \"danger\";\n      default:\n        return \"primary\";\n    }\n  };\n\n  let reasonForCareerChange =\n    user &&\n    user.reason_for_career_change &&\n    user.reason_for_career_change.join(\", \");\n\n  return (\n    <CRow>\n      <CCol lg={12}>\n        <CCard className=\"position-relative\">\n          {loading && <Loader />}\n          <CCardHeader>Account Details</CCardHeader>\n          <CCardBody>\n            {user && (\n              <table className=\"table\">\n                <tbody>\n                  <tr>\n                    <td>Status</td>\n\n                    <td>\n                      <CBadge\n                        color={getBadge(\n                          user.status === \"blocked\" ? \"Blocked\" : \"Activated\"\n                        )}\n                      >\n                        {user.status === \"blocked\" ? \"Blocked\" : \"Activated\"}\n                      </CBadge>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>UID</td>\n                    <td>\n                      <strong>{user._id}</strong>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>Email Verification</td>\n\n                    <td>\n                      <CBadge\n                        color={getBadge(\n                          !user.is_verified ? \"Not Verified\" : \"Verified\"\n                        )}\n                      >\n                        {!user.is_verified ? \"Not Verified\" : \"Verified\"}\n                      </CBadge>\n                    </td>\n                  </tr>\n                  {user.first_name && (\n                    <tr>\n                      <td>First name</td>\n                      <td>\n                        <strong>{user.first_name}</strong>\n                      </td>\n                    </tr>\n                  )}\n                  {user.last_name && (\n                    <tr>\n                      <td>Last name</td>\n                      <td>\n                        <strong>{user.last_name}</strong>\n                      </td>\n                    </tr>\n                  )}\n                  {user.contact_no && (\n                    <tr>\n                      <td>Contact</td>\n                      <td>\n                        <strong>\n                          {user.contact_no.value || user.contact_no}\n                        </strong>\n                      </td>\n                    </tr>\n                  )}\n                  {user.email && (\n                    <tr>\n                      <td>Email</td>\n                      <td>\n                        <strong>{user.email}</strong>\n                      </td>\n                    </tr>\n                  )}\n                  {user.gender && (\n                    <tr>\n                      <td>Gender</td>\n                      <td>\n                        <strong>{user.gender}</strong>\n                      </td>\n                    </tr>\n                  )}\n                  {user.role && (\n                    <tr>\n                      <td>Role</td>\n                      <td>\n                        <strong>{user.role}</strong>\n                      </td>\n                    </tr>\n                  )}\n                  {user.country && (\n                    <tr>\n                      <td>Country</td>\n                      <td>\n                        <strong>{user.country}</strong>\n                      </td>\n                    </tr>\n                  )}\n                  {user.industry && (\n                    <tr>\n                      <td>Industry</td>\n                      <td>\n                        <strong>{user.industry}</strong>\n                      </td>\n                    </tr>\n                  )}\n                  {user.full_time_work_experience && (\n                    <tr>\n                      <td>Work Experience</td>\n                      <td>\n                        <strong>{user.full_time_work_experience}</strong>\n                      </td>\n                    </tr>\n                  )}\n\n                  {reasonForCareerChange && (\n                    <tr>\n                      <td>Career Change Reason</td>\n                      <td>\n                        <strong>{reasonForCareerChange}</strong>\n                      </td>\n                    </tr>\n                  )}\n                </tbody>\n              </table>\n            )}\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {};\n};\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    {\n      fetchOneUser,\n    },\n    dispatch\n  );\n};\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(User));\n","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/users/UsersData.js",[],["235","236"],"/Volumes/DATA/Isha Kansal/pivot-admin/src/views/experts/AddExpert.js",["237","238","239","240","241"],"import React, { Component } from \"react\";\n// import DateTimePicker from \"react-datetime-picker\";\n// import { PopupWidget } from \"react-calendly\";\nimport BackArrow from \"../../assets/icons/left-arrow.svg\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormGroup,\n  CTextarea,\n  CInput,\n  CLabel,\n  CRow,\n  CSelect,\n} from \"@coreui/react\";\n// import { InlineWidget } from \"react-calendly\";\nimport Select from \"react-select\";\nimport CameraIcon from \"../../assets/icons/photo-camera.svg\";\nimport { Input } from \"reactstrap\";\nimport CIcon from \"@coreui/icons-react\";\nimport Avatar from \"../../assets/icons/avatar.png\";\nimport {\n  optionsFields,\n  optionsGender,\n  optionsCountry,\n  optionsDesignation,\n  optionsExpertise,\n  optionsRole,\n  optionsIndustry,\n  optionsExperience,\n  optionsRate,\n  optionsService,\n} from \"./ExpertsFieldsData\";\n\nclass AddExpert extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      first_name: \"\",\n      last_name: \"\",\n      email: \"\",\n      contact: \"\",\n      gender: \"\",\n      country: \"\",\n      designation: \"\",\n      expertise: \"\",\n      experience: \"\",\n      role: \"\",\n      industry: \"\",\n      fields: \"\",\n      about: \"\",\n      errorType: \"\",\n      errorText: \"\",\n      service: \"\",\n      rate: \"\",\n      expertImage: null,\n      selectedDate: new Date(),\n    };\n  }\n  uploadImage = (event) => {\n    if (event.target.files && event.target.files[0]) {\n      var reader = new FileReader();\n      reader.onloadend = function () {\n        // props.setImage(reader.result);\n        this.setState({\n          expertImage: reader.result,\n        });\n      }.bind(this);\n      reader.readAsDataURL(event.target.files[0]);\n    }\n  };\n  errorShow = (type) => {\n    const { errorType, errorText } = this.state;\n    return errorType === type ? <p>{errorText}</p> : null;\n  };\n  clearError = () => {\n    this.setState({\n      errorType: \"\",\n      errorText: \"\",\n    });\n  };\n  inputHandler = (e) => {\n    this.clearError();\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  handleChange = (e, type, data) => {\n    if (type === \"fields\") {\n      this.setState({\n        fields: data,\n      });\n    }\n    if (type === \"gender\") {\n      this.setState({\n        gender: data,\n      });\n    }\n    if (type === \"country\") {\n      this.setState({\n        country: data,\n      });\n    }\n    if (type === \"designation\") {\n      this.setState({\n        designation: data,\n      });\n    }\n    if (type === \"expertise\") {\n      this.setState({\n        expertise: data,\n      });\n    }\n    if (type === \"role\") {\n      this.setState({\n        role: data,\n      });\n    }\n    if (type === \"industry\") {\n      this.setState({\n        industry: data,\n      });\n    }\n    if (type === \"experience\") {\n      this.setState({\n        experience: data,\n      });\n    }\n    if (type === \"service\") {\n      this.setState({\n        service: data,\n      });\n    }\n    if (type === \"rate\") {\n      this.setState({\n        rate: data,\n      });\n    }\n  };\n  validateEmail = (email) => {\n    var re = /^(([^<>()\\]\\\\.,;:\\s@“]+(\\.[^<>()\\]\\\\.,;:\\s@“]+)*)|(“.+“))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    return re.test(String(email).toLowerCase());\n  };\n  onSubmit = (e) => {\n    const {\n      first_name,\n      last_name,\n      email,\n      contact,\n      gender,\n      country,\n      designation,\n      experience,\n      role,\n      industry,\n      expertise,\n      fields,\n      about,\n      service,\n      rate,\n    } = this.state;\n\n    if (first_name === \"\") {\n      this.setState({\n        errorType: \"first_name\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Name should not be empty</b>\n          </span>\n        ),\n      });\n      return;\n    }\n    if (first_name !== \"\") {\n      let filter = /^[a-zA-Z0-9]+([-_\\s]{1}[a-zA-Z0-9]+)*$/;\n\n      if (!filter.test(first_name)) {\n        this.setState({\n          errorType: \"first_name\",\n          errorText: (\n            <span className=\"text-danger\">\n              <b>\n                {\" \"}\n                Name should be combination of alphanumeric text, underscore,\n                space and hyphen\n              </b>\n            </span>\n          ),\n        });\n        return;\n      }\n    }\n\n    if (last_name === \"\") {\n      this.setState({\n        errorType: \"last_name\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Name should not be empty</b>\n          </span>\n        ),\n      });\n      return;\n    }\n    if (last_name !== \"\") {\n      let filter = /^[a-zA-Z0-9]+([-_\\s]{1}[a-zA-Z0-9]+)*$/;\n\n      if (!filter.test(last_name)) {\n        this.setState({\n          errorType: \"last_name\",\n          errorText: (\n            <span className=\"text-danger\">\n              <b>\n                {\" \"}\n                Name should be combination of alphanumeric text, underscore,\n                space and hyphen\n              </b>\n            </span>\n          ),\n        });\n        return;\n      }\n    }\n\n    if (email === \"\") {\n      this.setState({\n        errorType: \"email\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Email Id is empty</b>\n          </span>\n        ),\n      });\n      return;\n    }\n    if (!this.validateEmail(email)) {\n      this.setState({\n        errorType: \"email\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Invalid email</b>\n          </span>\n        ),\n      });\n      return;\n    }\n\n    if (contact === \"\") {\n      this.setState({\n        errorType: \"contact\",\n        errorText: <span className=\"text-danger\">Mobile number is empty</span>,\n        loading: false,\n      });\n\n      return;\n    } else if (contact.length < 10 || contact.length > 10) {\n      this.setState({\n        errorType: \"contact\",\n        errorText: (\n          <span className=\"text-danger\">\n            {\" \"}\n            <b>Phone number should be of length 10</b>\n          </span>\n        ),\n        loading: false,\n      });\n\n      return;\n    } else if (contact !== \"\") {\n      let filter = /^\\d{10}$/;\n      if (!filter.test(contact)) {\n        this.setState({\n          errorType: \"contact\",\n          errorText: (\n            <span className=\"text-danger\">\n              {\" \"}\n              <b>Please enter valid phone number</b>\n            </span>\n          ),\n          loading: false,\n        });\n\n        return;\n      }\n    }\n\n    if (gender === \"\") {\n      this.setState({\n        errorType: \"gender\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Select your gender</b>\n          </span>\n        ),\n      });\n      return;\n    }\n    if (country === \"\") {\n      this.setState({\n        errorType: \"country\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Select your country</b>\n          </span>\n        ),\n      });\n      return;\n    }\n\n    if (designation === \"\") {\n      this.setState({\n        errorType: \"designation\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Designation should not be empty</b>\n          </span>\n        ),\n      });\n      return;\n    }\n    if (expertise === \"\") {\n      this.setState({\n        errorType: \"expertise\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Please enter your expert areas</b>\n          </span>\n        ),\n      });\n      return;\n    }\n    if (role === \"\") {\n      this.setState({\n        errorType: \"role\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Select your current role</b>\n          </span>\n        ),\n      });\n      return;\n    }\n    if (industry === \"\") {\n      this.setState({\n        errorType: \"industry\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Select your industry</b>\n          </span>\n        ),\n      });\n      return;\n    }\n\n    if (experience === \"\") {\n      this.setState({\n        errorType: \"experience\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Select your experience</b>\n          </span>\n        ),\n      });\n      return;\n    }\n\n    if (fields === \"\") {\n      this.setState({\n        errorType: \"fields\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Select your fields</b>\n          </span>\n        ),\n      });\n      return;\n    }\n    if (service === \"\") {\n      this.setState({\n        errorType: \"service\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Select your service</b>\n          </span>\n        ),\n      });\n      return;\n    }\n    if (rate === \"\") {\n      this.setState({\n        errorType: \"rate\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Select your rate</b>\n          </span>\n        ),\n      });\n      return;\n    }\n\n    if (about === \"\") {\n      this.setState({\n        errorType: \"about\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Please enter some information about you</b>\n          </span>\n        ),\n      });\n      return;\n    }\n  };\n  resetState = (e) => {\n    e.preventDefault();\n    this.setState({\n      first_name: \"\",\n      last_name: \"\",\n      email: \"\",\n      contact: \"\",\n      gender: \"\",\n      country: \"\",\n      designation: \"\",\n      expertise: \"\",\n      experience: \"\",\n      role: \"\",\n      industry: \"\",\n      fields: \"\",\n      about: \"\",\n      errorType: \"\",\n      errorText: \"\",\n      service: \"\",\n      rate: \"\",\n\n      selectedDate: new Date(),\n    });\n  };\n  handleBack = (e) => {\n    e.preventDefault();\n    this.props.history.push(\"/experts\");\n  };\n  onChange = (date) => {\n    this.setState({\n      selectedDate: date,\n    });\n  };\n  render() {\n    const {\n      first_name,\n      last_name,\n      experience,\n      designation,\n      country,\n      expertise,\n      about,\n      fields,\n      gender,\n      expertImage,\n      role,\n      industry,\n      email,\n      contact,\n      service,\n      rate,\n      selectedDate,\n    } = this.state;\n\n    return (\n      <CRow>\n        <CCol xs=\"12\" sm=\"12\">\n          <CCard className=\"expert-card\">\n            <CCardHeader>\n              <CButton onClick={this.handleBack} className=\"backBtn\">\n                <img src={BackArrow} className=\"mr-2\" /> Back\n              </CButton>\n              <div className=\"update-profile-image\">\n                <img\n                  id=\"output\"\n                  src={expertImage ? expertImage : Avatar}\n                  alt=\"profile\"\n                  className=\"profile negative-margin\"\n                />\n                <div>\n                  <Input\n                    type=\"file\"\n                    accept=\"image/*\"\n                    id=\"f-upload\"\n                    name=\"myImage\"\n                    onChange={this.uploadImage}\n                    className=\"d-none\"\n                  />\n                  <label htmlFor=\"f-upload\" class=\"custom-file-upload\">\n                    <div className=\"camera-btn\" onClick={this.uploadImage}>\n                      <img src={CameraIcon} alt=\"camera\" />\n                    </div>\n                  </label>\n                </div>\n              </div>\n            </CCardHeader>\n            <CCardBody>\n              <CForm\n                action=\"\"\n                method=\"post\"\n                encType=\"multipart/form-data\"\n                className=\"form-horizontal\"\n              >\n                <CFormGroup row className=\"my-0\">\n                  <CCol xs=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"first_name\">First Name</CLabel>\n                      <CInput\n                        id=\"first_name\"\n                        name=\"first_name\"\n                        placeholder=\"First Name\"\n                        onChange={this.inputHandler}\n                        value={first_name}\n                      />\n                      {this.errorShow(\"first_name\")}\n                    </CFormGroup>\n                  </CCol>\n                  <CCol xs=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"last_name\">Last Name</CLabel>\n                      <CInput\n                        id=\"last_name\"\n                        name=\"last_name\"\n                        placeholder=\"Last Name\"\n                        onChange={this.inputHandler}\n                        value={last_name}\n                      />\n                      {this.errorShow(\"last_name\")}\n                    </CFormGroup>\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row className=\"my-0\">\n                  <CCol xs=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"email\">Email</CLabel>\n                      <CInput\n                        type=\"email\"\n                        id=\"email\"\n                        name=\"email\"\n                        placeholder=\"Email\"\n                        onChange={this.inputHandler}\n                        value={email}\n                      />\n                      {this.errorShow(\"email\")}\n                    </CFormGroup>\n                  </CCol>\n                  <CCol xs=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"contact\">Contact</CLabel>\n                      <CInput\n                        id=\"contact\"\n                        name=\"contact\"\n                        placeholder=\"Contact\"\n                        onChange={this.inputHandler}\n                        value={contact}\n                      />\n                      {this.errorShow(\"contact\")}\n                    </CFormGroup>\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row className=\"my-0\">\n                  <CCol xs=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"gender\">Gender</CLabel>\n                      <Select\n                        custom\n                        placeholder=\"Select gender\"\n                        name=\"gender\"\n                        id=\"gender\"\n                        name=\"gender\"\n                        onChange={(e) => this.handleChange(e, \"gender\")}\n                        value={gender}\n                        options={optionsGender}\n                      ></Select>\n                      {this.errorShow(\"gender\")}\n                    </CFormGroup>\n                  </CCol>\n                  <CCol xs=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"country\">Country</CLabel>\n                      <Select\n                        custom\n                        name=\"country\"\n                        id=\"country\"\n                        name=\"country\"\n                        placeholder=\"Select Country\"\n                        onChange={(e) => this.handleChange(e, \"country\")}\n                        value={country}\n                        options={optionsCountry}\n                      ></Select>\n                      {this.errorShow(\"country\")}\n                    </CFormGroup>\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row className=\"my-0\">\n                  <CCol xs=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"designation\">Designation</CLabel>\n\n                      <Select\n                        custom\n                        id=\"designation\"\n                        name=\"designation\"\n                        placeholder=\"Select Designation\"\n                        onChange={(e) => this.handleChange(e, \"designation\")}\n                        value={designation}\n                        options={optionsDesignation}\n                      ></Select>\n                      {this.errorShow(\"designation\")}\n                    </CFormGroup>\n                  </CCol>\n\n                  <CCol xs=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"expertise\">Expertise</CLabel>\n\n                      <Select\n                        isMulti\n                        custom\n                        id=\"expertise\"\n                        placeholder=\"Select Your expert areas\"\n                        name=\"expertise\"\n                        value={expertise}\n                        options={optionsExpertise}\n                        onChange={(e) => this.handleChange(e, \"expertise\")}\n                      ></Select>\n                      {this.errorShow(\"expertise\")}\n                    </CFormGroup>\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row className=\"my-0\">\n                  <CCol xs=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"role\">Current Role</CLabel>\n\n                      <Select\n                        custom\n                        id=\"role\"\n                        placeholder=\"Select Role\"\n                        name=\"role\"\n                        onChange={(e) => this.handleChange(e, \"role\")}\n                        value={role}\n                        options={optionsRole}\n                      ></Select>\n                      {this.errorShow(\"role\")}\n                    </CFormGroup>\n                  </CCol>\n\n                  <CCol xs=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"industry\">Current Industry</CLabel>\n\n                      <Select\n                        custom\n                        id=\"industry\"\n                        name=\"industry\"\n                        placeholder=\"Select Industry\"\n                        onChange={(e) => this.handleChange(e, \"industry\")}\n                        value={industry}\n                        options={optionsIndustry}\n                      ></Select>\n                      {this.errorShow(\"industry\")}\n                    </CFormGroup>\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row className=\"my-0\">\n                  <CCol xs=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"experience\">Work Experience</CLabel>\n\n                      <Select\n                        custom\n                        id=\"experience\"\n                        name=\"experience\"\n                        placeholder=\"Select Experience\"\n                        onChange={(e) => this.handleChange(e, \"experience\")}\n                        value={experience}\n                        options={optionsExperience}\n                      ></Select>\n                      {this.errorShow(\"experience\")}\n                    </CFormGroup>\n                  </CCol>\n\n                  <CCol xs=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"fields\">Fields</CLabel>\n\n                      <Select\n                        isMulti\n                        custom\n                        placeholder=\"Select Fields\"\n                        id=\"fields\"\n                        name=\"fields\"\n                        onChange={(e) => this.handleChange(e, \"fields\")}\n                        value={fields}\n                        options={optionsFields}\n                      >\n                        <option value=\"select\">Select</option>\n                        <option value=\"consulting\">Consulting</option>\n                        <option value=\"hr\">HR</option>\n                      </Select>\n                      {this.errorShow(\"fields\")}\n                    </CFormGroup>\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row className=\"my-0\">\n                  <CCol xs=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"service\">Service</CLabel>\n\n                      <Select\n                        custom\n                        id=\"service\"\n                        name=\"service\"\n                        placeholder=\"Select Service\"\n                        onChange={(e) => this.handleChange(e, \"service\")}\n                        value={service}\n                        options={optionsService}\n                      ></Select>\n                      {this.errorShow(\"service\")}\n                    </CFormGroup>\n                  </CCol>\n\n                  <CCol xs=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"rate\">Rate</CLabel>\n\n                      <Select\n                        custom\n                        id=\"rate\"\n                        placeholder=\"Select Rate\"\n                        name=\"rate\"\n                        onChange={(e) => this.handleChange(e, \"rate\")}\n                        value={rate}\n                        options={optionsRate}\n                      ></Select>\n                      {this.errorShow(\"rate\")}\n                    </CFormGroup>\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row className=\"my-0\">\n                  <CCol xs=\"6\">\n                    {/* <CFormGroup>\n                      <CLabel htmlFor=\"dateTime\">Select Availability</CLabel>\n                      <InlineWidget\n                        pageSettings={{\n                          backgroundColor: \"ffffff\",\n                          hideEventTypeDetails: false,\n                          hideLandingPageDetails: true,\n                          primaryColor: \"00a2ff\",\n                          textColor: \"4d5055\",\n                        }}\n                        prefill={{\n                          email: \"test@test.com\",\n                          firstName: \"Jon\",\n                          lastName: \"Snow\",\n                          name: \"Jon Snow\",\n                        }}\n                        url=\"https://calendly.com/ikansal\"\n                      />\n\n                      {this.errorShow(\"dateTime\")}\n                    </CFormGroup> */}\n                  </CCol>\n                  <CCol xs=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"about\">About</CLabel>\n                      <CTextarea\n                        name=\"about\"\n                        id=\"about\"\n                        rows=\"9\"\n                        onChange={this.inputHandler}\n                        placeholder=\"Content...\"\n                        value={about}\n                      />\n                      {this.errorShow(\"about\")}\n                    </CFormGroup>\n                  </CCol>\n                </CFormGroup>\n              </CForm>\n            </CCardBody>\n            <CCardFooter>\n              <div className=\"text-right\">\n                <CButton\n                  type=\"submit\"\n                  size=\"sm\"\n                  color=\"primary\"\n                  onClick={this.onSubmit}\n                >\n                  <CIcon name=\"cil-scrubber\" /> Submit\n                </CButton>\n                <CButton\n                  type=\"reset\"\n                  size=\"sm\"\n                  color=\"danger\"\n                  onClick={this.resetState}\n                  className=\"ml-2\"\n                >\n                  <CIcon name=\"cil-ban\" /> Reset\n                </CButton>\n              </div>\n            </CCardFooter>\n          </CCard>\n        </CCol>\n      </CRow>\n    );\n  }\n}\n\nexport default AddExpert;\n","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/resources/AddResource.js",["242","243","244","245","246","247","248","249","250","251","252","253","254","255","256"],"/Volumes/DATA/Isha Kansal/pivot-admin/src/views/store/sagas.js",["257","258"],"import { put, takeLatest, call } from \"redux-saga/effects\";\nimport {\n  LOGIN_BY_ADMIN_REQUEST,\n  LOGIN_BY_ADMIN_FAILED,\n  LOGIN_BY_ADMIN_SUCCESS,\n  FETCH_USERS_FAILED,\n  FETCH_USERS_SUCCESS,\n  FETCH_USERS_REQUEST,\n  USER_STATUS_FAILED,\n  USER_STATUS_SUCCESS,\n  USER_STATUS_REQUEST,\n  FETCH_ONE_USER_FAILED,\n  FETCH_ONE_USER_SUCCESS,\n  FETCH_ONE_USER_REQUEST,\n  ADD_RESOURCE_FAILED,\n  ADD_RESOURCE_SUCCESS,\n  ADD_RESOURCE_REQUEST,\n  FETCH_RESOURCES_REQUEST,\n  FETCH_RESOURCES_FAILED,\n  FETCH_RESOURCES_SUCCESS,\n  FETCH_ONE_RESOURCE_REQUEST,\n  FETCH_ONE_RESOURCE_FAILED,\n  FETCH_ONE_RESOURCE_SUCCESS,\n  ADD_RESOURCE_IMAGE_REQUEST,\n  ADD_RESOURCE_IMAGE_FAILED,\n  ADD_RESOURCE_IMAGE_SUCCESS,\n  DELETE_RESOURCE_REQUEST,\n  DELETE_RESOURCE_SUCCESS,\n  DELETE_RESOURCE_FAILED,\n  EDIT_RESOURCE_REQUEST,\n  EDIT_RESOURCE_FAILED,\n  EDIT_RESOURCE_SUCCESS,\n} from \"./types\";\n\nimport { apiCallGet } from \"../../common/axios\";\nimport { apiCallPost } from \"../../common/axios\";\n\nasync function callLoginByAdmin(data) {\n  const res = await apiCallPost(data.url, data.payload);\n  return res;\n}\n\nasync function callAddResource(data) {\n  const res = await apiCallPost(data.url, data.payload);\n  return res;\n}\nasync function callEditResource(data) {\n  const res = await apiCallPost(data.url, data.payload);\n  return res;\n}\n\nasync function callAddResourceImage(data) {\n  const res = await apiCallPost(data.url, data.payload);\n  return res;\n}\n\nasync function callFetchUsers(data) {\n  const res = await apiCallGet(data.payload);\n  return res;\n}\n\nasync function callDeleteResource(data) {\n  const res = await apiCallGet(data.payload);\n  return res;\n}\n\nasync function callFetchResources(data) {\n  const res = await apiCallGet(data.payload);\n  return res;\n}\nasync function callFetchOneUser(data) {\n  const res = await apiCallGet(data.payload);\n  return res;\n}\n\nasync function callFetchOneResource(data) {\n  const res = await apiCallGet(data.payload);\n  return res;\n}\n\nasync function callUserStatus(data) {\n  const res = await apiCallPost(data.url, data.payload);\n  return res;\n}\nfunction* loginByAdmin(action) {\n  const response = yield call(callLoginByAdmin, action);\n\n  if (response && response.data) {\n    action.callback(response.data);\n    if (response.status === 200) {\n      yield put({\n        type: LOGIN_BY_ADMIN_SUCCESS,\n        loginData: response.data,\n      });\n    } else {\n      yield put({ type: LOGIN_BY_ADMIN_FAILED });\n    }\n  }\n}\n\nfunction* fetchUsers(action) {\n  const response = yield call(callFetchUsers, action);\n\n  if (response && response.data) {\n    action.callback(response.data);\n    if (response.status === 200) {\n      yield put({\n        type: FETCH_USERS_SUCCESS,\n        usersData: response.data,\n      });\n    } else {\n      yield put({ type: FETCH_USERS_FAILED });\n    }\n  }\n}\n\nfunction* fetchResources(action) {\n  const response = yield call(callFetchResources, action);\n  console.log(\"84879498794897\", response);\n  if (response && response.data) {\n    action.callback(response.data);\n    if (response.status === 200) {\n      yield put({\n        type: FETCH_RESOURCES_SUCCESS,\n        resourcesData: response.data,\n      });\n    } else {\n      yield put({ type: FETCH_RESOURCES_FAILED });\n    }\n  }\n}\n\nfunction* fetchOneUser(action) {\n  const response = yield call(callFetchOneUser, action);\n\n  if (response && response.data) {\n    action.callback(response.data);\n    if (response.status === 200) {\n      yield put({\n        type: FETCH_ONE_USER_SUCCESS,\n        oneUserData: response.data,\n      });\n    } else {\n      yield put({ type: FETCH_ONE_USER_FAILED });\n    }\n  }\n}\n\nfunction* fetchOneResource(action) {\n  const response = yield call(callFetchOneResource, action);\n  console.log(\"84697849784780\", response);\n  if (response && response.data) {\n    action.callback(response.data);\n    if (response.status === 200) {\n      yield put({\n        type: FETCH_ONE_RESOURCE_SUCCESS,\n        oneResourceData: response.data,\n      });\n    } else {\n      yield put({ type: FETCH_ONE_RESOURCE_FAILED });\n    }\n  }\n}\n\nfunction* userStatus(action) {\n  const response = yield call(callUserStatus, action);\n\n  if (response && response.data) {\n    action.callback(response.data);\n    if (response.status === 200) {\n      yield put({\n        type: USER_STATUS_SUCCESS,\n        userStatus: response.data,\n      });\n    } else {\n      yield put({ type: USER_STATUS_FAILED });\n    }\n  }\n}\n\nfunction* addResource(action) {\n  const response = yield call(callAddResource, action);\n  console.log(\"u59794967894897u8\", response);\n  if (response && response.data) {\n    action.callback(response.data);\n    if (response.status === 200) {\n      yield put({\n        type: ADD_RESOURCE_SUCCESS,\n        addResourceData: response.data,\n      });\n    } else {\n      yield put({ type: ADD_RESOURCE_FAILED });\n    }\n  }\n}\nfunction* editResource(action) {\n  const response = yield call(callEditResource, action);\n  console.log(\"u597949656785677894897u8\", response);\n  if (response && response.data) {\n    action.callback(response.data);\n    if (response.status === 200) {\n      yield put({\n        type: EDIT_RESOURCE_SUCCESS,\n        editResourceData: response.data.data,\n      });\n    } else {\n      yield put({ type: EDIT_RESOURCE_FAILED });\n    }\n  }\n}\n\nfunction* addResourceImage(action) {\n  const response = yield call(callAddResourceImage, action);\n  console.log(\"responseresponseresponseresponse\", response);\n  // if (response && response.data) {\n  //   action.callback(response.data);\n  //   if (response.status === 200) {\n  //     yield put({\n  //       type: ADD_RESOURCE_IMAGE_SUCCESS,\n  //       addResourceImage: response.data,\n  //     });\n  //   } else {\n  //     yield put({ type: ADD_RESOURCE_IMAGE_FAILED });\n  //   }\n  // }\n}\n\nfunction* deleteResource(action) {\n  const response = yield call(callDeleteResource, action);\n  console.log(\"deleteResourcedeleteResource\", response);\n  if (response && response.data) {\n    action.callback(response.data);\n    if (response.status === 200) {\n      yield put({\n        type: DELETE_RESOURCE_SUCCESS,\n        deleteResourceData: response.data,\n      });\n    } else {\n      yield put({ type: DELETE_RESOURCE_FAILED });\n    }\n  }\n}\n\nexport default function* LoginByAdminWatcher() {\n  yield takeLatest(LOGIN_BY_ADMIN_REQUEST, loginByAdmin);\n  yield takeLatest(FETCH_USERS_REQUEST, fetchUsers);\n  yield takeLatest(FETCH_ONE_USER_REQUEST, fetchOneUser);\n  yield takeLatest(USER_STATUS_REQUEST, userStatus);\n  yield takeLatest(ADD_RESOURCE_REQUEST, addResource);\n  yield takeLatest(FETCH_RESOURCES_REQUEST, fetchResources);\n  yield takeLatest(FETCH_ONE_RESOURCE_REQUEST, fetchOneResource);\n\n  yield takeLatest(ADD_RESOURCE_IMAGE_REQUEST, addResourceImage);\n  yield takeLatest(DELETE_RESOURCE_REQUEST, deleteResource);\n  yield takeLatest(EDIT_RESOURCE_REQUEST, editResource);\n}\n","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/store/types.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/common/axios.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/config.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/views/store/reducer.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/views/store/action.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/loader/index.js",["259","260"],"import React from \"react\";\nconst dots = [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}];\nexport default () => (\n  <>\n    <div className=\"loader-backdrop\" />\n    <div className=\"content-loader\">\n      <div className=\"dot-loader\">\n        {dots.map(({}, index) => (\n          <div key={index} />\n        ))}\n      </div>\n    </div>\n  </>\n);\n","/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/icons.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/logo.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/assets/icons/index.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/common/commonModal.js",["261"],"import React from \"react\";\nimport { Button, Modal, ModalBody, ModalHeader } from \"reactstrap\";\n// import DeleteIcon from \"../assets/images/dashboard/delete-modal-icon.png\";\n// import CloseIcon from \"../assets/images/dashboard/closeIcon.png\";\n\nclass CommonModal extends React.Component {\n  render() {\n    const { isOpen, toggle, loading, block_delete, type, id } = this.props;\n\n    return (\n      <Modal\n        isOpen={isOpen}\n        toggle={toggle}\n        className=\"deleteModal mt-5 modal-dialog-centered\"\n      >\n        <ModalHeader toggle={toggle}>\n          {type === \"block\" ? (\n            <h2>Want to Block</h2>\n          ) : type === \"unblock\" ? (\n            <h2>Want to Unblock</h2>\n          ) : type === \"deactivate\" ? (\n            <h2>Want to Deactivate</h2>\n          ) : type === \"deleteResource\" ? (\n            <h2>Want to Delete</h2>\n          ) : (\n            \"\"\n          )}\n        </ModalHeader>\n        <ModalBody className=\"text-center\">\n          <div className=\"text-center mb-3\"></div>\n\n          {type === \"block\" ? (\n            <p>Do you really want to block this user ?</p>\n          ) : type === \"unblock\" ? (\n            <p>Do you really want to unblock this user ?</p>\n          ) : type === \"deactivate\" ? (\n            <p>Do you really want to deactivate this user ?</p>\n          ) : type === \"deleteResource\" ? (\n            <p>Do you really want to delete this resource ?</p>\n          ) : (\n            \"\"\n          )}\n          <div className=\"text-center deleteBtn mt-4\">\n            <Button\n              color=\"success\"\n              onClick={() => block_delete(id)}\n              // disabled={loading}\n            >\n              Yes, Confirmed\n            </Button>\n          </div>\n        </ModalBody>\n      </Modal>\n    );\n  }\n}\n\nexport default CommonModal;\n","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/resources/ResourcesData.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/views/resources/EditResource.js",["262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278"],"import React, { Component } from \"react\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormGroup,\n  CTextarea,\n  CInput,\n  CLabel,\n  CRow,\n  CInputFile,\n} from \"@coreui/react\";\nimport { connect } from \"react-redux\";\nimport { NotificationManager } from \"react-notifications\";\nimport { bindActionCreators } from \"redux\";\nimport { withRouter } from \"react-router-dom\";\nimport Select from \"react-select\";\nimport {\n  addResource,\n  addResourceImage,\n  setImage,\n  fetchOneResource,\n} from \"../store/action\";\n\nimport {\n  optionsFormat,\n  optionsPricing,\n  optionsCategory,\n  optionsPace,\n} from \"./ResourcesFieldsData\";\nimport CameraIcon from \"../../assets/icons/photo-camera.svg\";\nimport ADD from \"../../assets/icons/add.svg\";\nimport CANCEL from \"../../assets/icons/cancel.svg\";\nimport { Input } from \"reactstrap\";\nimport CIcon from \"@coreui/icons-react\";\nimport Avatar from \"../../assets/icons/avatar.png\";\nimport BackArrow from \"../../assets/icons/left-arrow.svg\";\nclass EditResource extends Component {\n  constructor(props) {\n    super();\n\n    this.state = {\n      name: \"\",\n      format: \"\",\n      pricing: \"\",\n      category: [],\n      uniqueSellingProposition: \"\",\n      errorType: \"\",\n      errorText: \"\",\n      resourceImage: null,\n      plusBit: false,\n      pros: [],\n      cons: [],\n      details: [],\n      pace: \"\",\n      websiteLink: \"\",\n      resourceData: {},\n    };\n  }\n  // componentDidMount() {\n  //   const resource_id = this.props && this.props.match.params.id;\n  //   this.props.fetchOneResource(`resource/${resource_id}`, (value) => {\n  //     console.log(\"8965789057dfhgfh0950697\", value);\n  //     this.setState({\n  //       resourceData: value.data.resource,\n  //     });\n  //     // setResource(value.data.resource);\n  //     // setLoading(false);\n  //   });\n  // }\n  uploadImage = (event) => {\n    this.clearError();\n    console.log(\"845897495879\", event);\n    if (event.target.files && event.target.files[0]) {\n      var reader = new FileReader();\n      reader.onloadend = function () {\n        // props.setImage(reader.result);\n        this.setState({\n          resourceImage: reader.result,\n        });\n      }.bind(this);\n      this.props.setImage(reader.result);\n      reader.readAsDataURL(event.target.files[0]);\n    }\n  };\n  errorShow = (type) => {\n    const { errorType, errorText } = this.state;\n    return errorType === type ? <p>{errorText}</p> : null;\n  };\n  clearError = () => {\n    this.setState({\n      errorType: \"\",\n      errorText: \"\",\n    });\n  };\n  inputHandler = (e) => {\n    this.clearError();\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  inputProsCons = (e, index, type) => {\n    if (type === \"prosAdd\") {\n      let prosToUpdate = this.state.pros[index];\n      const newArray = [...this.state.pros];\n      // prosToUpdate = {\n      //   ...prosToUpdate,\n      //   value: e.target.value,\n      // };\n      prosToUpdate = e.target.value;\n      newArray[index] = prosToUpdate;\n\n      this.clearError();\n      this.setState({ [e.target.name]: e.target.value, pros: newArray });\n    }\n    if (type === \"consAdd\") {\n      let consToUpdate = this.state.cons[index];\n      const newArray = [...this.state.cons];\n      // consToUpdate = {\n      //   ...consToUpdate,\n      //   value: e.target.value,\n      // };\n      consToUpdate = e.target.value;\n      newArray[index] = consToUpdate;\n\n      this.clearError();\n      this.setState({ [e.target.name]: e.target.value, cons: newArray });\n    }\n    if (type === \"detailsAdd\") {\n      let detailsToUpdate = this.state.details[index];\n      const newArray = [...this.state.details];\n      // detailsToUpdate = {\n      //   ...detailsToUpdate,\n      //   value: e.target.value,\n      // };\n      detailsToUpdate = e.target.value;\n      newArray[index] = detailsToUpdate;\n\n      this.clearError();\n      this.setState({ [e.target.name]: e.target.value, details: newArray });\n    }\n  };\n  onSubmit = (e) => {\n    const {\n      name,\n      format,\n      pricing,\n      details,\n      uniqueSellingProposition,\n      pros,\n      cons,\n      category,\n      pace,\n      websiteLink,\n      resourceImage,\n    } = this.state;\n\n    if (name === \"\") {\n      this.setState({\n        errorType: \"name\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Name should not be empty</b>\n          </span>\n        ),\n      });\n      return;\n    }\n    if (name !== \"\") {\n      let filter = /^[a-zA-Z0-9]+([-_\\s]{1}[a-zA-Z0-9]+)*$/;\n\n      if (!filter.test(name)) {\n        this.setState({\n          errorType: \"name\",\n          errorText: (\n            <span className=\"text-danger\">\n              <b>\n                {\" \"}\n                Name should be combination of alphanumeric text, underscore,\n                space and hyphen\n              </b>\n            </span>\n          ),\n        });\n        return;\n      }\n    }\n    // if (resourceImage === null) {\n    //   this.setState({\n    //     errorType: \"file-input\",\n    //     errorText: (\n    //       <span className=\"text-danger\">\n    //         <b>Please select an image</b>\n    //       </span>\n    //     ),\n    //   });\n    //   return;\n    // }\n    if (format === \"\") {\n      this.setState({\n        errorType: \"format\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Select any format</b>\n          </span>\n        ),\n      });\n      return;\n    }\n    if (pricing === \"\") {\n      this.setState({\n        errorType: \"pricing\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Please enter type of pricing</b>\n          </span>\n        ),\n      });\n      return;\n    }\n    if (category.length === 0) {\n      this.setState({\n        errorType: \"category\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Please enter category</b>\n          </span>\n        ),\n      });\n      return;\n    }\n    if (pace === \"\") {\n      this.setState({\n        errorType: \"pace\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Please enter pace</b>\n          </span>\n        ),\n      });\n      return;\n    }\n    if (websiteLink === \"\") {\n      this.setState({\n        errorType: \"websiteLink\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Please enter website link</b>\n          </span>\n        ),\n      });\n      return;\n    }\n\n    if (websiteLink !== \"\") {\n      let filter = /(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/g;\n\n      if (!filter.test(websiteLink)) {\n        this.setState({\n          errorType: \"websiteLink\",\n          errorText: (\n            <span className=\"text-danger\">\n              <b> Please enter valid website link</b>\n            </span>\n          ),\n        });\n        return;\n      }\n    }\n\n    if (pros.length === 0) {\n      this.setState({\n        errorType: \"pros\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Please add some pros</b>\n          </span>\n        ),\n      });\n      return;\n    }\n    if (cons.length === 0) {\n      this.setState({\n        errorType: \"cons\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Please add some cons</b>\n          </span>\n        ),\n      });\n      return;\n    }\n    if (details.length === 0) {\n      this.setState({\n        errorType: \"details\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Please add some details</b>\n          </span>\n        ),\n      });\n      return;\n    }\n\n    if (uniqueSellingProposition === \"\") {\n      this.setState({\n        errorType: \"uniqueSellingProposition\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Please enter some information</b>\n          </span>\n        ),\n      });\n      return;\n    }\n    // this.callApiAddImage()\n    this.callApiAddResource();\n  };\n  callApiAddImage = () => {\n    const { resourceImage } = this.state;\n    let obj = {\n      profile_pic: resourceImage,\n    };\n    this.props.addResourceImage(\"resource/create\", obj, (value) => {\n      // this.callApiAddResource();\n    });\n  };\n  callApiAddResource = () => {\n    const {\n      name,\n      format,\n      pricing,\n      websiteLink,\n      category,\n      details,\n      pros,\n      cons,\n      uniqueSellingProposition,\n      pace,\n    } = this.state;\n    let obj = {\n      title: name,\n      format,\n      price: pricing,\n      website: websiteLink,\n      category,\n      pros,\n      cons,\n      info: details,\n      unique_selling_proposition: uniqueSellingProposition,\n      pace,\n    };\n\n    this.props.addResource(\"resource/create\", obj, (value) => {\n      console.log(\"849856798497894879\", value);\n      if (value.status === 200) {\n        NotificationManager.success(\"Resource added successfully\", \"\", 1000);\n        this.props.history.push(\"/resources\");\n      }\n    });\n  };\n  resetState = (e) => {\n    e.preventDefault();\n    this.setState({\n      name: \"\",\n      format: \"\",\n      pricing: \"\",\n      category: [],\n      details: [],\n      pros: [],\n      cons: [],\n      resourceImage: null,\n      uniqueSellingProposition: \"\",\n      errorType: \"\",\n      errorText: \"\",\n      pace: \"\",\n      websiteLink: \"\",\n    });\n  };\n  handleBack = (e) => {\n    e.preventDefault();\n    this.props.history.push(\"/resources\");\n  };\n  handlePlusButton = (e, type) => {\n    if (type === \"prosAdd\") {\n      const { pros } = this.state;\n      const newArr = [...pros];\n      e.preventDefault();\n      e.stopPropagation();\n      let newPros = {\n        value: \"\",\n      };\n      newArr.push(newPros);\n      this.setState({\n        pros: newArr,\n      });\n    }\n    if (type === \"consAdd\") {\n      const { cons } = this.state;\n      const newArr = [...cons];\n      e.preventDefault();\n      e.stopPropagation();\n      let newCons = {\n        value: \"\",\n      };\n      newArr.push(newCons);\n      this.setState({\n        cons: newArr,\n      });\n    }\n    if (type === \"detailsAdd\") {\n      const { details } = this.state;\n      const newArr = [...details];\n      e.preventDefault();\n      e.stopPropagation();\n      let newDetails = {\n        value: \"\",\n      };\n      newArr.push(newDetails);\n      this.setState({\n        details: newArr,\n      });\n    }\n  };\n  handleCancel = (e, index, type) => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (type === \"prosAdd\") {\n      const { pros } = this.state;\n\n      const newArr = [...pros];\n      newArr.splice(index, 1);\n      this.setState({\n        pros: newArr,\n      });\n    }\n    if (type === \"consAdd\") {\n      const { cons } = this.state;\n\n      const newArr = [...cons];\n      newArr.splice(index, 1);\n      this.setState({\n        cons: newArr,\n      });\n    }\n    if (type === \"detailsAdd\") {\n      const { details } = this.state;\n\n      const newArr = [...details];\n      newArr.splice(index, 1);\n      this.setState({\n        details: newArr,\n      });\n    }\n  };\n\n  handleSelect = (data, type) => {\n    console.log(\"489567894879\", data, type);\n    this.clearError();\n    if (type === \"format\") {\n      this.setState({\n        format: data.value,\n      });\n    }\n    if (type === \"pricing\") {\n      this.setState({\n        pricing: data.value,\n      });\n    }\n    if (type === \"category\") {\n      console.log(\"98638968939689\", data, type);\n      let arr = data.map((el) => {\n        return el.value;\n      });\n\n      this.setState({\n        category: arr,\n      });\n    }\n    if (type === \"pace\") {\n      this.setState({\n        pace: data.value,\n      });\n    }\n  };\n  render() {\n    const {\n      name,\n      format,\n      pricing,\n      uniqueSellingProposition,\n      category,\n      resourceImage,\n      plusBit,\n      pros,\n      cons,\n      details,\n      pace,\n      websiteLink,\n      resourceData,\n    } = this.state;\n    console.log(\n      \"45898497894474748798\",\n      this.props && this.props.saveResourceData\n    );\n    console.log(\"pricingpricingpricingpricingpricing\", pricing);\n    return (\n      <CRow>\n        <CCol xs=\"12\" sm=\"12\">\n          <CCard className=\"expert-card\">\n            <CCardHeader>\n              <CButton onClick={this.handleBack} className=\"backBtn\">\n                <img src={BackArrow} className=\"mr-2\" /> Back\n              </CButton>\n            </CCardHeader>\n            <CCardBody>\n              <CForm\n                action=\"\"\n                method=\"post\"\n                encType=\"multipart/form-data\"\n                className=\"form-horizontal\"\n              >\n                <CFormGroup row></CFormGroup>\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"name\">Name</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CInput\n                      id=\"name\"\n                      name=\"name\"\n                      placeholder=\"Name\"\n                      onChange={this.inputHandler}\n                      value={name}\n                    />\n                    {this.errorShow(\"name\")}\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CLabel col md=\"3\" htmlFor=\"file-input\">\n                    Image\n                  </CLabel>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CInputFile\n                      type=\"file\"\n                      accept=\"image/*\"\n                      id=\"file-input\"\n                      name=\"file-input\"\n                      onChange={this.uploadImage}\n                    />\n                    {this.errorShow(\"file-input\")}\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"format\">Format</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <Select\n                      custom\n                      name=\"format\"\n                      placeholder=\"Select Format\"\n                      id=\"format\"\n                      value={format ? { value: format, label: format } : null}\n                      options={optionsFormat}\n                      onChange={(data) => this.handleSelect(data, \"format\")}\n                    ></Select>\n                    {this.errorShow(\"format\")}\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"pricing\">Price</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <Select\n                      custom\n                      name=\"pricing\"\n                      placeholder=\"Select Price\"\n                      id=\"pricing\"\n                      value={\n                        pricing ? { value: pricing, label: pricing } : null\n                      }\n                      options={optionsPricing}\n                      onChange={(data) => this.handleSelect(data, \"pricing\")}\n                    ></Select>\n                    {this.errorShow(\"pricing\")}\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"category\">Category</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <Select\n                      isMulti\n                      custom\n                      name=\"category\"\n                      placeholder=\"Select Category\"\n                      id=\"category\"\n                      // value={category}\n                      options={optionsCategory}\n                      onChange={(data) => this.handleSelect(data, \"category\")}\n                    ></Select>\n                    {this.errorShow(\"category\")}\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"pace\">Pace</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <Select\n                      custom\n                      name=\"pace\"\n                      placeholder=\"Select Pace\"\n                      id=\"pace\"\n                      value={pace ? { value: pace, label: pace } : null}\n                      options={optionsPace}\n                      onChange={(data) => this.handleSelect(data, \"pace\")}\n                    ></Select>\n                    {this.errorShow(\"pace\")}\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"websiteLink\">Website Link</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CInput\n                      id=\"websiteLink\"\n                      name=\"websiteLink\"\n                      placeholder=\"Website Link\"\n                      onChange={this.inputHandler}\n                      value={websiteLink}\n                    />\n                    {this.errorShow(\"websiteLink\")}\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"prosCons\">Pros & Cons</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <div\n                      onClick={(e) => this.handlePlusButton(e, \"prosAdd\")}\n                      class=\"d-flex justify-content-between add-list\"\n                    >\n                      <CLabel htmlFor=\"pros\">Add Pros</CLabel>\n                      <button className=\"icon\">\n                        <img src={ADD} className=\"ml-3\" />\n                      </button>\n                    </div>\n                    {this.errorShow(\"pros\")}\n                    {pros &&\n                      pros.length > 0 &&\n                      pros.map((el, index) => {\n                        return (\n                          <div className=\"d-flex align-items-center mb-2 \">\n                            {/* <input value={el.value} /> */}\n                            <CInput\n                              type=\"text\"\n                              id={`pros${index}`}\n                              name={`pros${index}`}\n                              placeholder={`${index + 1}.`}\n                              autoComplete={`pros${index}`}\n                              onChange={(e) => {\n                                this.inputProsCons(e, index, \"prosAdd\");\n                              }}\n                              // value={`pros${index}`}\n                            />\n                            <button\n                              className=\"icon\"\n                              onClick={(e) =>\n                                this.handleCancel(e, index, \"prosAdd\")\n                              }\n                            >\n                              <img src={CANCEL} className=\"ml-3\" />\n                            </button>\n                          </div>\n                        );\n                      })}\n\n                    {/* {this.errorShow(\"fields\")} */}\n                    <div\n                      onClick={(e) => this.handlePlusButton(e, \"consAdd\")}\n                      class=\"d-flex justify-content-between add-list\"\n                    >\n                      <CLabel htmlFor=\"cons\">Add Cons</CLabel>\n                      <button className=\"icon\">\n                        <img src={ADD} className=\"ml-3\" />\n                      </button>\n                    </div>\n                    {this.errorShow(\"cons\")}\n                    {cons &&\n                      cons.length > 0 &&\n                      cons.map((el, index) => {\n                        return (\n                          <div className=\"d-flex align-items-center mb-2\">\n                            {/* <input value={el.value} /> */}\n                            <CInput\n                              type=\"text\"\n                              id={`cons${index}`}\n                              name={`cons${index}`}\n                              placeholder={`${index + 1}.`}\n                              autoComplete={`cons${index}`}\n                              onChange={(e) => {\n                                this.inputProsCons(e, index, \"consAdd\");\n                              }}\n                              // value={`pros${index}`}\n                            />\n                            <button\n                              className=\"icon\"\n                              onClick={(e) =>\n                                this.handleCancel(e, index, \"consAdd\")\n                              }\n                            >\n                              <img src={CANCEL} className=\"ml-3\" />\n                            </button>\n                          </div>\n                        );\n                      })}\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"details\">Details</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <div\n                      class=\"d-flex justify-content-between add-list\"\n                      onClick={(e) => this.handlePlusButton(e, \"detailsAdd\")}\n                    >\n                      <CLabel htmlFor=\"addDetails\">Add Details</CLabel>\n                      <button className=\"icon\">\n                        <img src={ADD} className=\"ml-3\" />\n                      </button>\n                    </div>\n                    {this.errorShow(\"details\")}\n                    {details &&\n                      details.length > 0 &&\n                      details.map((el, index) => {\n                        return (\n                          <div className=\"d-flex align-items-center mb-2\">\n                            {/* <input value={el.value} /> */}\n                            <CInput\n                              type=\"text\"\n                              id={`details${index}`}\n                              name={`details${index}`}\n                              placeholder={`${index + 1}.`}\n                              autoComplete={`details${index}`}\n                              onChange={(e) => {\n                                this.inputProsCons(e, index, \"detailsAdd\");\n                              }}\n                              // value={`pros${index}`}\n                            />\n\n                            <button\n                              className=\"icon\"\n                              onClick={(e) =>\n                                this.handleCancel(e, index, \"detailsAdd\")\n                              }\n                            >\n                              <img src={CANCEL} className=\"ml-3\" />\n                            </button>\n                            {/* {this.errorShow(\"details\")} */}\n                          </div>\n                        );\n                      })}\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"uniqueSellingProposition\">\n                      Unique Selling Proposition\n                    </CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CTextarea\n                      name=\"uniqueSellingProposition\"\n                      id=\"uniqueSellingProposition\"\n                      rows=\"9\"\n                      onChange={this.inputHandler}\n                      placeholder=\"Content...\"\n                      value={uniqueSellingProposition}\n                    />\n                    {this.errorShow(\"uniqueSellingProposition\")}\n                  </CCol>\n                </CFormGroup>\n              </CForm>\n            </CCardBody>\n            <CCardFooter>\n              <div className=\"text-right\">\n                <CButton\n                  type=\"submit\"\n                  size=\"sm\"\n                  color=\"primary\"\n                  onClick={this.onSubmit}\n                >\n                  <CIcon name=\"cil-scrubber\" /> Submit\n                </CButton>\n                <CButton\n                  type=\"reset\"\n                  size=\"sm\"\n                  color=\"danger\"\n                  onClick={this.resetState}\n                  className=\"ml-2\"\n                >\n                  <CIcon name=\"cil-ban\" /> Reset\n                </CButton>\n              </div>\n            </CCardFooter>\n          </CCard>\n        </CCol>\n      </CRow>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    saveResourceData: state.LoginAndNavigationReducer.saveResourceData,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    {\n      addResource,\n      addResourceImage,\n      fetchOneResource,\n      setImage,\n    },\n    dispatch\n  );\n};\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(EditResource)\n);\n","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/resources/Resource.js",["279","280","281","282","283"],"import React, { useState, useEffect, Fragment } from \"react\";\nimport { CCard, CCardBody, CCardHeader, CCol, CRow } from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport { fetchOneResource } from \"../store/action\";\nimport resourcesData from \"./ResourcesData\";\nimport { connect } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { withRouter } from \"react-router-dom\";\nimport Avatar from \"../../assets/icons/avatar.png\";\nconst Resource = (props) => {\n  const [resource, setResource] = useState({});\n  const [loading, setLoading] = useState(false);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    setLoading(true);\n\n    const resource_id = props && props.match.params.id;\n    dispatch(\n      fetchOneResource(`resource/${resource_id}`, (value) => {\n        console.log(\"89657890570950697\", value);\n        setResource(value.data.resource);\n        setLoading(false);\n      })\n    );\n  }, []);\n  console.log(\"84967894897894897\", props && props.saveImage);\n  let category =\n    resource &&\n    resource.category &&\n    resource.category.length > 0 &&\n    resource.category.join(\", \");\n\n  let pros =\n    resource &&\n    resource.pros &&\n    resource.pros.length > 0 &&\n    resource.pros.join(\", \");\n  let cons =\n    resource &&\n    resource.cons &&\n    resource.cons.length > 0 &&\n    resource.cons.join(\", \");\n  let details =\n    resource &&\n    resource.info &&\n    resource.info.length > 0 &&\n    resource.info.join(\", \");\n  return (\n    <CRow>\n      <CCol lg={12}>\n        <CCard>\n          <CCardHeader>Resource Details</CCardHeader>\n\n          <CCardBody>\n            {resource && (\n              <table className=\"table\">\n                <tbody>\n                  <tr>\n                    <td>RID</td>\n                    <td>\n                      <strong>{resource._id}</strong>\n                    </td>\n                  </tr>\n\n                  {resource.title && (\n                    <tr>\n                      <td>Name</td>\n                      <td>\n                        <strong>{resource.title}</strong>\n                      </td>\n                    </tr>\n                  )}\n                  {resource.profile_pic && (\n                    <tr>\n                      <td>Image</td>\n                      <td>\n                        <img\n                          src={\n                            props && props.saveImage ? props.saveImage : Avatar\n                          }\n                          alt=\"profile\"\n                        />\n                      </td>\n                    </tr>\n                  )}\n                  {resource.format && (\n                    <tr>\n                      <td>Format</td>\n                      <td>\n                        <strong>{resource.format}</strong>\n                      </td>\n                    </tr>\n                  )}\n                  {resource.price && (\n                    <tr>\n                      <td>Price</td>\n                      <td>\n                        <strong>{resource.price}</strong>\n                      </td>\n                    </tr>\n                  )}\n\n                  {resource.category && (\n                    <tr>\n                      <td>Category</td>\n                      <td>\n                        <strong>{category}</strong>\n                      </td>\n                    </tr>\n                  )}\n                  {resource.pace && (\n                    <tr>\n                      <td>Pace</td>\n                      <td>\n                        <strong>{resource.pace}</strong>\n                      </td>\n                    </tr>\n                  )}\n                  {resource.website && (\n                    <tr>\n                      <td>Website Link</td>\n                      <td>\n                        <strong>{resource.website}</strong>\n                      </td>\n                    </tr>\n                  )}\n                  {resource.unique_selling_proposition && (\n                    <tr>\n                      <td>Unique Selling Proposition</td>\n                      <td>\n                        <strong>{resource.unique_selling_proposition}</strong>\n                      </td>\n                    </tr>\n                  )}\n                  {resource.pros && resource.pros.length > 0 && (\n                    <tr>\n                      <td>Pros</td>\n                      <td>\n                        <strong>{pros}</strong>\n                      </td>\n                      {/* {resource.pros.map((item, index) => {\n                        return (\n                          <td>\n                            <strong>{`${index + 1}.  `}</strong>\n                            <strong>{item}</strong>\n                          </td>\n                        );\n                      })} */}\n                    </tr>\n                  )}\n                  {resource.cons && resource.cons.length > 0 && (\n                    <tr>\n                      <td>Cons</td>\n                      <td>\n                        <strong>{cons}</strong>\n                      </td>\n                      {/* {resource.cons.map((item, index) => {\n                        return (\n                          <td>\n                            <strong>{`${index + 1}.  `}</strong>\n                            <strong>{item}</strong>\n                          </td>\n                        );\n                      })} */}\n                    </tr>\n                  )}\n                  {resource.info && (\n                    <tr>\n                      <td>Details</td>\n                      <td>\n                        <strong>{details}</strong>\n                      </td>\n                      {/* {resource.info.map((item, index) => {\n                        return (\n                          <td>\n                            <strong>{`${index + 1}.  `}</strong>\n                            <strong>{item}</strong>\n                          </td>\n                        );\n                      })} */}\n                    </tr>\n                  )}\n                </tbody>\n              </table>\n            )}\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    saveImage: state.LoginAndNavigationReducer.saveImage,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    {\n      fetchOneResource,\n    },\n    dispatch\n  );\n};\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(Resource)\n);\n","/Volumes/DATA/Isha Kansal/pivot-admin/src/common/stringFunction.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/common/toolTip.js",["284"],"import React, { useState } from \"react\";\nimport { Tooltip } from \"reactstrap\";\n\nexport default ({ placement = \"left\", target, children }) => {\n  const [tooltipOpen, setTooltipOpen] = useState(false);\n\n  const toggle = () => setTooltipOpen(!tooltipOpen);\n\n  return (\n    <Tooltip\n      placement={placement}\n      isOpen={tooltipOpen}\n      target={target}\n      toggle={toggle}\n    >\n      {children}\n    </Tooltip>\n  );\n};\n","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/experts/ExpertsData.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/views/experts/Expert.js",["285"],"import React from \"react\";\nimport { CCard, CCardBody, CCardHeader, CCol, CRow } from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\n\nimport expertsData from \"./ExpertsData\";\n\nconst Expert = (props) => {\n  const expert = expertsData.find(\n    (expert) => expert.id === props && props.match.params.id\n  );\n\n  return (\n    <CRow>\n      <CCol lg={12}>\n        <CCard>\n          <CCardHeader>Expert Details</CCardHeader>\n\n          <CCardBody>\n            {expert && (\n              <table className=\"table\">\n                <tbody>\n                  <tr>\n                    <td>EID</td>\n                    <td>\n                      <strong>{expert.id}</strong>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            )}\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  );\n};\nexport default Expert;\n","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/experts/ExpertsFieldsData.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/views/resources/ResourcesFieldsData.js",[],{"ruleId":"286","replacedBy":"287"},{"ruleId":"288","replacedBy":"289"},{"ruleId":"290","severity":1,"message":"291","line":19,"column":7,"nodeType":"292","messageId":"293","endLine":19,"endColumn":19},{"ruleId":"294","severity":1,"message":"295","line":28,"column":1,"nodeType":"296","endLine":28,"endColumn":37},{"ruleId":"297","severity":1,"message":"298","line":167,"column":29,"nodeType":"299","endLine":167,"endColumn":50},{"ruleId":"290","severity":1,"message":"300","line":3,"column":10,"nodeType":"292","messageId":"293","endLine":3,"endColumn":18},{"ruleId":"290","severity":1,"message":"291","line":12,"column":7,"nodeType":"292","messageId":"293","endLine":12,"endColumn":19},{"ruleId":"290","severity":1,"message":"301","line":15,"column":3,"nodeType":"292","messageId":"293","endLine":15,"endColumn":14},{"ruleId":"290","severity":1,"message":"302","line":19,"column":3,"nodeType":"292","messageId":"293","endLine":19,"endColumn":13},{"ruleId":"290","severity":1,"message":"303","line":20,"column":3,"nodeType":"292","messageId":"293","endLine":20,"endColumn":14},{"ruleId":"290","severity":1,"message":"304","line":22,"column":8,"nodeType":"292","messageId":"293","endLine":22,"endColumn":21},{"ruleId":"290","severity":1,"message":"305","line":40,"column":10,"nodeType":"292","messageId":"293","endLine":40,"endColumn":17},{"ruleId":"306","severity":1,"message":"307","line":125,"column":6,"nodeType":"308","endLine":125,"endColumn":14,"suggestions":"309"},{"ruleId":"310","severity":1,"message":"311","line":219,"column":29,"nodeType":"312","endLine":219,"endColumn":64},{"ruleId":"310","severity":1,"message":"311","line":229,"column":29,"nodeType":"312","endLine":229,"endColumn":66},{"ruleId":"306","severity":1,"message":"313","line":57,"column":6,"nodeType":"308","endLine":57,"endColumn":14,"suggestions":"314"},{"ruleId":"290","severity":1,"message":"301","line":9,"column":3,"nodeType":"292","messageId":"293","endLine":9,"endColumn":14},{"ruleId":"290","severity":1,"message":"302","line":13,"column":3,"nodeType":"292","messageId":"293","endLine":13,"endColumn":13},{"ruleId":"290","severity":1,"message":"315","line":25,"column":10,"nodeType":"292","messageId":"293","endLine":25,"endColumn":16},{"ruleId":"310","severity":1,"message":"311","line":111,"column":29,"nodeType":"312","endLine":111,"endColumn":64},{"ruleId":"310","severity":1,"message":"311","line":121,"column":29,"nodeType":"312","endLine":121,"endColumn":66},{"ruleId":"290","severity":1,"message":"316","line":1,"column":38,"nodeType":"292","messageId":"293","endLine":1,"endColumn":46},{"ruleId":"290","severity":1,"message":"317","line":11,"column":8,"nodeType":"292","messageId":"293","endLine":11,"endColumn":13},{"ruleId":"290","severity":1,"message":"318","line":16,"column":10,"nodeType":"292","messageId":"293","endLine":16,"endColumn":19},{"ruleId":"306","severity":1,"message":"319","line":33,"column":6,"nodeType":"308","endLine":33,"endColumn":8,"suggestions":"320"},{"ruleId":"286","replacedBy":"321"},{"ruleId":"288","replacedBy":"322"},{"ruleId":"290","severity":1,"message":"323","line":18,"column":3,"nodeType":"292","messageId":"293","endLine":18,"endColumn":10},{"ruleId":"290","severity":1,"message":"324","line":467,"column":7,"nodeType":"292","messageId":"293","endLine":467,"endColumn":19},{"ruleId":"310","severity":1,"message":"311","line":476,"column":17,"nodeType":"312","endLine":476,"endColumn":57},{"ruleId":"297","severity":1,"message":"298","line":577,"column":25,"nodeType":"299","endLine":577,"endColumn":38},{"ruleId":"297","severity":1,"message":"298","line":592,"column":25,"nodeType":"299","endLine":592,"endColumn":39},{"ruleId":"290","severity":1,"message":"325","line":35,"column":8,"nodeType":"292","messageId":"293","endLine":35,"endColumn":18},{"ruleId":"290","severity":1,"message":"326","line":38,"column":10,"nodeType":"292","messageId":"293","endLine":38,"endColumn":15},{"ruleId":"290","severity":1,"message":"327","line":40,"column":8,"nodeType":"292","messageId":"293","endLine":40,"endColumn":14},{"ruleId":"290","severity":1,"message":"328","line":166,"column":7,"nodeType":"292","messageId":"293","endLine":166,"endColumn":20},{"ruleId":"329","severity":1,"message":"330","line":278,"column":62,"nodeType":"331","messageId":"332","endLine":278,"endColumn":63,"suggestions":"333"},{"ruleId":"329","severity":1,"message":"330","line":278,"column":105,"nodeType":"331","messageId":"332","endLine":278,"endColumn":106,"suggestions":"334"},{"ruleId":"290","severity":1,"message":"328","line":524,"column":7,"nodeType":"292","messageId":"293","endLine":524,"endColumn":20},{"ruleId":"290","severity":1,"message":"335","line":525,"column":7,"nodeType":"292","messageId":"293","endLine":525,"endColumn":14},{"ruleId":"310","severity":1,"message":"311","line":569,"column":17,"nodeType":"312","endLine":569,"endColumn":57},{"ruleId":"310","severity":1,"message":"311","line":763,"column":25,"nodeType":"312","endLine":763,"endColumn":59},{"ruleId":"310","severity":1,"message":"311","line":790,"column":31,"nodeType":"312","endLine":790,"endColumn":68},{"ruleId":"310","severity":1,"message":"311","line":803,"column":25,"nodeType":"312","endLine":803,"endColumn":59},{"ruleId":"310","severity":1,"message":"311","line":830,"column":31,"nodeType":"312","endLine":830,"endColumn":68},{"ruleId":"310","severity":1,"message":"311","line":849,"column":25,"nodeType":"312","endLine":849,"endColumn":59},{"ruleId":"310","severity":1,"message":"311","line":878,"column":31,"nodeType":"312","endLine":878,"endColumn":68},{"ruleId":"290","severity":1,"message":"336","line":25,"column":3,"nodeType":"292","messageId":"293","endLine":25,"endColumn":28},{"ruleId":"290","severity":1,"message":"337","line":26,"column":3,"nodeType":"292","messageId":"293","endLine":26,"endColumn":29},{"ruleId":"294","severity":1,"message":"338","line":3,"column":1,"nodeType":"296","endLine":14,"endColumn":3},{"ruleId":"339","severity":1,"message":"340","line":8,"column":20,"nodeType":"341","messageId":"342","endLine":8,"endColumn":22},{"ruleId":"290","severity":1,"message":"305","line":8,"column":29,"nodeType":"292","messageId":"293","endLine":8,"endColumn":36},{"ruleId":"290","severity":1,"message":"325","line":35,"column":8,"nodeType":"292","messageId":"293","endLine":35,"endColumn":18},{"ruleId":"290","severity":1,"message":"326","line":38,"column":10,"nodeType":"292","messageId":"293","endLine":38,"endColumn":15},{"ruleId":"290","severity":1,"message":"327","line":40,"column":8,"nodeType":"292","messageId":"293","endLine":40,"endColumn":14},{"ruleId":"290","severity":1,"message":"328","line":157,"column":7,"nodeType":"292","messageId":"293","endLine":157,"endColumn":20},{"ruleId":"329","severity":1,"message":"330","line":258,"column":62,"nodeType":"331","messageId":"332","endLine":258,"endColumn":63,"suggestions":"343"},{"ruleId":"329","severity":1,"message":"330","line":258,"column":105,"nodeType":"331","messageId":"332","endLine":258,"endColumn":106,"suggestions":"344"},{"ruleId":"290","severity":1,"message":"345","line":494,"column":7,"nodeType":"292","messageId":"293","endLine":494,"endColumn":15},{"ruleId":"290","severity":1,"message":"328","line":495,"column":7,"nodeType":"292","messageId":"293","endLine":495,"endColumn":20},{"ruleId":"290","severity":1,"message":"335","line":496,"column":7,"nodeType":"292","messageId":"293","endLine":496,"endColumn":14},{"ruleId":"290","severity":1,"message":"346","line":502,"column":7,"nodeType":"292","messageId":"293","endLine":502,"endColumn":19},{"ruleId":"310","severity":1,"message":"311","line":515,"column":17,"nodeType":"312","endLine":515,"endColumn":57},{"ruleId":"310","severity":1,"message":"311","line":656,"column":25,"nodeType":"312","endLine":656,"endColumn":59},{"ruleId":"310","severity":1,"message":"311","line":683,"column":31,"nodeType":"312","endLine":683,"endColumn":68},{"ruleId":"310","severity":1,"message":"311","line":696,"column":25,"nodeType":"312","endLine":696,"endColumn":59},{"ruleId":"310","severity":1,"message":"311","line":723,"column":31,"nodeType":"312","endLine":723,"endColumn":68},{"ruleId":"310","severity":1,"message":"311","line":742,"column":25,"nodeType":"312","endLine":742,"endColumn":59},{"ruleId":"310","severity":1,"message":"311","line":770,"column":31,"nodeType":"312","endLine":770,"endColumn":68},{"ruleId":"290","severity":1,"message":"316","line":1,"column":38,"nodeType":"292","messageId":"293","endLine":1,"endColumn":46},{"ruleId":"290","severity":1,"message":"317","line":3,"column":8,"nodeType":"292","messageId":"293","endLine":3,"endColumn":13},{"ruleId":"290","severity":1,"message":"304","line":5,"column":8,"nodeType":"292","messageId":"293","endLine":5,"endColumn":21},{"ruleId":"290","severity":1,"message":"305","line":13,"column":10,"nodeType":"292","messageId":"293","endLine":13,"endColumn":17},{"ruleId":"306","severity":1,"message":"319","line":26,"column":6,"nodeType":"308","endLine":26,"endColumn":8,"suggestions":"347"},{"ruleId":"294","severity":1,"message":"338","line":4,"column":1,"nodeType":"296","endLine":19,"endColumn":3},{"ruleId":"290","severity":1,"message":"317","line":3,"column":8,"nodeType":"292","messageId":"293","endLine":3,"endColumn":13},"no-native-reassign",["348"],"no-negated-in-lhs",["349"],"no-unused-vars","'EditResource' is assigned a value but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Redirect' is defined but never used.","'CCardHeader' is defined but never used.","'CDataTable' is defined but never used.","'CPagination' is defined but never used.","'resourcesData' is defined but never used.","'loading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'callApiToFetchAllResources'. Either include it or remove the dependency array.","ArrayExpression",["350"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'callApiToFetchAllUsers'. Either include it or remove the dependency array.",["351"],"'search' is assigned a value but never used.","'Fragment' is defined but never used.","'CIcon' is defined but never used.","'titleCase' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'props'. Either include them or remove the dependency array.",["352"],["348"],["349"],"'CSelect' is defined but never used.","'selectedDate' is assigned a value but never used.","'CameraIcon' is defined but never used.","'Input' is defined but never used.","'Avatar' is defined but never used.","'resourceImage' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\+.","Literal","unnecessaryEscape",["353","354"],["355","356"],"'plusBit' is assigned a value but never used.","'ADD_RESOURCE_IMAGE_FAILED' is defined but never used.","'ADD_RESOURCE_IMAGE_SUCCESS' is defined but never used.","Assign arrow function to a variable before exporting as module default","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected",["357","358"],["359","360"],"'category' is assigned a value but never used.","'resourceData' is assigned a value but never used.",["361"],"no-global-assign","no-unsafe-negation",{"desc":"362","fix":"363"},{"desc":"364","fix":"365"},{"desc":"366","fix":"367"},{"messageId":"368","fix":"369","desc":"370"},{"messageId":"371","fix":"372","desc":"373"},{"messageId":"368","fix":"374","desc":"370"},{"messageId":"371","fix":"375","desc":"373"},{"messageId":"368","fix":"376","desc":"370"},{"messageId":"371","fix":"377","desc":"373"},{"messageId":"368","fix":"378","desc":"370"},{"messageId":"371","fix":"379","desc":"373"},{"desc":"366","fix":"380"},"Update the dependencies array to be: [callApiToFetchAllResources, search]",{"range":"381","text":"382"},"Update the dependencies array to be: [callApiToFetchAllUsers, search]",{"range":"383","text":"384"},"Update the dependencies array to be: [dispatch, props]",{"range":"385","text":"386"},"removeEscape",{"range":"387","text":"388"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"389","text":"390"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"391","text":"388"},{"range":"392","text":"390"},{"range":"393","text":"388"},{"range":"394","text":"390"},{"range":"395","text":"388"},{"range":"396","text":"390"},{"range":"397","text":"386"},[3554,3562],"[callApiToFetchAllResources, search]",[1892,1900],"[callApiToFetchAllUsers, search]",[904,906],"[dispatch, props]",[6957,6958],"",[6957,6957],"\\",[7000,7001],[7000,7000],[6474,6475],[6474,6474],[6517,6518],[6517,6517],[976,978]]