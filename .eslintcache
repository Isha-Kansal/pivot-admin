[{"/Volumes/DATA/Isha Kansal/reactjs/pivot-admin/src/index.js":"1","/Volumes/DATA/Isha Kansal/reactjs/pivot-admin/src/App.js":"2","/Volumes/DATA/Isha Kansal/reactjs/pivot-admin/src/reportWebVitals.js":"3","/Volumes/DATA/Isha Kansal/pivot-admin/src/index.js":"4","/Volumes/DATA/Isha Kansal/pivot-admin/src/App.js":"5","/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/TheLayout.js":"6","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/login/Login.js":"7","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/experts/AddExpert.js":"8","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/resources/AddResource.js":"9","/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/index.js":"10","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/experts/ExpertsFieldsData.js":"11","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/resources/ResourcesFieldsData.js":"12","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/store/action.js":"13","/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/TheContent.js":"14","/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/TheHeaderDropdown.js":"15","/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/TheHeader.js":"16","/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/TheSidebar.js":"17","/Volumes/DATA/Isha Kansal/pivot-admin/src/loader/index.js":"18","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/store/types.js":"19","/Volumes/DATA/Isha Kansal/pivot-admin/src/routes.js":"20","/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/logo.js":"21","/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/_nav.js":"22","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/resources/Resource.js":"23","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/experts/Experts.js":"24","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/experts/Expert.js":"25","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/resources/Resources.js":"26","/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/icons.js":"27","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/users/Users.js":"28","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/users/User.js":"29","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/planner/Planner.js":"30","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/users/UserPlanner.js":"31","/Volumes/DATA/Isha Kansal/pivot-admin/src/common/toolTip.js":"32","/Volumes/DATA/Isha Kansal/pivot-admin/src/common/commonModal.js":"33","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/users/planner/Network.js":"34","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/users/planner/Explore.js":"35","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/users/planner/Prepare.js":"36","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/users/planner/Apply.js":"37","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/users/planner/Learn.js":"38","/Volumes/DATA/Isha Kansal/pivot-admin/src/store/index.js":"39","/Volumes/DATA/Isha Kansal/pivot-admin/src/serviceWorker.js":"40","/Volumes/DATA/Isha Kansal/pivot-admin/src/store/sagas/index.js":"41","/Volumes/DATA/Isha Kansal/pivot-admin/src/store/reducers/index.js":"42","/Volumes/DATA/Isha Kansal/pivot-admin/src/polyfill.js":"43","/Volumes/DATA/Isha Kansal/pivot-admin/src/assets/icons/index.js":"44","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/store/reducer.js":"45","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/store/sagas.js":"46","/Volumes/DATA/Isha Kansal/pivot-admin/src/common/axios.js":"47","/Volumes/DATA/Isha Kansal/pivot-admin/src/config.js":"48","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/users/UserExpertUsage.js":"49","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/users/UserResourceUsage.js":"50","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/experts/ExpertUserUsage.js":"51","/Volumes/DATA/Isha Kansal/pivot-admin/src/common/search.js":"52"},{"size":500,"mtime":1612329326000,"results":"53","hashOfConfig":"54"},{"size":195,"mtime":1612330254000,"results":"55","hashOfConfig":"54"},{"size":362,"mtime":1612329326000,"results":"56","hashOfConfig":"54"},{"size":933,"mtime":1614839323000,"results":"57","hashOfConfig":"58"},{"size":2079,"mtime":1615528701000,"results":"59","hashOfConfig":"58"},{"size":837,"mtime":1615959898000,"results":"60","hashOfConfig":"58"},{"size":6087,"mtime":1615360779000,"results":"61","hashOfConfig":"58"},{"size":39070,"mtime":1616044478000,"results":"62","hashOfConfig":"58"},{"size":32906,"mtime":1616044530000,"results":"63","hashOfConfig":"58"},{"size":284,"mtime":1614839323000,"results":"64","hashOfConfig":"58"},{"size":13618,"mtime":1615888297000,"results":"65","hashOfConfig":"58"},{"size":1702,"mtime":1615977932000,"results":"66","hashOfConfig":"58"},{"size":3035,"mtime":1615360780000,"results":"67","hashOfConfig":"58"},{"size":1834,"mtime":1615876393000,"results":"68","hashOfConfig":"58"},{"size":492,"mtime":1615360779000,"results":"69","hashOfConfig":"58"},{"size":1169,"mtime":1615981035000,"results":"70","hashOfConfig":"58"},{"size":1109,"mtime":1614944842000,"results":"71","hashOfConfig":"58"},{"size":340,"mtime":1614839323000,"results":"72","hashOfConfig":"58"},{"size":3158,"mtime":1615360780000,"results":"73","hashOfConfig":"58"},{"size":2344,"mtime":1615781623000,"results":"74","hashOfConfig":"58"},{"size":9997,"mtime":1614839323000,"results":"75","hashOfConfig":"58"},{"size":686,"mtime":1615360779000,"results":"76","hashOfConfig":"58"},{"size":6142,"mtime":1615983836000,"results":"77","hashOfConfig":"58"},{"size":11320,"mtime":1615360779000,"results":"78","hashOfConfig":"58"},{"size":10300,"mtime":1615781623000,"results":"79","hashOfConfig":"58"},{"size":8811,"mtime":1615983348000,"results":"80","hashOfConfig":"58"},{"size":7216,"mtime":1614944842000,"results":"81","hashOfConfig":"58"},{"size":9142,"mtime":1615808659000,"results":"82","hashOfConfig":"58"},{"size":9377,"mtime":1615781487000,"results":"83","hashOfConfig":"58"},{"size":706,"mtime":1614944842000,"results":"84","hashOfConfig":"58"},{"size":1846,"mtime":1614944842000,"results":"85","hashOfConfig":"58"},{"size":424,"mtime":1614839323000,"results":"86","hashOfConfig":"58"},{"size":1918,"mtime":1614944842000,"results":"87","hashOfConfig":"58"},{"size":6940,"mtime":1614944842000,"results":"88","hashOfConfig":"58"},{"size":8147,"mtime":1616044015000,"results":"89","hashOfConfig":"58"},{"size":3985,"mtime":1614944842000,"results":"90","hashOfConfig":"58"},{"size":2327,"mtime":1614944842000,"results":"91","hashOfConfig":"58"},{"size":5187,"mtime":1614944842000,"results":"92","hashOfConfig":"58"},{"size":774,"mtime":1614839323000,"results":"93","hashOfConfig":"58"},{"size":4686,"mtime":1614839323000,"results":"94","hashOfConfig":"58"},{"size":179,"mtime":1614839323000,"results":"95","hashOfConfig":"58"},{"size":186,"mtime":1614839323000,"results":"96","hashOfConfig":"58"},{"size":1895,"mtime":1614839323000,"results":"97","hashOfConfig":"58"},{"size":3924,"mtime":1614839323000,"results":"98","hashOfConfig":"58"},{"size":7013,"mtime":1615360780000,"results":"99","hashOfConfig":"58"},{"size":10085,"mtime":1615360780000,"results":"100","hashOfConfig":"58"},{"size":1357,"mtime":1615973953000,"results":"101","hashOfConfig":"58"},{"size":172,"mtime":1615890852000,"results":"102","hashOfConfig":"58"},{"size":6191,"mtime":1615957281000,"results":"103","hashOfConfig":"58"},{"size":6102,"mtime":1615877665000,"results":"104","hashOfConfig":"58"},{"size":6356,"mtime":1615957241000,"results":"105","hashOfConfig":"58"},{"size":495,"mtime":1616041344000,"results":"106","hashOfConfig":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"161ocxv",{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"z7vibx",{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"124"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"208","messages":"209","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"210","messages":"211","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Volumes/DATA/Isha Kansal/reactjs/pivot-admin/src/index.js",[],"/Volumes/DATA/Isha Kansal/reactjs/pivot-admin/src/App.js",[],"/Volumes/DATA/Isha Kansal/reactjs/pivot-admin/src/reportWebVitals.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/index.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/App.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/TheLayout.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/views/login/Login.js",["214"],"/Volumes/DATA/Isha Kansal/pivot-admin/src/views/experts/AddExpert.js",["215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232"],"import React, { Component } from \"react\";\n\nimport ADD from \"../../assets/icons/add.svg\";\nimport {\n  addExpert,\n  addImage,\n  fetchOneExpert,\n  editExpert,\n  fetchService,\n} from \"../store/action\";\nimport moment from \"moment-timezone\";\nimport { connect } from \"react-redux\";\nimport { NotificationManager } from \"react-notifications\";\nimport { bindActionCreators } from \"redux\";\nimport { withRouter } from \"react-router-dom\";\nimport BackArrow from \"../../assets/icons/left-arrow.svg\";\nimport Loader from \"../../loader\";\nimport CANCEL from \"../../assets/icons/cancel.svg\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormGroup,\n  CTextarea,\n  CInput,\n  CLabel,\n  CRow,\n} from \"@coreui/react\";\n\nimport Select from \"react-select\";\nimport CameraIcon from \"../../assets/icons/photo-camera.svg\";\nimport { Input, Row, Col } from \"reactstrap\";\nimport CIcon from \"@coreui/icons-react\";\nimport Avatar from \"../../assets/icons/avatar.png\";\nimport {\n  optionsFields,\n  optionsGender,\n  optionsCountry,\n  optionsExpertise,\n  optionsRole,\n  optionsIndustry,\n  optionsSkill,\n  optionsUnit,\n} from \"./ExpertsFieldsData\";\n\nclass AddExpert extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      first_name: \"\",\n      last_name: \"\",\n      email: \"\",\n      contact: \"\",\n      gender: \"\",\n      country: \"\",\n      designation: \"\",\n      expertise: [],\n      loadiing: false,\n      role: \"\",\n      industry: \"\",\n      fields: [],\n      about: [],\n      pricing: [],\n      errorType: \"\",\n      errorText: \"\",\n      selectedCalendar: null,\n      expertImage: null,\n      selectedDate: new Date(),\n      linkedIn: \"\",\n      calendarId: null,\n      calendarOptions: [],\n      serviceList: [],\n      unit: \"\",\n    };\n  }\n\n  getCalenderList = (callback) => {\n    this.props.fetchService(\n      \"expert/services\",\n\n      (value) => {\n        if (value.status === 200) {\n          const calendarOptions = (value.data.services || []).map(\n            (service) => ({\n              value: service.calendar_id,\n              label: service.name,\n            })\n          );\n\n          const serviceList = value.data.services || [];\n          this.setState(\n            {\n              calendarOptions,\n              serviceList,\n              loading: false,\n              // selectedCalendar: {\n              //   value: this.state.calendarId,\n              //   label: this.state.calendarId,\n              // },\n            },\n            () => {\n              if (callback) {\n                callback();\n              }\n            }\n          );\n        }\n      }\n    );\n  };\n  componentDidMount() {\n    const expert_id = this.props && this.props.match.params.id;\n\n    if (expert_id) {\n      this.callApiToFetchExpertDetails();\n    } else {\n      this.getCalenderList();\n    }\n  }\n\n  callApiToFetchExpertDetails = () => {\n    const expert_id = this.props && this.props.match.params.id;\n    this.setState({\n      loadiing: true,\n    });\n    this.props.fetchOneExpert(`expert?id=${expert_id}`, (value) => {\n      const {\n        first_name,\n        last_name,\n        gender,\n        country,\n        designation,\n        expert_fields,\n        current_role,\n        industry,\n        skills,\n        email,\n        contact_no,\n        linkedIn,\n        calendar_id,\n        price,\n        rates,\n        info,\n        profile_pic,\n      } = value.data.expert;\n\n      const infoData = info.map((el) => {\n        return { value: el };\n      });\n\n      this.setState(\n        {\n          loadiing: false,\n          first_name: first_name.trim(),\n          last_name: last_name.trim(),\n          gender,\n          country,\n          designation,\n          fields: expert_fields,\n          role: current_role,\n          industry,\n          email,\n          contact: contact_no,\n          linkedIn,\n          about: infoData,\n          skill: (skills && skills[0] && skills[0].label) || \"\",\n          expertise: skills && skills[0] && skills[0].values,\n          calendarId: calendar_id,\n          expertImage: profile_pic,\n        },\n        () => {\n          this.getCalenderList(() => {\n            const { serviceList, calendarId, calendarOptions } = this.state;\n\n            const selectedCalendar = (calendarOptions || []).find(\n              (service) => service.value === calendarId\n            );\n\n            this.setState({\n              selectedCalendar: selectedCalendar,\n              pricing: rates || [],\n            });\n          });\n        }\n      );\n    });\n  };\n  uploadImage = (event) => {\n    this.clearError();\n    if (event.target.files && event.target.files[0]) {\n      var reader = new FileReader();\n      reader.onloadend = function () {\n        this.callApiAddImage((reader && reader.result) || \"\");\n\n        this.setState({\n          expertImage: reader.result,\n        });\n      }.bind(this);\n      reader.readAsDataURL(event.target.files[0]);\n    }\n  };\n  errorShow = (type) => {\n    const { errorType, errorText } = this.state;\n    return errorType === type ? <p>{errorText}</p> : null;\n  };\n  clearError = () => {\n    this.setState({\n      errorType: \"\",\n      errorText: \"\",\n    });\n  };\n  inputHandler = (e) => {\n    this.clearError();\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  handleUnit = (data, type, index) => {\n    let pricingToUpdate = this.state.pricing[index];\n    const newArray = [...this.state.pricing];\n    pricingToUpdate = {\n      ...pricingToUpdate,\n      unit: data.value,\n    };\n    newArray[index] = pricingToUpdate;\n    this.clearError();\n    this.setState({ pricing: newArray });\n  };\n\n  handleChange = (data, type) => {\n    const { unit } = this.state;\n    this.clearError();\n\n    if (type === \"fields\") {\n      let arr;\n      // if (data.length <= 3) {\n      arr = data.map((el) => {\n        return el.value;\n      });\n      this.setState({\n        fields: arr,\n      });\n      // }\n      // else {\n      //   NotificationManager.info(\"You can select upto 3 only\", \"\", 1000);\n      // }\n    }\n    if (type === \"gender\") {\n      this.setState({\n        gender: data.value,\n      });\n    }\n\n    if (type === \"country\") {\n      this.setState({\n        country: data.value,\n      });\n    }\n    if (type === \"calendarId\") {\n      const { serviceList } = this.state;\n\n      const selectedService = serviceList.find(\n        (item) => item.calendar_id === data.value\n      );\n\n      const pricingVal = (selectedService.services || []).map((data) => ({\n        id: data.id,\n        serviceName: data.name,\n        value: \"\",\n        unit: \"\",\n      }));\n\n      this.setState({\n        selectedCalendar: data,\n        pricing: pricingVal,\n      });\n    }\n    if (type === \"designation\") {\n      this.setState({\n        designation: data.value,\n      });\n    }\n    if (type === \"expertise\") {\n      let arr;\n      // if (data.length <= 3) {\n      arr = data.map((el) => {\n        return el.value;\n      });\n      this.setState({\n        expertise: arr,\n      });\n      // }\n      // else {\n      //   NotificationManager.info(\"You can select upto 3 only\", \"\", 1000);\n      // }\n    }\n    if (type === \"role\") {\n      this.setState({\n        role: data.value,\n      });\n    }\n\n    if (type === \"industry\") {\n      if (data === null) {\n        this.setState({\n          industry: \"\",\n        });\n      } else {\n        this.setState({\n          industry: data.value,\n        });\n      }\n    }\n\n    if (type === \"skill\") {\n      this.setState({\n        skill: data.value,\n      });\n    }\n  };\n  validateEmail = (email) => {\n    var re = /^(([^<>()\\]\\\\.,;:\\s@“]+(\\.[^<>()\\]\\\\.,;:\\s@“]+)*)|(“.+“))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    return re.test(String(email).toLowerCase());\n  };\n  onSubmit = (e) => {\n    const expert_id = this.props && this.props.match.params.id;\n\n    const {\n      first_name,\n      last_name,\n      email,\n      contact,\n      gender,\n      country,\n      designation,\n      selectedCalendar,\n      role,\n      industry,\n      expertise,\n      fields,\n      about,\n      pricing,\n\n      linkedIn,\n      skill,\n    } = this.state;\n\n    if (first_name === \"\") {\n      this.setState({\n        errorType: \"first_name\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Name should not be empty</b>\n          </span>\n        ),\n      });\n      return;\n    }\n    if (first_name !== \"\") {\n      let filter = /^[a-zA-Z0-9]+([-_\\s]{1}[a-zA-Z0-9]+)*$/;\n\n      if (!filter.test(first_name)) {\n        this.setState({\n          errorType: \"first_name\",\n          errorText: (\n            <span className=\"text-danger\">\n              <b>\n                {\" \"}\n                Name should be combination of alphanumeric text, underscore,\n                space and hyphen\n              </b>\n            </span>\n          ),\n        });\n        return;\n      }\n    }\n\n    if (last_name === \"\") {\n      this.setState({\n        errorType: \"last_name\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Name should not be empty</b>\n          </span>\n        ),\n      });\n      return;\n    }\n    if (last_name !== \"\") {\n      let filter = /^[a-zA-Z0-9]+([-_\\s]{1}[a-zA-Z0-9]+)*$/;\n\n      if (!filter.test(last_name)) {\n        this.setState({\n          errorType: \"last_name\",\n          errorText: (\n            <span className=\"text-danger\">\n              <b>\n                {\" \"}\n                Name should be combination of alphanumeric text, underscore,\n                space and hyphen\n              </b>\n            </span>\n          ),\n        });\n        return;\n      }\n    }\n\n    if (email === \"\") {\n      this.setState({\n        errorType: \"email\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Email Id is empty</b>\n          </span>\n        ),\n      });\n      return;\n    }\n    if (!this.validateEmail(email)) {\n      this.setState({\n        errorType: \"email\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Invalid email</b>\n          </span>\n        ),\n      });\n      return;\n    }\n\n    // if (contact === \"\") {\n    //   this.setState({\n    //     errorType: \"contact\",\n    //     errorText: <span className=\"text-danger\">Mobile number is empty</span>,\n    //     loading: false,\n    //   });\n\n    //   return;\n    // }\n\n    if (contact !== \"\") {\n      if (contact.length < 10 || contact.length > 10) {\n        this.setState({\n          errorType: \"contact\",\n          errorText: (\n            <span className=\"text-danger\">\n              {\" \"}\n              <b>Phone number should be of length 10</b>\n            </span>\n          ),\n          loading: false,\n        });\n\n        return;\n      }\n    }\n\n    if (contact !== \"\") {\n      let filter = /^\\d{10}$/;\n      if (!filter.test(contact)) {\n        this.setState({\n          errorType: \"contact\",\n          errorText: (\n            <span className=\"text-danger\">\n              {\" \"}\n              <b>Please enter valid phone number</b>\n            </span>\n          ),\n          loading: false,\n        });\n\n        return;\n      }\n    }\n\n    if (gender === \"\") {\n      this.setState({\n        errorType: \"gender\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Select your gender</b>\n          </span>\n        ),\n      });\n      return;\n    }\n    if (country === \"\") {\n      this.setState({\n        errorType: \"country\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Select your country</b>\n          </span>\n        ),\n      });\n      return;\n    }\n\n    if (designation === \"\") {\n      this.setState({\n        errorType: \"designation\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Designation should not be empty</b>\n          </span>\n        ),\n      });\n      return;\n    }\n\n    if (fields.length === 0) {\n      this.setState({\n        errorType: \"fields\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Select your fields</b>\n          </span>\n        ),\n      });\n      return;\n    }\n\n    if (role === \"\") {\n      this.setState({\n        errorType: \"role\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Select your current role</b>\n          </span>\n        ),\n      });\n      return;\n    }\n    // if (industry === \"\") {\n    //   this.setState({\n    //     errorType: \"industry\",\n    //     errorText: (\n    //       <span className=\"text-danger\">\n    //         <b>Select your industry</b>\n    //       </span>\n    //     ),\n    //   });\n    //   return;\n    // }\n\n    if (linkedIn === \"\") {\n      this.setState({\n        errorType: \"linkedIn\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Please enter linkedIn link</b>\n          </span>\n        ),\n      });\n      return;\n    }\n    if (linkedIn !== \"\") {\n      let filter = /(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/g;\n\n      if (!filter.test(linkedIn)) {\n        this.setState({\n          errorType: \"linkedIn\",\n          errorText: (\n            <span className=\"text-danger\">\n              <b> Please enter valid linkedIn link</b>\n            </span>\n          ),\n        });\n        return;\n      }\n    }\n    if (selectedCalendar === null || !selectedCalendar.value) {\n      this.setState({\n        errorType: \"selectedCalendar\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Please select calendar name</b>\n          </span>\n        ),\n      });\n      return;\n    }\n\n    if (pricing && pricing.length !== 0 && pricing.find((i) => i.value == \"\")) {\n      this.setState({\n        errorType: \"pricing\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Please add price and unit</b>\n          </span>\n        ),\n      });\n      return;\n    }\n    if (pricing && pricing.length !== 0 && pricing.find((i) => i.unit == \"\")) {\n      this.setState({\n        errorType: \"pricing\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Please select unit</b>\n          </span>\n        ),\n      });\n      return;\n    }\n\n    if (skill === undefined) {\n      this.setState({\n        errorType: \"skill\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Select your skill</b>\n          </span>\n        ),\n      });\n      return;\n    }\n\n    if (expertise.length === 0) {\n      this.setState({\n        errorType: \"expertise\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Please enter your expert areas</b>\n          </span>\n        ),\n      });\n      return;\n    }\n    if (about.length === 0) {\n      this.setState({\n        errorType: \"about\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Please add some information</b>\n          </span>\n        ),\n      });\n      return;\n    }\n    if (about.length === 1 && about[0].value === \"\") {\n      this.setState({\n        errorType: \"about\",\n        errorText: (\n          <span className=\"text-danger\">\n            <b>Please add some information</b>\n          </span>\n        ),\n      });\n      return;\n    }\n\n    if (!expert_id) {\n      this.callApiAddExpert();\n    } else {\n      this.callApiEditExpert();\n    }\n  };\n\n  callApiEditExpert = () => {\n    const expert_id = this.props && this.props.match.params.id;\n    const {\n      first_name,\n      last_name,\n      gender,\n      country,\n      designation,\n      fields,\n      role,\n      industry,\n      selectedCalendar,\n      profile_pic,\n      linkedIn,\n      about,\n      pricing,\n      skill,\n      expertise,\n      expertImage,\n      email,\n      contact,\n    } = this.state;\n    let aboutData = about.map((el) => {\n      return el.value;\n    });\n    let skillObj = [{ label: skill, values: expertise }];\n    const timeZone = moment.tz.guess(true);\n\n    let obj = {\n      id: expert_id,\n      first_name,\n      last_name,\n      gender,\n      country,\n      designation,\n      fields,\n      role,\n      industry,\n      skills: skillObj,\n      rates: pricing,\n      email,\n      contact_no: contact ? contact : \"\",\n      linkedIn,\n      calendar_id: selectedCalendar.value,\n      // profile_pic,\n      info: aboutData,\n      time_zone: timeZone,\n    };\n    if (expertImage) {\n      obj.profile_pic = expertImage;\n    }\n\n    this.setState({\n      loadiing: true,\n    });\n\n    this.props.editExpert(\"expert/update-profile\", obj, (value) => {\n      if (value.status === 200) {\n        NotificationManager.success(\"Expert edit successfully\", \"\", 1000);\n        this.props.history.push(\"/experts\");\n        this.setState({\n          loadiing: false,\n        });\n      }\n    });\n  };\n\n  callApiAddExpert = () => {\n    const {\n      first_name,\n      last_name,\n      email,\n      contact,\n      gender,\n      country,\n      designation,\n      fields,\n      role,\n      industry,\n      skill,\n      expertise,\n\n      linkedIn,\n      about,\n      pricing,\n      expertImage,\n      selectedCalendar,\n    } = this.state;\n    let aboutData = about.map((el) => {\n      return el.value;\n    });\n    const timeZone = moment.tz.guess(true);\n    let skillObj = [{ label: skill, values: expertise }];\n\n    let obj = {\n      first_name,\n      last_name,\n      gender,\n      country,\n      role,\n      industry,\n      skills: skillObj,\n      fields,\n      info: aboutData,\n      linkedIn,\n      designation,\n\n      rates: pricing,\n      time_zone: timeZone,\n      email,\n      contact_no: contact ? contact : \"\",\n      calendar_id: selectedCalendar.value,\n    };\n    if (expertImage) {\n      obj.profile_pic = expertImage;\n    }\n\n    this.setState({\n      loadiing: true,\n    });\n    this.props.addExpert(\"expert/create\", obj, (value) => {\n      if (value.status === 200) {\n        NotificationManager.success(\"Expert added successfully\", \"\", 1000);\n        this.props.history.push(\"/experts\");\n        this.setState({\n          loadiing: false,\n        });\n      }\n    });\n  };\n\n  callApiAddImage = (base64) => {\n    this.setState({\n      loadiing: true,\n    });\n\n    let obj = {\n      base64,\n    };\n    this.props.addImage(\"common/upload-image\", obj, (value) => {\n      if (value.status === 200) {\n        this.setState({\n          expertImage: value.data.url,\n          loadiing: false,\n        });\n      }\n    });\n  };\n  resetState = (e) => {\n    e.preventDefault();\n    this.setState({\n      first_name: \"\",\n      last_name: \"\",\n      email: \"\",\n      contact: \"\",\n      gender: \"\",\n      country: \"\",\n      designation: \"\",\n      expertise: [],\n      skill: \"\",\n      role: \"\",\n      industry: \"\",\n      fields: [],\n      about: [],\n      pricing: [],\n      errorType: \"\",\n      errorText: \"\",\n\n      linkedIn: \"\",\n      selectedCalendar: null,\n      calendarId: \"\",\n      selectedDate: new Date(),\n    });\n  };\n  handleBack = (e) => {\n    e.preventDefault();\n    this.props.history.push(\"/experts\");\n  };\n  onChange = (date) => {\n    this.setState({\n      selectedDate: date,\n    });\n  };\n  handlePlusButton = (e, type) => {\n    const { about, pricing } = this.state;\n\n    e.preventDefault();\n    e.stopPropagation();\n    if (type === \"about\") {\n      const newArr = [...about];\n      let newAbout = {\n        value: \"\",\n      };\n      newArr.push(newAbout);\n      this.setState({\n        about: newArr,\n      });\n    }\n    if (type === \"pricing\") {\n      const newArr = [...pricing];\n      let newPricing = {\n        value: \"\",\n      };\n      newArr.push(newPricing);\n      this.setState({\n        pricing: newArr,\n      });\n    }\n  };\n  inputAbout = (e, index) => {\n    let aboutToUpdate = this.state.about[index];\n    const newArray = [...this.state.about];\n    aboutToUpdate = {\n      ...aboutToUpdate,\n      value: e.target.value,\n    };\n\n    newArray[index] = aboutToUpdate;\n\n    this.clearError();\n    this.setState({ [e.target.name]: e.target.value, about: newArray });\n  };\n  inputPricing = (e, index) => {\n    let pricingToUpdate = this.state.pricing[index];\n    const newArray = [...this.state.pricing];\n    pricingToUpdate = {\n      ...pricingToUpdate,\n      value: e.target.value,\n    };\n\n    newArray[index] = pricingToUpdate;\n\n    this.clearError();\n    this.setState({ [e.target.name]: e.target.value, pricing: newArray });\n  };\n  handleCancel = (e, index, type) => {\n    e.preventDefault();\n    e.stopPropagation();\n    const { about, pricing } = this.state;\n    if (type === \"about\") {\n      const newArr = [...about];\n      newArr.splice(index, 1);\n      this.setState({\n        about: newArr,\n      });\n    }\n    if (type === \"pricing\") {\n      const newArr = [...pricing];\n      newArr.splice(index, 1);\n      this.setState({\n        pricing: newArr,\n      });\n    }\n  };\n  render() {\n    const expert_id = this.props && this.props.match.params.id;\n    const {\n      first_name,\n      last_name,\n      loadiing,\n      designation,\n      country,\n      expertise,\n      about,\n      fields,\n      gender,\n      expertImage,\n      role,\n      industry,\n      email,\n      contact,\n\n      selectedDate,\n      linkedIn,\n      selectedCalendar,\n      skill,\n      pricing,\n      calendarOptions,\n      unit,\n    } = this.state;\n\n    let fieldsVal = optionsFields.filter((item) => {\n      return fields.includes(item.label);\n    });\n    let expertiseVal = optionsExpertise.filter((item) => {\n      return expertise.includes(item.label);\n    });\n\n    return (\n      <CRow>\n        <CCol xs=\"12\" sm=\"12\">\n          <CCard className=\"expert-card\">\n            {loadiing && <Loader />}\n            <CCardHeader>\n              <CButton onClick={this.handleBack} className=\"backBtn\">\n                <img src={BackArrow} className=\"mr-2\" /> Back\n              </CButton>\n              <div className=\"update-profile-image\">\n                <img\n                  id=\"output\"\n                  src={expertImage ? expertImage : Avatar}\n                  alt=\"profile\"\n                  className=\"profile negative-margin\"\n                />\n                <div className=\"upload-box\">\n                  <Input\n                    type=\"file\"\n                    accept=\"image/*\"\n                    id=\"f-upload\"\n                    name=\"myImage\"\n                    onChange={this.uploadImage}\n                    className=\"d-none\"\n                  />\n                  <label htmlFor=\"f-upload\" class=\"custom-file-upload\">\n                    <div className=\"camera-btn\" onClick={this.uploadImage}>\n                      <img src={CameraIcon} alt=\"camera\" />\n                    </div>\n                  </label>\n                </div>\n              </div>\n            </CCardHeader>\n            <CCardBody>\n              <CForm\n                action=\"\"\n                method=\"post\"\n                encType=\"multipart/form-data\"\n                className=\"form-horizontal\"\n              >\n                <CFormGroup row className=\"my-0\">\n                  <CCol xs=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"first_name\">First Name</CLabel>\n                      <CLabel className=\"text-danger\">*</CLabel>\n                      <CInput\n                        id=\"first_name\"\n                        name=\"first_name\"\n                        placeholder=\"First Name\"\n                        onChange={this.inputHandler}\n                        value={first_name}\n                      />\n                      {this.errorShow(\"first_name\")}\n                    </CFormGroup>\n                  </CCol>\n                  <CCol xs=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"last_name\">Last Name</CLabel>\n                      <CLabel className=\"text-danger\">*</CLabel>\n                      <CInput\n                        id=\"last_name\"\n                        name=\"last_name\"\n                        placeholder=\"Last Name\"\n                        onChange={this.inputHandler}\n                        value={last_name}\n                      />\n                      {this.errorShow(\"last_name\")}\n                    </CFormGroup>\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row className=\"my-0\">\n                  <CCol xs=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"email\">Email</CLabel>\n                      <CLabel className=\"text-danger\">*</CLabel>\n                      <CInput\n                        type=\"email\"\n                        id=\"email\"\n                        name=\"email\"\n                        placeholder=\"Email\"\n                        onChange={this.inputHandler}\n                        value={email}\n                        disabled={expert_id}\n                      />\n                      {this.errorShow(\"email\")}\n                    </CFormGroup>\n                  </CCol>\n                  <CCol xs=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"contact\">Contact</CLabel>\n                      <CInput\n                        id=\"contact\"\n                        name=\"contact\"\n                        placeholder=\"Contact\"\n                        onChange={this.inputHandler}\n                        value={contact}\n                      />\n                      {this.errorShow(\"contact\")}\n                    </CFormGroup>\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row className=\"my-0\">\n                  <CCol xs=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"gender\">Gender</CLabel>\n                      <CLabel className=\"text-danger\">*</CLabel>\n                      <Select\n                        custom\n                        placeholder=\"Select gender\"\n                        name=\"gender\"\n                        id=\"gender\"\n                        onChange={(data) => this.handleChange(data, \"gender\")}\n                        value={gender ? { value: gender, label: gender } : null}\n                        options={optionsGender}\n                      ></Select>\n                      {this.errorShow(\"gender\")}\n                    </CFormGroup>\n                  </CCol>\n                  <CCol xs=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"country\">Country</CLabel>\n                      <CLabel className=\"text-danger\">*</CLabel>\n                      <Select\n                        custom\n                        name=\"country\"\n                        id=\"country\"\n                        name=\"country\"\n                        placeholder=\"Select Country\"\n                        onChange={(data) => this.handleChange(data, \"country\")}\n                        value={\n                          country ? { value: country, label: country } : null\n                        }\n                        options={optionsCountry}\n                      ></Select>\n                      {this.errorShow(\"country\")}\n                    </CFormGroup>\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row className=\"my-0\">\n                  <CCol xs=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"designation\">Designation</CLabel>\n                      <CLabel className=\"text-danger\">*</CLabel>\n\n                      <CInput\n                        id=\"designation\"\n                        name=\"designation\"\n                        placeholder=\"Designation\"\n                        onChange={this.inputHandler}\n                        value={designation}\n                      />\n                      {this.errorShow(\"designation\")}\n                    </CFormGroup>\n                  </CCol>\n\n                  <CCol xs=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"fields\">Fields</CLabel>\n                      <CLabel className=\"text-danger\">*</CLabel>\n\n                      <Select\n                        isMulti\n                        custom\n                        placeholder=\"Select Fields\"\n                        id=\"fields\"\n                        name=\"fields\"\n                        onChange={(data) => this.handleChange(data, \"fields\")}\n                        value={fieldsVal}\n                        options={optionsFields}\n                      ></Select>\n                      {this.errorShow(\"fields\")}\n                    </CFormGroup>\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row className=\"my-0\">\n                  <CCol xs=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"role\">Current Role</CLabel>\n                      <CLabel className=\"text-danger\">*</CLabel>\n\n                      <Select\n                        custom\n                        id=\"role\"\n                        placeholder=\"Select Role\"\n                        name=\"role\"\n                        onChange={(data) => this.handleChange(data, \"role\")}\n                        value={role ? { value: role, label: role } : null}\n                        options={optionsRole}\n                      ></Select>\n                      {this.errorShow(\"role\")}\n                    </CFormGroup>\n                  </CCol>\n\n                  <CCol xs=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"industry\">Current Industry</CLabel>\n\n                      <Select\n                        custom\n                        id=\"industry\"\n                        name=\"industry\"\n                        placeholder=\"Select Industry\"\n                        onChange={(data) => this.handleChange(data, \"industry\")}\n                        value={\n                          industry ? { value: industry, label: industry } : null\n                        }\n                        options={optionsIndustry}\n                        isClearable\n                      ></Select>\n                      {this.errorShow(\"industry\")}\n                    </CFormGroup>\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row className=\"my-0\">\n                  <CCol xs=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"linkedIn\">LinkedIn Link</CLabel>\n                      <CLabel className=\"text-danger\">*</CLabel>\n                      <CInput\n                        name=\"linkedIn\"\n                        id=\"linkedIn\"\n                        onChange={this.inputHandler}\n                        placeholder=\"LinkedIn Link\"\n                        value={linkedIn}\n                      />\n                      {this.errorShow(\"linkedIn\")}\n                    </CFormGroup>\n                  </CCol>\n                  <CCol xs=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"selectedCalendar\">Calendar Name</CLabel>\n                      <CLabel className=\"text-danger\">*</CLabel>\n                      <Select\n                        custom\n                        name=\"selectedCalendar\"\n                        id=\"selectedCalendar\"\n                        name=\"selectedCalendar\"\n                        placeholder=\"Select Calendar Name\"\n                        onChange={(data) =>\n                          this.handleChange(data, \"calendarId\")\n                        }\n                        value={selectedCalendar}\n                        options={calendarOptions}\n                      ></Select>\n                      {this.errorShow(\"selectedCalendar\")}\n                    </CFormGroup>\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row className=\"my-0\">\n                  {pricing && pricing.length > 0 && (\n                    <CCol xs=\"12\">\n                      <CFormGroup>\n                        <CLabel htmlFor=\"pricing\">Pricing</CLabel>\n                        <CLabel className=\"text-danger\">*</CLabel>\n                        <div class=\"d-flex justify-content-between add-list\">\n                          <CLabel htmlFor=\"pricing\">\n                            Enter Price of each service\n                          </CLabel>\n                        </div>\n\n                        {pricing &&\n                          pricing.length > 0 &&\n                          pricing.map((el, index) => {\n                            return (\n                              <div className=\"d-flex align-items-center mb-2 \">\n                                {el.serviceName}\n                                <div className=\"d-flex w-100\">\n                                  <CInput\n                                    type=\"number\"\n                                    id={`pricing${el.id}`}\n                                    name={`pricing${el.id}`}\n                                    placeholder=\"Price\"\n                                    autoComplete={`pricing${el.id}`}\n                                    onChange={(e) => {\n                                      this.inputPricing(e, index);\n                                    }}\n                                    value={el.value}\n                                    className=\"w-50 mr-4\"\n                                  />\n                                  <Select\n                                    className=\"w-50\"\n                                    custom\n                                    name={`pricing${el.unit}`}\n                                    id={`pricing${el.unit}`}\n                                    placeholder=\"Select Unit\"\n                                    onChange={(data) =>\n                                      this.handleUnit(data, \"unit\", index)\n                                    }\n                                    value={\n                                      el.unit\n                                        ? { value: el.unit, label: el.unit }\n                                        : null\n                                    }\n                                    options={optionsUnit}\n                                  ></Select>\n                                </div>\n                              </div>\n                            );\n                          })}\n                        {this.errorShow(\"pricing\")}\n                      </CFormGroup>\n                    </CCol>\n                  )}\n                </CFormGroup>\n                <CFormGroup row className=\"my-0\">\n                  <CCol xs=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"skill\">Skill</CLabel>\n                      <CLabel className=\"text-danger\">*</CLabel>\n                      <Select\n                        custom\n                        id=\"skill\"\n                        placeholder=\"Select Skill\"\n                        name=\"skill\"\n                        onChange={(data) => this.handleChange(data, \"skill\")}\n                        value={skill ? { value: skill, label: skill } : null}\n                        options={optionsSkill}\n                      ></Select>\n                      {this.errorShow(\"skill\")}\n                    </CFormGroup>\n                  </CCol>\n                  <CCol xs=\"6\">\n                    {skill && (\n                      <CFormGroup>\n                        <CLabel htmlFor=\"expertise\">{skill}</CLabel>\n                        <CLabel className=\"text-danger\">*</CLabel>\n                        <Select\n                          isMulti\n                          custom\n                          id=\"expertise\"\n                          placeholder=\"Select areas of your expertise/specialities\"\n                          name=\"expertise\"\n                          value={expertiseVal}\n                          options={optionsExpertise}\n                          onChange={(e) => this.handleChange(e, \"expertise\")}\n                        ></Select>\n                        {this.errorShow(\"expertise\")}\n                      </CFormGroup>\n                    )}\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row className=\"my-0\">\n                  <CCol xs=\"12\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"about\">About</CLabel>\n                      <CLabel className=\"text-danger\">*</CLabel>\n                      <div\n                        onClick={(e) => this.handlePlusButton(e, \"about\")}\n                        class=\"d-flex justify-content-between add-list\"\n                      >\n                        <CLabel htmlFor=\"pros\">Add Information</CLabel>\n                        <button className=\"icon\">\n                          <img src={ADD} className=\"ml-3\" />\n                        </button>\n                      </div>\n                      {this.errorShow(\"about\")}\n                      {about &&\n                        about.length > 0 &&\n                        about.map((el, index) => {\n                          return (\n                            <div className=\"d-flex align-items-center mb-2 \">\n                              <CTextarea\n                                rows=\"6\"\n                                id={`about${index}`}\n                                name={`about${index}`}\n                                placeholder={`${index + 1}.`}\n                                autoComplete={`about${index}`}\n                                onChange={(e) => {\n                                  this.inputAbout(e, index);\n                                }}\n                                value={el.value}\n                              />\n                              <button\n                                className=\"icon\"\n                                onClick={(e) =>\n                                  this.handleCancel(e, index, \"about\")\n                                }\n                              >\n                                <img src={CANCEL} className=\"ml-3\" />\n                              </button>\n                            </div>\n                          );\n                        })}\n                    </CFormGroup>\n                  </CCol>\n                </CFormGroup>\n              </CForm>\n            </CCardBody>\n            <CCardFooter>\n              <div className=\"text-right\">\n                <CButton\n                  type=\"submit\"\n                  size=\"sm\"\n                  color=\"primary\"\n                  onClick={this.onSubmit}\n                >\n                  <CIcon name=\"cil-scrubber\" /> Submit\n                </CButton>\n                <CButton\n                  type=\"reset\"\n                  size=\"sm\"\n                  color=\"danger\"\n                  onClick={this.resetState}\n                  className=\"ml-2\"\n                >\n                  <CIcon name=\"cil-ban\" /> Reset\n                </CButton>\n              </div>\n            </CCardFooter>\n          </CCard>\n        </CCol>\n      </CRow>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {};\n};\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    {\n      addExpert,\n      addImage,\n      fetchOneExpert,\n      editExpert,\n      fetchService,\n    },\n    dispatch\n  );\n};\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(AddExpert)\n);\n",["233","234"],"/Volumes/DATA/Isha Kansal/pivot-admin/src/views/resources/AddResource.js",["235","236","237","238","239","240","241","242"],"/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/index.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/views/experts/ExpertsFieldsData.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/views/resources/ResourcesFieldsData.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/views/store/action.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/TheContent.js",["243"],"/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/TheHeaderDropdown.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/TheHeader.js",["244","245"],"/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/TheSidebar.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/loader/index.js",["246","247"],"/Volumes/DATA/Isha Kansal/pivot-admin/src/views/store/types.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/routes.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/logo.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/_nav.js",["248"],"/Volumes/DATA/Isha Kansal/pivot-admin/src/views/resources/Resource.js",["249"],"/Volumes/DATA/Isha Kansal/pivot-admin/src/views/experts/Experts.js",["250","251","252","253","254","255"],"/Volumes/DATA/Isha Kansal/pivot-admin/src/views/experts/Expert.js",["256","257"],"/Volumes/DATA/Isha Kansal/pivot-admin/src/views/resources/Resources.js",["258","259","260","261"],"/Volumes/DATA/Isha Kansal/pivot-admin/src/containers/icons.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/views/users/Users.js",["262","263"],"/Volumes/DATA/Isha Kansal/pivot-admin/src/views/users/User.js",["264","265","266","267","268"],"/Volumes/DATA/Isha Kansal/pivot-admin/src/views/planner/Planner.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/views/users/UserPlanner.js",["269"],"/Volumes/DATA/Isha Kansal/pivot-admin/src/common/toolTip.js",["270"],"/Volumes/DATA/Isha Kansal/pivot-admin/src/common/commonModal.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/views/users/planner/Network.js",["271","272","273","274","275","276","277","278","279"],"/Volumes/DATA/Isha Kansal/pivot-admin/src/views/users/planner/Explore.js",["280","281","282","283","284","285","286","287","288"],"import React, { useState } from \"react\";\nimport Loader from \"../../../loader\";\nimport Search from \"../../../common/search\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n  CBadge,\n  CTabs,\n  CNavItem,\n  CNavLink,\n  CNav,\n  CTabContent,\n  CTabPane,\n  CButton,\n  CCollapse,\n} from \"@coreui/react\";\nimport { Table } from \"reactstrap\";\nconst Explore = (props) => {\n  const [accordion, setAccordion] = useState(1);\n  const getBadge = (status) => {\n    switch (status) {\n      case \"Done\":\n        return \"success\";\n\n      // case \"Not Verified\":\n      //   return \"danger\";\n      // case \"Activated\":\n      //   return \"success\";\n\n      // case \"Blocked\":\n      //   return \"danger\";\n      default:\n        return \"primary\";\n    }\n  };\n\n  return (\n    <div id=\"accordion\">\n      <CCard className=\"mb-0\">\n        <CCardHeader id=\"headingOne\">\n          <CButton\n            block\n            color=\"link\"\n            className=\"text-left m-0 p-0 d-flex justify-content-between\"\n            onClick={() => setAccordion(accordion === 0 ? null : 0)}\n          >\n            <h5 className=\"m-0 p-0\">Introspection</h5>\n            {/* <span className=\"done-txt\">Done</span> */}\n          </CButton>\n        </CCardHeader>\n        <CCollapse show={accordion === 0}>\n          <CCardBody>\n            <CCardHeader>\n              <table className=\"table\">\n                <tbody>\n                  <tr>\n                    <td>Status</td>\n                    <td>\n                      {\" \"}\n                      <CBadge color={getBadge(\"Done\")}>Done</CBadge>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n              {/* <form>\n                <div className=\"text-center search-input\">\n                  <input\n                    type=\"search\"\n                    className=\"form-control\"\n                    placeholder=\"Search\"\n                    required\n                  />\n                </div>\n              </form> */}\n              <Search />\n            </CCardHeader>\n            <Table responsive>\n              <thead>\n                <th className=\"text-nowrap \">Priority Level</th>\n\n                <th>My Interests</th>\n                <th>My Skills</th>\n\n                <th>My Values</th>\n              </thead>\n            </Table>\n          </CCardBody>\n        </CCollapse>\n      </CCard>\n      <CCard className=\"mb-0\">\n        <CCardHeader id=\"headingTwo\">\n          <CButton\n            block\n            color=\"link\"\n            className=\"text-left m-0 p-0\"\n            onClick={() => setAccordion(accordion === 1 ? null : 1)}\n          >\n            <h5 className=\"m-0 p-0\">Extrospection</h5>\n          </CButton>\n        </CCardHeader>\n        <CCollapse show={accordion === 1}>\n          <CCardBody>\n            <CCardHeader>\n              <table className=\"table\">\n                <tbody>\n                  <tr>\n                    <td>Status</td>\n                    <td>\n                      {\" \"}\n                      <CBadge color={getBadge(\"Done\")}>Done</CBadge>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n              <form>\n                <div className=\"text-center search-input\">\n                  <input\n                    type=\"search\"\n                    className=\"form-control\"\n                    placeholder=\"Search\"\n                    required\n                  />\n                </div>\n              </form>\n            </CCardHeader>\n            <Table responsive>\n              <thead>\n                <th className=\"text-nowrap \">My Interests,Skills and Values</th>\n\n                <th>World Needs</th>\n                <th>World Pays For</th>\n              </thead>\n            </Table>\n          </CCardBody>\n        </CCollapse>\n      </CCard>\n      <CCard className=\"mb-0\">\n        <CCardHeader id=\"headingThree\">\n          <CButton\n            block\n            color=\"link\"\n            className=\"text-left m-0 p-0\"\n            onClick={() => setAccordion(accordion === 2 ? null : 2)}\n          >\n            <h5 className=\"m-0 p-0\">Personality Assessment</h5>\n          </CButton>\n        </CCardHeader>\n        <CCollapse show={accordion === 2}>\n          <CCardHeader>\n            <table className=\"table\">\n              <tbody>\n                <tr>\n                  <td>Status</td>\n                  <td>\n                    {\" \"}\n                    <CBadge color={getBadge(\"Done\")}>Done</CBadge>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n            <form>\n              <div className=\"text-center search-input\">\n                <input\n                  type=\"search\"\n                  className=\"form-control\"\n                  placeholder=\"Search\"\n                  required\n                />\n              </div>\n            </form>\n          </CCardHeader>\n          <CCardBody>\n            <thead>\n              <th className=\"text-nowrap \">Career Option</th>\n            </thead>\n          </CCardBody>\n        </CCollapse>\n      </CCard>\n\n      <CCard className=\"mb-0\">\n        <CCardHeader id=\"headingThree\">\n          <CButton\n            block\n            color=\"link\"\n            className=\"text-left m-0 p-0\"\n            onClick={() => setAccordion(accordion === 3 ? null : 3)}\n          >\n            <h5 className=\"m-0 p-0\">Practical Understanding</h5>\n          </CButton>\n        </CCardHeader>\n        <CCollapse show={accordion === 3}>\n          <CCardBody>\n            <CCardHeader>\n              <table className=\"table\">\n                <tbody>\n                  <tr>\n                    <td>Status</td>\n                    <td>\n                      {\" \"}\n                      <CBadge color={getBadge(\"Done\")}>Done</CBadge>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n              <form>\n                <div className=\"text-center search-input\">\n                  <input\n                    type=\"search\"\n                    className=\"form-control\"\n                    placeholder=\"Search\"\n                    required\n                  />\n                </div>\n              </form>\n            </CCardHeader>\n            <Table responsive>\n              <thead>\n                <th className=\"text-nowrap \">Career Option</th>\n\n                <th>Practical Understanding Via</th>\n                <th>Contact Person</th>\n                <th>Contact Email</th>\n                <th>Notes On</th>\n              </thead>\n            </Table>\n          </CCardBody>\n        </CCollapse>\n      </CCard>\n\n      <CCard className=\"mb-0\">\n        <CCardHeader id=\"headingThree\">\n          <CButton\n            block\n            color=\"link\"\n            className=\"text-left m-0 p-0\"\n            onClick={() => setAccordion(accordion === 4 ? null : 4)}\n          >\n            <h5 className=\"m-0 p-0\">Career Options</h5>\n          </CButton>\n        </CCardHeader>\n        <CCollapse show={accordion === 4}>\n          <CCardBody>\n            <CCardHeader>\n              <table className=\"table\">\n                <tbody>\n                  <tr>\n                    <td>Status</td>\n                    <td>\n                      {\" \"}\n                      <CBadge color={getBadge(\"Done\")}>Done</CBadge>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n              <form>\n                <div className=\"text-center search-input\">\n                  <input\n                    type=\"search\"\n                    className=\"form-control\"\n                    placeholder=\"Search\"\n                    required\n                  />\n                </div>\n              </form>\n            </CCardHeader>\n            <Table responsive>\n              <thead>\n                <th className=\"text-nowrap \">Career Option</th>\n\n                <th>Pros</th>\n                <th>Cons</th>\n                <th>Net Score</th>\n                <th>Decision</th>\n              </thead>\n            </Table>\n          </CCardBody>\n        </CCollapse>\n      </CCard>\n    </div>\n  );\n};\nexport default Explore;\n","/Volumes/DATA/Isha Kansal/pivot-admin/src/views/users/planner/Prepare.js",["289","290","291","292","293","294","295","296","297"],"/Volumes/DATA/Isha Kansal/pivot-admin/src/views/users/planner/Apply.js",["298","299","300","301","302","303","304","305","306"],"/Volumes/DATA/Isha Kansal/pivot-admin/src/views/users/planner/Learn.js",["307","308","309","310","311","312","313","314","315"],"/Volumes/DATA/Isha Kansal/pivot-admin/src/store/index.js",["316"],"/Volumes/DATA/Isha Kansal/pivot-admin/src/serviceWorker.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/store/sagas/index.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/store/reducers/index.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/polyfill.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/assets/icons/index.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/views/store/reducer.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/views/store/sagas.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/common/axios.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/config.js",[],"/Volumes/DATA/Isha Kansal/pivot-admin/src/views/users/UserExpertUsage.js",["317","318","319"],"/Volumes/DATA/Isha Kansal/pivot-admin/src/views/users/UserResourceUsage.js",["320","321","322"],"/Volumes/DATA/Isha Kansal/pivot-admin/src/views/experts/ExpertUserUsage.js",["323","324","325"],"/Volumes/DATA/Isha Kansal/pivot-admin/src/common/search.js",["326"],{"ruleId":"327","severity":1,"message":"328","line":168,"column":29,"nodeType":"329","endLine":168,"endColumn":50},{"ruleId":"330","severity":1,"message":"331","line":36,"column":17,"nodeType":"332","messageId":"333","endLine":36,"endColumn":20},{"ruleId":"330","severity":1,"message":"334","line":36,"column":22,"nodeType":"332","messageId":"333","endLine":36,"endColumn":25},{"ruleId":"330","severity":1,"message":"335","line":145,"column":9,"nodeType":"332","messageId":"333","endLine":145,"endColumn":14},{"ruleId":"330","severity":1,"message":"336","line":177,"column":21,"nodeType":"332","messageId":"333","endLine":177,"endColumn":32},{"ruleId":"330","severity":1,"message":"337","line":233,"column":13,"nodeType":"332","messageId":"333","endLine":233,"endColumn":17},{"ruleId":"330","severity":1,"message":"338","line":341,"column":7,"nodeType":"332","messageId":"333","endLine":341,"endColumn":15},{"ruleId":"339","severity":1,"message":"340","line":563,"column":62,"nodeType":"341","messageId":"342","endLine":563,"endColumn":63,"suggestions":"343"},{"ruleId":"339","severity":1,"message":"340","line":563,"column":105,"nodeType":"341","messageId":"342","endLine":563,"endColumn":106,"suggestions":"344"},{"ruleId":"345","severity":1,"message":"346","line":589,"column":72,"nodeType":"347","messageId":"348","endLine":589,"endColumn":74},{"ruleId":"345","severity":1,"message":"346","line":600,"column":71,"nodeType":"347","messageId":"348","endLine":600,"endColumn":73},{"ruleId":"330","severity":1,"message":"349","line":677,"column":7,"nodeType":"332","messageId":"333","endLine":677,"endColumn":18},{"ruleId":"330","severity":1,"message":"350","line":937,"column":7,"nodeType":"332","messageId":"333","endLine":937,"endColumn":19},{"ruleId":"330","severity":1,"message":"337","line":943,"column":7,"nodeType":"332","messageId":"333","endLine":943,"endColumn":11},{"ruleId":"351","severity":1,"message":"352","line":960,"column":17,"nodeType":"353","endLine":960,"endColumn":57},{"ruleId":"327","severity":1,"message":"328","line":1081,"column":25,"nodeType":"329","endLine":1081,"endColumn":39},{"ruleId":"327","severity":1,"message":"328","line":1194,"column":25,"nodeType":"329","endLine":1194,"endColumn":48},{"ruleId":"351","severity":1,"message":"352","line":1311,"column":27,"nodeType":"353","endLine":1311,"endColumn":61},{"ruleId":"351","severity":1,"message":"352","line":1337,"column":33,"nodeType":"353","endLine":1337,"endColumn":70},{"ruleId":"354","replacedBy":"355"},{"ruleId":"356","replacedBy":"357"},{"ruleId":"351","severity":1,"message":"352","line":735,"column":17,"nodeType":"353","endLine":735,"endColumn":57},{"ruleId":"351","severity":1,"message":"352","line":776,"column":25,"nodeType":"353","endLine":779,"endColumn":27},{"ruleId":"351","severity":1,"message":"352","line":955,"column":25,"nodeType":"353","endLine":955,"endColumn":59},{"ruleId":"351","severity":1,"message":"352","line":981,"column":31,"nodeType":"353","endLine":981,"endColumn":68},{"ruleId":"351","severity":1,"message":"352","line":993,"column":25,"nodeType":"353","endLine":993,"endColumn":59},{"ruleId":"351","severity":1,"message":"352","line":1019,"column":31,"nodeType":"353","endLine":1019,"endColumn":68},{"ruleId":"351","severity":1,"message":"352","line":1039,"column":25,"nodeType":"353","endLine":1039,"endColumn":59},{"ruleId":"351","severity":1,"message":"352","line":1066,"column":31,"nodeType":"353","endLine":1066,"endColumn":68},{"ruleId":"330","severity":1,"message":"358","line":3,"column":22,"nodeType":"332","messageId":"333","endLine":3,"endColumn":27},{"ruleId":"330","severity":1,"message":"359","line":1,"column":17,"nodeType":"332","messageId":"333","endLine":1,"endColumn":25},{"ruleId":"330","severity":1,"message":"360","line":13,"column":29,"nodeType":"332","messageId":"333","endLine":13,"endColumn":39},{"ruleId":"361","severity":1,"message":"362","line":3,"column":1,"nodeType":"363","endLine":14,"endColumn":3},{"ruleId":"364","severity":1,"message":"365","line":8,"column":20,"nodeType":"366","messageId":"348","endLine":8,"endColumn":22},{"ruleId":"330","severity":1,"message":"367","line":1,"column":10,"nodeType":"332","messageId":"333","endLine":1,"endColumn":17},{"ruleId":"368","severity":1,"message":"369","line":26,"column":6,"nodeType":"370","endLine":26,"endColumn":8,"suggestions":"371"},{"ruleId":"330","severity":1,"message":"372","line":2,"column":22,"nodeType":"332","messageId":"333","endLine":2,"endColumn":33},{"ruleId":"368","severity":1,"message":"373","line":109,"column":6,"nodeType":"370","endLine":109,"endColumn":14,"suggestions":"374"},{"ruleId":"351","severity":1,"message":"352","line":232,"column":31,"nodeType":"353","endLine":232,"endColumn":66},{"ruleId":"351","severity":1,"message":"352","line":244,"column":31,"nodeType":"353","endLine":244,"endColumn":68},{"ruleId":"351","severity":1,"message":"352","line":258,"column":35,"nodeType":"353","endLine":258,"endColumn":76},{"ruleId":"351","severity":1,"message":"352","line":276,"column":35,"nodeType":"353","endLine":276,"endColumn":74},{"ruleId":"330","severity":1,"message":"375","line":5,"column":3,"nodeType":"332","messageId":"333","endLine":5,"endColumn":14},{"ruleId":"368","severity":1,"message":"369","line":41,"column":6,"nodeType":"370","endLine":41,"endColumn":8,"suggestions":"376"},{"ruleId":"330","severity":1,"message":"372","line":2,"column":22,"nodeType":"332","messageId":"333","endLine":2,"endColumn":33},{"ruleId":"368","severity":1,"message":"377","line":88,"column":6,"nodeType":"370","endLine":88,"endColumn":14,"suggestions":"378"},{"ruleId":"351","severity":1,"message":"352","line":202,"column":31,"nodeType":"353","endLine":202,"endColumn":66},{"ruleId":"351","severity":1,"message":"352","line":212,"column":31,"nodeType":"353","endLine":212,"endColumn":68},{"ruleId":"330","severity":1,"message":"372","line":2,"column":22,"nodeType":"332","messageId":"333","endLine":2,"endColumn":33},{"ruleId":"368","severity":1,"message":"379","line":52,"column":6,"nodeType":"370","endLine":52,"endColumn":14,"suggestions":"380"},{"ruleId":"330","severity":1,"message":"381","line":1,"column":38,"nodeType":"332","messageId":"333","endLine":1,"endColumn":46},{"ruleId":"330","severity":1,"message":"382","line":6,"column":10,"nodeType":"332","messageId":"333","endLine":6,"endColumn":14},{"ruleId":"330","severity":1,"message":"383","line":7,"column":8,"nodeType":"332","messageId":"333","endLine":7,"endColumn":10},{"ruleId":"330","severity":1,"message":"375","line":11,"column":3,"nodeType":"332","messageId":"333","endLine":11,"endColumn":14},{"ruleId":"368","severity":1,"message":"369","line":46,"column":6,"nodeType":"370","endLine":46,"endColumn":8,"suggestions":"384"},{"ruleId":"330","severity":1,"message":"385","line":2,"column":8,"nodeType":"332","messageId":"333","endLine":2,"endColumn":14},{"ruleId":"361","severity":1,"message":"362","line":4,"column":1,"nodeType":"363","endLine":19,"endColumn":3},{"ruleId":"330","severity":1,"message":"385","line":2,"column":8,"nodeType":"332","messageId":"333","endLine":2,"endColumn":14},{"ruleId":"330","severity":1,"message":"386","line":7,"column":3,"nodeType":"332","messageId":"333","endLine":7,"endColumn":7},{"ruleId":"330","severity":1,"message":"387","line":8,"column":3,"nodeType":"332","messageId":"333","endLine":8,"endColumn":7},{"ruleId":"330","severity":1,"message":"388","line":10,"column":3,"nodeType":"332","messageId":"333","endLine":10,"endColumn":8},{"ruleId":"330","severity":1,"message":"389","line":11,"column":3,"nodeType":"332","messageId":"333","endLine":11,"endColumn":11},{"ruleId":"330","severity":1,"message":"390","line":12,"column":3,"nodeType":"332","messageId":"333","endLine":12,"endColumn":11},{"ruleId":"330","severity":1,"message":"391","line":13,"column":3,"nodeType":"332","messageId":"333","endLine":13,"endColumn":7},{"ruleId":"330","severity":1,"message":"392","line":14,"column":3,"nodeType":"332","messageId":"333","endLine":14,"endColumn":14},{"ruleId":"330","severity":1,"message":"393","line":15,"column":3,"nodeType":"332","messageId":"333","endLine":15,"endColumn":11},{"ruleId":"330","severity":1,"message":"385","line":2,"column":8,"nodeType":"332","messageId":"333","endLine":2,"endColumn":14},{"ruleId":"330","severity":1,"message":"386","line":8,"column":3,"nodeType":"332","messageId":"333","endLine":8,"endColumn":7},{"ruleId":"330","severity":1,"message":"387","line":9,"column":3,"nodeType":"332","messageId":"333","endLine":9,"endColumn":7},{"ruleId":"330","severity":1,"message":"388","line":11,"column":3,"nodeType":"332","messageId":"333","endLine":11,"endColumn":8},{"ruleId":"330","severity":1,"message":"389","line":12,"column":3,"nodeType":"332","messageId":"333","endLine":12,"endColumn":11},{"ruleId":"330","severity":1,"message":"390","line":13,"column":3,"nodeType":"332","messageId":"333","endLine":13,"endColumn":11},{"ruleId":"330","severity":1,"message":"391","line":14,"column":3,"nodeType":"332","messageId":"333","endLine":14,"endColumn":7},{"ruleId":"330","severity":1,"message":"392","line":15,"column":3,"nodeType":"332","messageId":"333","endLine":15,"endColumn":14},{"ruleId":"330","severity":1,"message":"393","line":16,"column":3,"nodeType":"332","messageId":"333","endLine":16,"endColumn":11},{"ruleId":"330","severity":1,"message":"385","line":2,"column":8,"nodeType":"332","messageId":"333","endLine":2,"endColumn":14},{"ruleId":"330","severity":1,"message":"386","line":7,"column":3,"nodeType":"332","messageId":"333","endLine":7,"endColumn":7},{"ruleId":"330","severity":1,"message":"387","line":8,"column":3,"nodeType":"332","messageId":"333","endLine":8,"endColumn":7},{"ruleId":"330","severity":1,"message":"388","line":10,"column":3,"nodeType":"332","messageId":"333","endLine":10,"endColumn":8},{"ruleId":"330","severity":1,"message":"389","line":11,"column":3,"nodeType":"332","messageId":"333","endLine":11,"endColumn":11},{"ruleId":"330","severity":1,"message":"390","line":12,"column":3,"nodeType":"332","messageId":"333","endLine":12,"endColumn":11},{"ruleId":"330","severity":1,"message":"391","line":13,"column":3,"nodeType":"332","messageId":"333","endLine":13,"endColumn":7},{"ruleId":"330","severity":1,"message":"392","line":14,"column":3,"nodeType":"332","messageId":"333","endLine":14,"endColumn":14},{"ruleId":"330","severity":1,"message":"393","line":15,"column":3,"nodeType":"332","messageId":"333","endLine":15,"endColumn":11},{"ruleId":"330","severity":1,"message":"385","line":2,"column":8,"nodeType":"332","messageId":"333","endLine":2,"endColumn":14},{"ruleId":"330","severity":1,"message":"386","line":7,"column":3,"nodeType":"332","messageId":"333","endLine":7,"endColumn":7},{"ruleId":"330","severity":1,"message":"387","line":8,"column":3,"nodeType":"332","messageId":"333","endLine":8,"endColumn":7},{"ruleId":"330","severity":1,"message":"388","line":10,"column":3,"nodeType":"332","messageId":"333","endLine":10,"endColumn":8},{"ruleId":"330","severity":1,"message":"389","line":11,"column":3,"nodeType":"332","messageId":"333","endLine":11,"endColumn":11},{"ruleId":"330","severity":1,"message":"390","line":12,"column":3,"nodeType":"332","messageId":"333","endLine":12,"endColumn":11},{"ruleId":"330","severity":1,"message":"391","line":13,"column":3,"nodeType":"332","messageId":"333","endLine":13,"endColumn":7},{"ruleId":"330","severity":1,"message":"392","line":14,"column":3,"nodeType":"332","messageId":"333","endLine":14,"endColumn":14},{"ruleId":"330","severity":1,"message":"393","line":15,"column":3,"nodeType":"332","messageId":"333","endLine":15,"endColumn":11},{"ruleId":"330","severity":1,"message":"385","line":2,"column":8,"nodeType":"332","messageId":"333","endLine":2,"endColumn":14},{"ruleId":"330","severity":1,"message":"386","line":7,"column":3,"nodeType":"332","messageId":"333","endLine":7,"endColumn":7},{"ruleId":"330","severity":1,"message":"387","line":8,"column":3,"nodeType":"332","messageId":"333","endLine":8,"endColumn":7},{"ruleId":"330","severity":1,"message":"388","line":10,"column":3,"nodeType":"332","messageId":"333","endLine":10,"endColumn":8},{"ruleId":"330","severity":1,"message":"389","line":11,"column":3,"nodeType":"332","messageId":"333","endLine":11,"endColumn":11},{"ruleId":"330","severity":1,"message":"390","line":12,"column":3,"nodeType":"332","messageId":"333","endLine":12,"endColumn":11},{"ruleId":"330","severity":1,"message":"391","line":13,"column":3,"nodeType":"332","messageId":"333","endLine":13,"endColumn":7},{"ruleId":"330","severity":1,"message":"392","line":14,"column":3,"nodeType":"332","messageId":"333","endLine":14,"endColumn":14},{"ruleId":"330","severity":1,"message":"393","line":15,"column":3,"nodeType":"332","messageId":"333","endLine":15,"endColumn":11},{"ruleId":"361","severity":1,"message":"394","line":28,"column":1,"nodeType":"363","endLine":28,"endColumn":37},{"ruleId":"330","severity":1,"message":"375","line":3,"column":28,"nodeType":"332","messageId":"333","endLine":3,"endColumn":39},{"ruleId":"330","severity":1,"message":"395","line":20,"column":10,"nodeType":"332","messageId":"333","endLine":20,"endColumn":14},{"ruleId":"368","severity":1,"message":"396","line":45,"column":6,"nodeType":"370","endLine":45,"endColumn":14,"suggestions":"397"},{"ruleId":"330","severity":1,"message":"375","line":11,"column":28,"nodeType":"332","messageId":"333","endLine":11,"endColumn":39},{"ruleId":"330","severity":1,"message":"395","line":20,"column":10,"nodeType":"332","messageId":"333","endLine":20,"endColumn":14},{"ruleId":"368","severity":1,"message":"396","line":50,"column":6,"nodeType":"370","endLine":50,"endColumn":14,"suggestions":"398"},{"ruleId":"330","severity":1,"message":"375","line":3,"column":28,"nodeType":"332","messageId":"333","endLine":3,"endColumn":39},{"ruleId":"330","severity":1,"message":"399","line":14,"column":10,"nodeType":"332","messageId":"333","endLine":14,"endColumn":16},{"ruleId":"368","severity":1,"message":"396","line":75,"column":6,"nodeType":"370","endLine":75,"endColumn":14,"suggestions":"400"},{"ruleId":"330","severity":1,"message":"401","line":2,"column":10,"nodeType":"332","messageId":"333","endLine":2,"endColumn":19},"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'Col' is defined but never used.","'price' is assigned a value but never used.","'serviceList' is assigned a value but never used.","'unit' is assigned a value but never used.","'industry' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\+.","Literal","unnecessaryEscape",["402","403"],["404","405"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'profile_pic' is assigned a value but never used.","'selectedDate' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["406"],"no-negated-in-lhs",["407"],"'CFade' is defined but never used.","'useState' is defined but never used.","'TheSidebar' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","'Planner' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'props'. Either include them or remove the dependency array.","ArrayExpression",["408"],"'useLocation' is defined but never used.","React Hook useEffect has a missing dependency: 'callApiToFetchAllExperts'. Either include it or remove the dependency array.",["409"],"'CCardHeader' is defined but never used.",["410"],"React Hook useEffect has a missing dependency: 'callApiToFetchAllResources'. Either include it or remove the dependency array.",["411"],"React Hook useEffect has a missing dependency: 'callApiToFetchAllUsers'. Either include it or remove the dependency array.",["412"],"'Fragment' is defined but never used.","'Link' is defined but never used.","'cx' is defined but never used.",["413"],"'Loader' is defined but never used.","'CCol' is defined but never used.","'CRow' is defined but never used.","'CTabs' is defined but never used.","'CNavItem' is defined but never used.","'CNavLink' is defined but never used.","'CNav' is defined but never used.","'CTabContent' is defined but never used.","'CTabPane' is defined but never used.","Assign object to a variable before exporting as module default","'user' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'offset', and 'props'. Either include them or remove the dependency array.",["414"],["415"],"'expert' is assigned a value but never used.",["416"],"'useParams' is defined but never used.",{"messageId":"417","fix":"418","desc":"419"},{"messageId":"420","fix":"421","desc":"422"},{"messageId":"417","fix":"423","desc":"419"},{"messageId":"420","fix":"424","desc":"422"},"no-global-assign","no-unsafe-negation",{"desc":"425","fix":"426"},{"desc":"427","fix":"428"},{"desc":"425","fix":"429"},{"desc":"430","fix":"431"},{"desc":"432","fix":"433"},{"desc":"425","fix":"434"},{"desc":"435","fix":"436"},{"desc":"435","fix":"437"},{"desc":"435","fix":"438"},"removeEscape",{"range":"439","text":"440"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"441","text":"442"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"443","text":"440"},{"range":"444","text":"442"},"Update the dependencies array to be: [dispatch, props]",{"range":"445","text":"446"},"Update the dependencies array to be: [callApiToFetchAllExperts, search]",{"range":"447","text":"448"},{"range":"449","text":"446"},"Update the dependencies array to be: [callApiToFetchAllResources, search]",{"range":"450","text":"451"},"Update the dependencies array to be: [callApiToFetchAllUsers, search]",{"range":"452","text":"453"},{"range":"454","text":"446"},"Update the dependencies array to be: [dispatch, offset, props, search]",{"range":"455","text":"456"},{"range":"457","text":"456"},{"range":"458","text":"456"},[12880,12881],"",[12880,12880],"\\",[12923,12924],[12923,12923],[820,822],"[dispatch, props]",[3243,3251],"[callApiToFetchAllExperts, search]",[1080,1082],[2714,2722],"[callApiToFetchAllResources, search]",[1703,1711],"[callApiToFetchAllUsers, search]",[1247,1249],[1537,1545],"[dispatch, offset, props, search]",[1748,1756],[2523,2531]]